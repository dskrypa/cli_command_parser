Search.setIndex({"docnames": ["advanced", "api", "api/cli_command_parser.actions", "api/cli_command_parser.annotations", "api/cli_command_parser.command_parameters", "api/cli_command_parser.commands", "api/cli_command_parser.config", "api/cli_command_parser.context", "api/cli_command_parser.core", "api/cli_command_parser.documentation", "api/cli_command_parser.error_handling", "api/cli_command_parser.exceptions", "api/cli_command_parser.formatting", "api/cli_command_parser.formatting.commands", "api/cli_command_parser.formatting.params", "api/cli_command_parser.formatting.restructured_text", "api/cli_command_parser.formatting.utils", "api/cli_command_parser.inputs", "api/cli_command_parser.inputs.base", "api/cli_command_parser.inputs.choices", "api/cli_command_parser.inputs.exceptions", "api/cli_command_parser.inputs.files", "api/cli_command_parser.inputs.numeric", "api/cli_command_parser.inputs.time", "api/cli_command_parser.inputs.utils", "api/cli_command_parser.metadata", "api/cli_command_parser.nargs", "api/cli_command_parser.parameters", "api/cli_command_parser.parameters.base", "api/cli_command_parser.parameters.choice_map", "api/cli_command_parser.parameters.groups", "api/cli_command_parser.parameters.option_strings", "api/cli_command_parser.parameters.options", "api/cli_command_parser.parameters.pass_thru", "api/cli_command_parser.parameters.positionals", "api/cli_command_parser.parse_tree", "api/cli_command_parser.parser", "api/cli_command_parser.testing", "api/cli_command_parser.typing", "api/cli_command_parser.utils", "commands", "configuration", "documentation", "examples", "examples/action_with_args", "examples/advanced_subcommand", "examples/basic_subcommand", "examples/command_wrapper", "examples/complex", "examples/custom_inputs", "examples/echo", "examples/grouped_action_flags", "examples/hello_world", "examples/rest_api_wrapper", "examples/shared_logging_init", "examples/simple_flags", "groups", "index", "inputs", "intro", "parameters", "subcommands", "testing"], "filenames": ["advanced.rst", "api.rst", "api/cli_command_parser.actions.rst", "api/cli_command_parser.annotations.rst", "api/cli_command_parser.command_parameters.rst", "api/cli_command_parser.commands.rst", "api/cli_command_parser.config.rst", "api/cli_command_parser.context.rst", "api/cli_command_parser.core.rst", "api/cli_command_parser.documentation.rst", "api/cli_command_parser.error_handling.rst", "api/cli_command_parser.exceptions.rst", "api/cli_command_parser.formatting.rst", "api/cli_command_parser.formatting.commands.rst", "api/cli_command_parser.formatting.params.rst", "api/cli_command_parser.formatting.restructured_text.rst", "api/cli_command_parser.formatting.utils.rst", "api/cli_command_parser.inputs.rst", "api/cli_command_parser.inputs.base.rst", "api/cli_command_parser.inputs.choices.rst", "api/cli_command_parser.inputs.exceptions.rst", "api/cli_command_parser.inputs.files.rst", "api/cli_command_parser.inputs.numeric.rst", "api/cli_command_parser.inputs.time.rst", "api/cli_command_parser.inputs.utils.rst", "api/cli_command_parser.metadata.rst", "api/cli_command_parser.nargs.rst", "api/cli_command_parser.parameters.rst", "api/cli_command_parser.parameters.base.rst", "api/cli_command_parser.parameters.choice_map.rst", "api/cli_command_parser.parameters.groups.rst", "api/cli_command_parser.parameters.option_strings.rst", "api/cli_command_parser.parameters.options.rst", "api/cli_command_parser.parameters.pass_thru.rst", "api/cli_command_parser.parameters.positionals.rst", "api/cli_command_parser.parse_tree.rst", "api/cli_command_parser.parser.rst", "api/cli_command_parser.testing.rst", "api/cli_command_parser.typing.rst", "api/cli_command_parser.utils.rst", "commands.rst", "configuration.rst", "documentation.rst", "examples.rst", "examples/action_with_args.rst", "examples/advanced_subcommand.rst", "examples/basic_subcommand.rst", "examples/command_wrapper.rst", "examples/complex.rst", "examples/custom_inputs.rst", "examples/echo.rst", "examples/grouped_action_flags.rst", "examples/hello_world.rst", "examples/rest_api_wrapper.rst", "examples/shared_logging_init.rst", "examples/simple_flags.rst", "groups.rst", "index.rst", "inputs.rst", "intro.rst", "parameters.rst", "subcommands.rst", "testing.rst"], "titles": ["Advanced Usage", "API Documentation", "Actions Module", "Annotations Module", "Command_Parameters Module", "Commands Module", "Config Module", "Context Module", "Core Module", "Documentation Module", "Error_Handling Module", "Exceptions Module", "Formatting Package", "Commands Module", "Params Module", "Restructured_Text Module", "Utils Module", "Inputs Package", "Base Module", "Choices Module", "Exceptions Module", "Files Module", "Numeric Module", "Time Module", "Utils Module", "Metadata Module", "Nargs Module", "Parameters Package", "Base Module", "Choice_Map Module", "Groups Module", "Option_Strings Module", "Options Module", "Pass_Thru Module", "Positionals Module", "Parse_Tree Module", "Parser Module", "Testing Module", "Typing Module", "Utils Module", "Commands", "Configuration", "Documentation", "Example Scripts", "Action With Args", "Advanced Subcommand", "Basic Subcommand", "Command Wrapper", "Complex Example", "Custom Inputs", "Echo", "Grouped Action Flags", "Hello World", "Rest Api Wrapper", "Shared Logging Init", "Simple Flags", "Parameter Groups", "CLI Command Parser", "Input Types", "Getting Started", "Parameters", "Subcommands", "Testing Commands"], "terms": {"while": [0, 7, 9, 11, 29, 32, 40, 57, 60, 61], "command": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 25, 29, 32, 34, 35, 37, 42, 43, 48, 52, 56, 58, 59, 60, 61], "ar": [0, 4, 5, 6, 7, 8, 9, 14, 19, 21, 23, 26, 28, 29, 30, 32, 34, 40, 41, 42, 48, 56, 57, 58, 59, 60, 61, 62], "intend": [0, 5, 7, 14, 30, 32, 40, 48, 60], "self": [0, 2, 10, 40, 56, 57, 58, 59, 60, 61, 62], "contain": [0, 6, 7, 8, 9, 11, 14, 15, 29, 31, 32, 34, 41, 42, 49, 56, 58, 59, 60, 61], "i": [0, 4, 5, 6, 7, 9, 10, 11, 14, 15, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 34, 39, 40, 41, 42, 44, 48, 53, 56, 57, 58, 59, 60, 61, 62], "possibl": [0, 29, 41, 42, 56, 59, 60, 61, 62], "interact": 0, "them": [0, 9, 14, 22, 29, 33, 40, 48, 53, 56, 58, 60, 61, 62], "after": [0, 4, 5, 6, 7, 10, 30, 32, 40, 41, 59, 60], "call": [0, 5, 6, 7, 8, 9, 10, 14, 18, 19, 21, 29, 30, 31, 32, 34, 40, 41, 58, 59, 60, 61, 62], "parse_and_run": [0, 1, 5, 40, 61, 62], "which": [0, 5, 6, 7, 8, 21, 22, 23, 29, 32, 34, 40, 47, 56, 58, 60, 61], "return": [0, 5, 6, 7, 8, 9, 14, 15, 18, 22, 26, 29, 30, 34, 36, 41, 58, 60, 61], "instanc": [0, 5, 41], "execut": [0, 7, 29, 32, 60, 61, 62], "exampl": [0, 21, 28, 40, 42, 52, 58, 59, 60, 61, 62], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 56, 57, 58, 59, 60, 61, 62], "foo": [0, 6, 32, 40, 42, 43, 48, 53, 55, 56, 59, 60, 61], "bar": [0, 1, 6, 12, 15, 32, 40, 43, 48, 53, 55, 56, 60, 61], "flag": [0, 1, 4, 6, 7, 27, 28, 32, 39, 40, 41, 43, 56, 59, 61], "b": [0, 37, 40, 51, 55, 56, 58, 60, 61, 62], "default": [0, 1, 5, 6, 7, 8, 9, 10, 14, 15, 17, 19, 21, 22, 24, 27, 28, 29, 30, 32, 33, 34, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "true": [0, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 32, 35, 40, 41, 42, 55, 56, 58, 60], "baz": [0, 40, 43, 53, 56, 60, 61], "posit": [0, 1, 4, 5, 6, 8, 27, 28, 29, 36, 40, 41, 44, 45, 46, 47, 48, 50, 53, 54, 56, 59, 61], "narg": [0, 1, 6, 7, 27, 28, 29, 32, 33, 34, 40, 41, 56, 60, 61], "def": [0, 40, 42, 56, 57, 58, 59, 60, 61, 62], "main": [0, 1, 4, 5, 6, 8, 32, 40, 41, 48, 56, 57, 58, 59, 60, 61, 62], "print": [0, 2, 10, 40, 41, 42, 44, 45, 46, 48, 50, 53, 56, 57, 58, 59, 60, 61, 62], "f": [0, 40, 42, 49, 55, 56, 57, 58, 59, 60, 61, 62], "test": [0, 1, 8, 40, 56, 57], "one": [0, 4, 5, 6, 9, 11, 14, 19, 20, 22, 26, 28, 30, 32, 40, 42, 56, 58, 59, 60, 61], "fals": [0, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 35, 37, 40, 41, 42, 56, 57, 58, 59, 60, 61, 62], "__main__": [0, 40, 57, 59, 61], "0x26dfcad6e00": 0, "still": [0, 18, 41, 62], "thei": [0, 5, 6, 7, 8, 14, 26, 29, 30, 32, 40, 41, 48, 56, 58, 59, 60, 61, 62], "were": [0, 5, 6, 7, 11, 14, 32, 36, 40, 41, 56, 58, 59, 60], "from": [0, 3, 7, 9, 14, 23, 29, 30, 32, 33, 34, 40, 41, 42, 57, 58, 59, 60, 61, 62], "insid": [0, 30, 56, 59, 60], "also": [0, 4, 26, 29, 30, 32, 40, 41, 42, 56, 58, 59, 60, 61, 62], "": [0, 4, 5, 6, 7, 8, 10, 11, 14, 20, 29, 40, 41, 48, 55, 56, 57, 59, 60, 61, 62], "easier": [0, 7], "inspect": 0, "an": [0, 4, 6, 7, 8, 9, 10, 11, 14, 15, 19, 22, 28, 29, 30, 32, 34, 40, 41, 42, 48, 53, 54, 56, 57, 58, 59, 60, 61, 62], "termin": [0, 1, 6, 7, 14, 39, 41, 42], "ctx": [0, 1, 4, 5, 36], "lib": 0, "cli_command_pars": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 57, 58, 59, 61, 62], "0x26dfa94fbb0": 0, "param": [0, 1, 6, 7, 8, 11, 12, 13, 30, 31, 33, 35, 36, 41, 61], "commandparamet": [0, 1, 4, 6, 7, 8, 13, 41], "1": [0, 6, 7, 13, 15, 22, 23, 24, 28, 32, 34, 39, 40, 42, 49, 52, 56, 57, 58, 59, 60, 61, 62], "option": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62], "2": [0, 6, 7, 11, 16, 24, 32, 41, 49, 56, 58, 60, 61, 62], "get_pars": [0, 1, 7, 62], "help": [0, 1, 2, 4, 5, 6, 8, 9, 13, 14, 16, 25, 27, 28, 29, 30, 32, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62], "argv": [0, 5, 7, 8, 37, 40, 41, 59], "The": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 36, 40, 41, 42, 44, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62], "object": [0, 4, 6, 7, 8, 9, 10, 13, 14, 15, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 39, 40, 41, 53, 56, 58, 60, 61], "store": [0, 5, 7, 18, 19, 21, 29, 30, 32, 34, 41, 58, 60, 61], "inform": [0, 59, 60], "about": [0, 10, 59], "configur": [0, 5, 6, 7, 14, 28, 32, 40, 42, 58, 60], "defin": [0, 4, 5, 6, 8, 10, 11, 20, 28, 29, 30, 32, 34, 41, 42, 48, 56, 57, 58, 59, 60, 61, 62], "organ": [0, 40, 56, 57, 61], "input": [0, 1, 6, 7, 18, 19, 20, 21, 22, 23, 24, 36, 40, 43, 57, 60, 62], "entri": [0, 5, 14, 40, 48, 61], "abov": [0, 5, 26, 32, 40, 42, 58, 59, 61, 62], "automat": [0, 22, 28, 29, 32, 40, 41, 42, 57, 58, 59, 60], "ad": [0, 6, 8, 28, 32, 41, 42, 56, 57, 58, 59, 60], "repres": [0, 6, 15, 32, 58, 60], "action_flag": [0, 1, 4, 5, 6, 8, 27, 32, 41], "store_const": [0, 1, 27, 32, 60], "const": [0, 1, 27, 32, 60], "requir": [0, 6, 8, 11, 14, 19, 26, 28, 29, 30, 32, 33, 34, 40, 41, 56, 57, 58, 60], "show": [0, 1, 6, 9, 11, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61], "thi": [0, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "messag": [0, 1, 8, 11, 28, 30, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "exit": [0, 1, 2, 10, 11, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "order": [0, 5, 15, 30, 32, 42, 56, 60], "inf": [0, 32, 60], "before_main": [0, 1, 4, 5, 27, 32, 40, 42, 56, 60], "0": [0, 8, 14, 16, 29, 32, 34, 35, 36, 41, 45, 48, 49, 53, 54, 56, 58, 60, 61, 62], "func": [0, 1, 27, 32, 37, 39, 60], "function": [0, 5, 7, 8, 9, 10, 21, 24, 29, 32, 34, 39, 40, 57, 58, 59, 60, 61], "help_act": [0, 1, 2], "gener": [0, 5, 6, 8, 9, 13, 14, 18, 28, 29, 32, 40, 41, 57, 58, 59, 60, 61], "avoid": [0, 40, 59, 61], "potenti": [0, 6, 11, 41], "conflict": [0, 4, 40, 56, 59, 61], "other": [0, 5, 6, 11, 14, 22, 23, 28, 29, 30, 32, 33, 40, 42, 55, 56, 58, 59, 61, 62], "method": [0, 5, 6, 7, 8, 14, 28, 29, 30, 32, 34, 41, 57, 58, 59, 60, 61, 62], "It": [0, 4, 7, 14, 28, 29, 41, 42, 56, 57, 60, 61, 62], "alwai": [0, 4, 6, 8, 28, 32, 41, 56, 60], "have": [0, 5, 6, 14, 22, 26, 28, 30, 32, 34, 40, 58, 60, 61], "same": [0, 6, 14, 26, 28, 29, 32, 34, 39, 40, 41, 42, 56, 58, 60, 61, 62], "number": [0, 5, 7, 26, 29, 32, 34, 36, 42, 48, 49, 52, 53, 57, 58, 59, 60, 61, 62], "sinc": [0, 22, 40, 41, 58, 60, 61], "its": [0, 4, 5, 13, 15, 21, 40, 56, 58, 59, 60, 61], "neg": [0, 60], "infin": 0, "take": [0, 11, 28, 29, 32, 33, 34, 40, 42, 48, 53, 56, 60, 61], "preced": [0, 32, 33, 34, 42, 60], "over": [0, 32, 42, 60, 61], "ani": [0, 1, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 42, 48, 52, 56, 58, 59, 60, 61, 62], "There": [0, 40, 57], "special": [0, 57, 60, 62], "handl": [0, 5, 6, 7, 8, 10, 16, 21, 22, 23, 24, 26, 28, 29, 36, 40, 57, 58, 59, 61, 62], "parser": [0, 1, 5, 7, 11, 28, 40, 41, 52, 59], "specif": [0, 21, 26, 32, 34, 40, 58, 60, 61], "allow": [0, 1, 5, 6, 7, 8, 9, 19, 21, 22, 26, 29, 30, 32, 34, 41, 56, 57, 58, 60], "process": [0, 4, 5, 10, 14, 18, 19, 21, 22, 28, 33, 40, 58, 60, 61], "when": [0, 4, 5, 6, 8, 11, 14, 18, 20, 21, 24, 29, 30, 32, 34, 39, 40, 41, 42, 56, 58, 59, 60, 61, 62], "would": [0, 6, 7, 11, 16, 18, 32, 40, 41, 48, 53, 56, 58, 59, 60, 61, 62], "otherwis": [0, 21, 22, 28, 30, 32, 34, 56, 58, 60], "fail": [0, 1, 4, 7, 20, 32, 60], "A": [0, 4, 5, 6, 7, 8, 9, 14, 18, 19, 22, 28, 30, 32, 34, 40, 41, 48, 56, 58, 60, 61, 62], "helper": [0, 7, 26, 28, 37, 42, 60], "exist": [0, 7, 9, 21, 24, 40, 41, 58, 60, 61], "retriev": [0, 7], "without": [0, 5, 6, 28, 29, 30, 32, 33, 40, 58, 59, 60, 61, 62], "need": [0, 5, 21, 23, 29, 40, 42, 56, 57, 58, 59, 60, 61, 62], "deal": 0, "attribut": [0, 4, 28, 40, 41, 59, 60, 62], "like": [0, 5, 10, 14, 22, 23, 28, 32, 41, 42, 48, 58, 60], "continu": [0, 5], "work": [0, 5, 30, 39, 40, 62], "even": [0, 4, 5, 6, 8, 32, 41, 57, 59, 60, 61], "given": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 19, 21, 23, 24, 26, 28, 29, 30, 32, 34, 36, 41, 42, 47, 56, 58, 60, 61], "overrid": [0, 5, 6, 7, 28, 32, 40, 60, 62], "differ": [0, 14, 26, 29, 32, 41, 42, 60, 61], "us": [0, 4, 5, 6, 7, 8, 9, 11, 14, 15, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 36, 39, 41, 42, 48, 52, 56, 57, 58, 59, 60, 61, 62], "As": [0, 5], "conveni": [0, 5, 40, 41, 58, 61], "accept": [0, 6, 7, 18, 19, 21, 26, 28, 29, 32, 34, 41, 56, 58, 60], "collect": [0, 4, 6, 7, 11, 19, 20, 26, 28, 29, 31, 33, 58, 60, 61], "abc": [0, 5, 8, 18, 28, 30, 56, 61], "callabl": [0, 6, 7, 10, 14, 21, 22, 28, 29, 32, 34, 37, 39, 41, 58, 60], "filter": [0, 7, 56], "dict": [0, 6, 7, 8, 9, 14, 15, 19, 29, 35, 37, 41, 58, 62], "onli": [0, 5, 6, 7, 9, 11, 14, 15, 21, 22, 28, 29, 30, 32, 33, 34, 36, 39, 40, 41, 56, 58, 59, 60, 61], "kei": [0, 7, 15, 19, 32, 58, 60], "match": [0, 1, 6, 7, 11, 17, 19, 20, 21, 24, 26, 41, 58, 61], "signatur": [0, 7, 40], "var_keyword": [0, 7], "e": [0, 7, 10, 29, 30, 32, 53, 56, 60, 61], "kwarg": [0, 5, 6, 7, 8, 9, 15, 19, 21, 25, 28, 29, 32, 33, 34, 37, 39, 41], "exclud": [0, 7], "cannot": [0, 7, 9, 19, 30, 41, 56, 58, 60], "pass": [0, 5, 7, 15, 21, 22, 28, 29, 32, 33, 34, 36, 40, 41, 58, 59, 60], "keyword": [0, 5, 6, 7, 15, 21, 28, 29, 32, 33, 34, 40, 41, 60, 61], "must": [0, 5, 6, 7, 19, 21, 26, 28, 29, 30, 32, 33, 34, 40, 41, 56, 58, 60, 61], "In": [0, 5, 42, 56, 58, 61], "some": [0, 4, 8, 23, 24, 40, 41, 42, 58, 60, 61, 62], "case": [0, 5, 8, 9, 19, 24, 26, 29, 30, 32, 37, 40, 41, 48, 56, 58, 60, 61, 62], "subcommand": [0, 1, 4, 5, 6, 8, 10, 13, 14, 27, 28, 29, 30, 40, 41, 42, 43, 56, 57], "mai": [0, 5, 6, 8, 9, 14, 18, 22, 23, 28, 29, 32, 34, 40, 41, 56, 58, 59, 60, 61, 62], "those": [0, 5, 7, 9, 32, 40, 58, 60, 61], "parent": [0, 1, 4, 5, 6, 7, 8, 10, 17, 21, 24, 25, 29, 35, 40, 58, 61], "common": [0, 2, 5, 40, 48, 53, 56, 57, 58, 60], "occur": [0, 5], "multipl": [0, 5, 6, 8, 11, 23, 32, 40, 41, 45, 48, 53, 54, 56, 58, 59, 60, 61], "level": [0, 6, 8, 9, 15, 30, 40, 41, 56, 57, 60, 61], "where": [0, 6, 15, 18, 19, 29, 30, 58, 60, 61], "each": [0, 6, 8, 14, 15, 40, 41, 44, 57, 58, 59, 60, 61], "ha": [0, 4, 7, 10, 26, 40, 58, 59, 61, 62], "sub_cmd": [0, 40, 56, 61], "sometim": [0, 62], "necessari": [0, 5, 16, 18, 28, 29, 40, 57], "know": 0, "get_raw_arg": [0, 1, 7], "simplifi": [0, 48, 60, 61], "follow": [0, 5, 6, 8, 14, 28, 41, 42, 48, 56, 58, 59, 60, 61], "we": [0, 40, 42, 56, 58, 59, 61, 62], "can": [0, 5, 6, 7, 28, 29, 32, 40, 41, 42, 45, 48, 53, 54, 56, 57, 58, 59, 60, 61, 62], "see": [0, 15, 21, 32, 34, 41, 42, 56, 58, 59, 60, 61, 62], "directli": [0, 28, 29, 58, 60, 62], "result": [0, 1, 5, 6, 7, 11, 21, 27, 28, 29, 32, 33, 40, 41, 42, 53, 54, 56, 58, 59, 60, 61, 62], "cmd": [0, 37, 62], "both": [0, 1, 6, 14, 21, 32, 34, 56, 58, 60, 61, 62], "note": [0, 61], "list": [0, 4, 5, 7, 8, 9, 14, 15, 28, 29, 30, 31, 32, 34, 36, 40, 58, 59, 60], "instead": [0, 5, 9, 14, 19, 24, 28, 29, 40, 48, 53, 56, 58, 59, 60, 61], "string": [0, 9, 14, 15, 19, 29, 31, 32, 34, 39, 40, 41, 58, 59, 60], "due": [0, 9, 42], "wai": [0, 6, 7, 24, 26, 29, 40, 56, 58, 59, 60, 61], "space": [0, 29, 33, 60, 61], "support": [0, 6, 14, 22, 28, 29, 32, 33, 34, 40, 41, 42, 56, 57, 58, 59, 60, 61], "within": [0, 40, 58, 62], "variabl": [0, 1, 6, 14, 26, 32, 34, 40, 41, 60], "g": [0, 53, 56], "altern": [0, 5, 6, 14, 23, 32, 40, 41, 58, 60], "doubl": [0, 44, 60], "underscor": [0, 1, 6, 41], "advantag": [0, 40, 61], "nativ": 0, "mangl": 0, "do": [0, 5, 29, 40, 56, 58, 60, 61, 62], "direct": [0, 5, 8, 15, 22, 40, 56], "wa": [0, 5, 6, 7, 8, 10, 11, 14, 15, 20, 22, 24, 29, 30, 32, 34, 39, 40, 41, 56, 58, 59, 60], "__sub_cmd": 0, "_init_command_": [0, 1, 5], "had": [0, 9], "been": [0, 5, 26, 30, 62], "output": [0, 6, 9, 10, 23, 42, 56, 58, 61, 62], "build_doc": [0, 42], "py": [0, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "script": [0, 6, 41, 42, 57, 59, 61, 62], "build": [0, 32, 42, 60], "document": [0, 6, 8, 14, 25, 40, 41, 59], "project": [0, 42, 57], "includ": [0, 6, 7, 8, 26, 28, 30, 40, 41, 56, 57, 59, 60, 61], "addition": [0, 26, 61], "two": [0, 14, 32, 60, 61], "decor": [0, 5, 29, 30, 32, 40, 60], "stack": [0, 32], "so": [0, 5, 14, 29, 30, 40, 41, 44, 48, 56, 57, 58, 60, 61, 62], "either": [0, 32, 40, 41, 56, 58, 60, 61], "snippet": [0, 56, 58], "builddoc": 0, "descript": [0, 1, 6, 8, 14, 16, 25, 27, 28, 29, 30, 40, 41, 48, 56, 57, 59, 60, 61, 62], "sphinx": [0, 42], "verbos": [0, 40, 45, 48, 53, 54, 56, 60, 61], "counter": [0, 1, 6, 7, 27, 28, 32, 40, 41, 56, 61], "v": [0, 40, 45, 48, 53, 54, 56, 60, 61], "increas": [0, 32, 40, 45, 48, 53, 54, 56, 60, 61], "log": [0, 5, 40, 43, 45, 53, 56, 60, 61], "specifi": [0, 4, 5, 6, 7, 8, 9, 15, 21, 23, 26, 28, 29, 32, 34, 36, 40, 41, 42, 45, 48, 49, 53, 54, 56, 58, 59, 60, 61], "time": [0, 1, 17, 32, 40, 45, 48, 52, 53, 54, 56, 57, 59, 60, 61, 62], "dry_run": [0, 9, 53, 56], "d": [0, 40, 48, 51, 53, 56, 61], "taken": [0, 5, 7, 48, 53, 56], "__init__": [0, 5, 48, 61], "initi": [0, 1, 5, 7, 15, 29, 30, 32, 41, 42, 56, 57, 58, 60, 61], "etc": [0, 6, 7, 9, 14, 21, 28, 32, 34, 41, 59, 60], "sphinx_build": 0, "subprocess": [0, 60], "c": [0, 49, 51, 52, 56, 57, 59, 60, 61, 62], "clean": [0, 14, 57], "doc": 0, "directori": [0, 21, 58, 60, 61], "befor": [0, 4, 5, 6, 10, 15, 18, 19, 28, 30, 32, 40, 58, 60], "up": [0, 40, 57], "dir": [0, 1, 17, 21, 24, 58], "remov": 0, "old": 0, "rst": [0, 9, 13, 14, 15, 54, 59], "file": [0, 1, 8, 9, 17, 24, 42, 49, 59], "html": [0, 42], "u": [0, 57], "updat": [0, 1, 27, 31, 40, 43, 57], "re": [0, 7, 9, 61], "api": [0, 43, 57, 61], "after_main": [0, 1, 5, 27, 32, 56, 60], "o": [0, 49, 58], "open": [0, 21, 42, 58], "web": 0, "browser": 0, "backup": [0, 60], "backup_rst": 0, "auto": [0, 8, 21, 24, 41, 58], "text": [0, 2, 4, 6, 8, 9, 13, 14, 15, 16, 21, 25, 28, 29, 30, 32, 37, 39, 40, 44, 50, 56, 57, 58, 60, 61], "appear": [0, 28, 30, 42, 56, 60, 61], "section": [0, 6, 29, 58, 60, 61], "h": [0, 2, 6, 8, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61], "If": [0, 5, 6, 7, 8, 9, 14, 15, 19, 21, 22, 23, 28, 29, 30, 32, 34, 40, 41, 42, 56, 58, 59, 60, 61], "respect": [0, 22, 40, 58, 60], "neither": [0, 32, 56, 60], "becaus": [0, 8, 56, 61], "mark": [0, 29, 56, 60], "enabl": [0, 6, 32, 40, 55, 58, 60], "via": [0, 5, 18, 21, 28, 29, 32, 34, 39, 40, 57, 58, 60, 61, 62], "For": [0, 21, 26, 41, 58, 60, 61], "uco": 0, "being": [0, 6, 28, 40, 41, 60, 62], "higher": [0, 32, 60], "later": [0, 18, 58], "technic": [0, 29, 60], "noth": [0, 5, 14, 40], "librari": [0, 23, 40, 58], "prevent": [0, 57, 60], "problemat": [0, 41], "you": [0, 5, 23, 29, 40, 42, 58, 59, 60, 62], "want": [0, 29, 42, 60], "should": [0, 5, 6, 7, 8, 9, 18, 19, 21, 23, 28, 29, 32, 34, 36, 40, 41, 47, 55, 58, 60, 61], "check": [0, 4, 21, 32, 38, 41, 58, 60, 62], "your": [0, 23, 57, 58], "applic": [0, 5, 23, 40, 58], "twice": [0, 44, 60], "action": [1, 4, 5, 6, 7, 8, 11, 14, 27, 28, 29, 32, 33, 34, 40, 41, 43, 48, 53, 54, 56, 57, 62], "modul": [1, 12, 17, 27, 42, 48, 57], "annot": [1, 32, 34, 40, 60], "get_descriptor_value_typ": [1, 3], "command_paramet": 1, "sub_command": [1, 4], "split_action_flag": [1, 4], "combo_option_map": [1, 4], "group": [1, 4, 6, 13, 14, 27, 28, 33, 41, 43, 48, 53, 57, 59, 61], "option_map": [1, 4], "command_par": [1, 4], "pass_thru": [1, 4, 27], "always_available_action_flag": [1, 4], "formatt": [1, 4, 13, 14, 16], "get_option_param_value_pair": [1, 4], "long_option_to_param_value_pair": [1, 4], "short_option_to_param_value_pair": [1, 4], "find_option_that_accepts_valu": [1, 4], "find_nested_option_that_accepts_valu": [1, 4], "find_nested_pass_thru": [1, 4], "validate_group": [1, 4], "try_env_param": [1, 4], "required_check_param": [1, 4], "pars": [1, 4, 5, 6, 7, 11, 18, 19, 21, 22, 28, 29, 30, 32, 33, 34, 36, 57, 59, 60, 61], "__call__": [1, 5, 6, 8, 10, 17, 18, 19, 21, 22, 27, 29, 32, 41], "_pre_init_actions_": [1, 5, 40], "_before_main_": [1, 5], "_after_main_": [1, 5, 6, 8, 40, 41, 60], "config": [1, 4, 7, 8, 11, 41, 42], "commandconfig": [1, 4, 6, 7, 14, 28, 41, 60], "field": [1, 6, 48], "error_handl": [1, 5, 6, 8, 41], "always_run_after_main": [1, 6, 8, 41, 60], "multiple_action_flag": [1, 6, 8, 41], "action_after_action_flag": [1, 6, 8, 41], "ignore_unknown": [1, 6, 8, 41], "allow_miss": [1, 6, 8, 41], "allow_backtrack": [1, 6, 41], "option_name_mod": [1, 6, 28, 32, 41, 60], "reject_ambiguous_pos_combo": [1, 6, 41], "ambiguous_short_combo": [1, 6, 11, 41], "add_help": [1, 6, 8, 41, 42], "use_type_metavar": [1, 6, 41], "show_default": [1, 6, 27, 28, 41, 60], "cmd_alias_mod": [1, 6, 14, 41], "sort_choic": [1, 6, 18, 41], "show_group_tre": [1, 6, 41, 42], "show_group_typ": [1, 6, 41, 56], "command_formatt": [1, 6, 41], "param_formatt": [1, 6, 41], "extended_epilog": [1, 6, 41], "show_docstr": [1, 6, 41], "choice_delim": [1, 6, 18, 41], "usage_column_width": [1, 6, 41], "min_usage_column_width": [1, 6, 41], "as_dict": [1, 6], "showdefault": [1, 6, 41], "never": [1, 6, 28, 60, 61], "miss": [1, 6, 8, 11, 33, 39, 40, 41, 56], "truthi": [1, 6], "non_empti": [1, 6], "optionnamemod": [1, 6, 28, 31, 41], "dash": [1, 4, 6, 21, 41, 58], "both_underscor": [1, 6], "both_dash": [1, 6], "subcommandaliashelpmod": [1, 6, 14, 41], "repeat": [1, 6, 14, 52, 57, 59, 61, 62], "combin": [1, 6, 8, 11, 14, 27, 29, 30, 31, 32, 41, 42, 57, 59, 60, 62], "alia": [1, 6, 14, 22, 32, 53], "ambiguouscombomod": [1, 6, 11, 41], "ignor": [1, 6, 8, 21, 32, 41, 56, 58, 60], "permiss": [1, 6, 9, 58], "strict": [1, 6, 11, 41], "context": [1, 4, 5, 6, 10, 11, 22, 30, 36, 56, 58, 62], "prog": [1, 7, 8, 25, 41, 60], "allow_argv_prog": [1, 7], "for_prog": [1, 7], "terminal_width": [1, 7, 37], "get_error_handl": [1, 7], "get_parsed_valu": [1, 7], "set_parsed_valu": [1, 7], "record_act": [1, 7], "num_provid": [1, 7], "action_flag_count": [1, 7], "all_action_flag": [1, 7], "categorized_action_flag": [1, 7], "iter_action_flag": [1, 7], "get_current_context": [1, 7], "get_or_create_context": [1, 7], "get_context": [1, 7], "parsest": [1, 7], "complet": [1, 7, 21, 24, 40, 58], "done": [1, 7, 58], "core": [1, 5], "commandmeta": [1, 8], "meta": [1, 8], "get_par": [1, 8], "get_config": [1, 8], "get_param": [1, 8], "get_metadata": [1, 8], "get_top_level_command": [1, 8], "render_script_rst": [1, 9, 42], "render_command_rst": [1, 9, 42], "load_command": [1, 9], "rstwriter": [1, 9], "document_script": [1, 9], "document_modul": [1, 9], "document_packag": [1, 9], "write_index": [1, 9], "write_rst": [1, 9], "errorhandl": [1, 5, 6, 7, 8, 10, 41], "regist": [1, 5, 6, 10, 27, 28, 29, 30, 32, 34, 41, 60, 61], "unregist": [1, 10], "cls_handler": [1, 10], "get_handl": [1, 10], "copi": [1, 10, 60], "nullerrorhandl": [1, 7, 10], "except": [1, 5, 6, 8, 10, 17, 22, 28, 29, 30, 32, 37, 40, 41, 56, 60, 62], "commandparserexcept": [1, 11, 20], "code": [1, 5, 11, 40, 57], "parserexit": [1, 11], "commanddefinitionerror": [1, 11], "parameterdefinitionerror": [1, 11], "ambiguousshortform": [1, 11], "ambiguousparsetre": [1, 6, 11, 41], "usageerror": [1, 11, 37], "paramusageerror": [1, 11], "multiparamusageerror": [1, 11], "ambiguouscombo": [1, 11], "paramconflict": [1, 11], "paramsmiss": [1, 11], "badargu": [1, 11], "invalidchoic": [1, 11], "missingargu": [1, 11], "nosuchopt": [1, 11], "noactivecontext": [1, 7, 11], "format": [1, 9, 13, 14, 15, 16, 23, 28, 40, 41, 57, 58, 61], "packag": [1, 9, 25, 48], "commandhelpformatt": [1, 4, 6, 12, 13, 41], "maybe_add_group": [1, 12, 13], "maybe_add_opt": [1, 12, 13], "maybe_add_posit": [1, 12, 13], "format_usag": [1, 12, 13, 14, 27, 29], "format_help": [1, 12, 13, 14, 27, 29], "format_rst": [1, 12, 13], "get_formatt": [1, 12, 13], "paramhelpformatt": [1, 6, 12, 14, 41], "required_formatter_map": [1, 12, 14], "__init_subclass__": [1, 12, 14, 27, 28, 29], "for_param_cl": [1, 12, 14], "maybe_wrap_usag": [1, 12, 14], "format_metavar": [1, 12, 14, 17, 18], "format_basic_usag": [1, 12, 14], "iter_usage_part": [1, 12, 14], "format_descript": [1, 12, 14], "rst_usag": [1, 12, 14], "rst_row": [1, 12, 14], "positionalhelpformatt": [1, 12, 14], "optionhelpformatt": [1, 12, 14], "triflaghelpformatt": [1, 12, 14], "choicemaphelpformatt": [1, 12, 14], "choice_group": [1, 12, 14], "rst_tabl": [1, 12, 14], "choicegroup": [1, 12, 14], "choic": [1, 6, 8, 11, 12, 14, 17, 20, 27, 29, 30, 32, 34, 41, 56, 60, 61], "choice_str": [1, 12, 14], "group_choic": [1, 12, 14], "add": [1, 12, 14, 15, 27, 30, 31, 32, 42, 60], "prepar": [1, 12, 14], "prepare_combin": [1, 12, 14], "prepare_alias": [1, 12, 14], "prepare_rep": [1, 12, 14], "passthruhelpformatt": [1, 12, 14], "grouphelpformatt": [1, 12, 14], "restructured_text": [1, 12], "rst_bar": [1, 12, 15], "rst_list_tabl": [1, 12, 15], "rsttabl": [1, 12, 14, 15], "titl": [1, 9, 12, 15, 27, 29, 60, 61], "subtitl": [1, 12, 15], "show_titl": [1, 12, 15], "use_table_direct": [1, 12, 15], "row": [1, 12, 15], "width": [1, 6, 7, 12, 14, 15, 39, 41], "from_dict": [1, 12, 15], "add_dict_row": [1, 12, 15], "add_kv_row": [1, 12, 15], "add_row": [1, 12, 15], "iter_build": [1, 12, 15], "util": [1, 3, 8, 9, 12, 15, 17], "format_help_entri": [1, 12, 16], "line_it": [1, 12, 16], "base": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 48, 57, 58, 59, 60, 61], "inputtyp": [1, 17, 18, 20], "is_valid_typ": [1, 17, 18], "fix_default": [1, 17, 18], "choicemap": [1, 14, 17, 19, 27, 29], "enumchoic": [1, 17, 19], "enum": [1, 6, 7, 17, 19, 23, 39, 41, 58], "inputvalidationerror": [1, 17, 20], "invalidchoiceerror": [1, 17, 20], "path": [1, 9, 11, 17, 21, 24, 25, 49, 60], "type": [1, 3, 6, 7, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 33, 34, 37, 39, 40, 41, 53, 57, 60, 61], "mode": [1, 6, 14, 17, 21, 24, 58], "encod": [1, 9, 17, 21, 24, 58], "error": [1, 5, 6, 8, 9, 10, 11, 17, 20, 21, 24, 40, 58, 61, 62], "lazi": [1, 17, 21, 58], "serial": [1, 17, 21], "convert": [1, 17, 18, 19, 21, 22, 24, 29, 58], "pass_fil": [1, 17, 21, 24, 58], "json": [1, 17, 21, 49, 58], "pickl": [1, 17, 21, 58], "numer": [1, 17, 23], "rang": [1, 17, 22, 26, 49, 57, 59, 60, 61, 62], "snap": [1, 17, 22, 58], "numrang": [1, 17, 22], "min": [1, 6, 17, 22, 26, 58], "max": [1, 17, 22, 26, 58], "include_min": [1, 17, 22, 58], "include_max": [1, 17, 22, 58], "handle_invalid": [1, 17, 22], "dtformatmod": [1, 17, 23, 58], "full": [1, 6, 14, 17, 23, 61], "abbrevi": [1, 17, 23, 58], "numeric_iso": [1, 17, 23], "dai": [1, 17, 23], "parse_numer": [1, 17, 23], "dt_type": [1, 17, 23], "month": [1, 17, 23], "datetim": [1, 17, 23], "date": [1, 17, 23, 40], "inputparam": [1, 17, 24], "name": [1, 6, 7, 8, 9, 17, 23, 24, 28, 29, 30, 31, 32, 39, 40, 41, 48, 52, 56, 57, 58, 60, 61, 62], "statmod": [1, 17, 21, 24, 58], "charact": [1, 4, 6, 7, 11, 15, 17, 24, 41, 42, 57, 60], "block": [1, 6, 17, 24, 30, 41, 56], "fifo": [1, 17, 24], "link": [1, 17, 24, 35], "socket": [1, 17, 24], "filewrapp": [1, 17, 21, 24, 58], "read": [1, 17, 21, 24, 49, 58], "write": [1, 17, 21, 24, 40, 42, 49, 50, 58, 62], "close": [1, 17, 24, 58], "fix_windows_path": [1, 17, 21, 24, 58], "metadata": [1, 40], "programmetadata": [1, 8, 25], "prog_from_sys_argv": [1, 25], "url": [1, 6, 25, 41], "docs_url": [1, 25], "email": [1, 6, 25, 41], "version": [1, 6, 24, 25, 29, 41, 56, 60], "usag": [1, 6, 8, 13, 14, 16, 25, 28, 30, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61], "epilog": [1, 6, 8, 25, 40, 41, 62], "doc_nam": [1, 8, 25], "doc_str": [1, 25], "pkg_doc_str": [1, 25], "for_command": [1, 25], "format_epilog": [1, 25], "get_doc_str": [1, 25], "satisfi": [1, 26], "paramet": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 57, 58], "accepts_non": [1, 27, 28, 32], "accepts_valu": [1, 27, 28, 32], "metavar": [1, 6, 27, 28, 41, 56, 60], "has_choic": [1, 27, 28, 29], "take_act": [1, 18, 27, 28, 33], "would_accept": [1, 18, 27, 28], "prepare_and_valid": [1, 27, 28], "prepare_valu": [1, 27, 28, 32], "valid": [1, 5, 10, 18, 19, 20, 26, 27, 28, 29, 30, 32, 40, 56, 58, 60], "is_valid_arg": [1, 27, 28], "result_valu": [1, 27, 28, 29, 32, 33], "can_pop_count": [1, 27, 28], "pop_last": [1, 27, 28], "show_in_help": [1, 27, 28, 29, 30], "baseposit": [1, 4, 13, 27, 28, 29, 34, 35], "baseopt": [1, 4, 11, 13, 27, 28, 31, 32], "option_str": [1, 27, 28, 32, 60], "choice_map": [1, 27], "register_command": [1, 27, 29], "register_act": [1, 27, 29], "target": [1, 5, 6, 11, 14, 27, 29, 35, 60, 61], "local": [1, 23, 27, 29, 58], "register_choic": [1, 27, 29], "append": [1, 14, 15, 27, 29, 32, 34, 56, 60], "paramgroup": [1, 4, 6, 13, 27, 30, 41, 56, 61], "member": [1, 4, 6, 9, 19, 27, 30, 39, 41, 53, 56, 58, 61], "mutually_exclus": [1, 27, 30, 56], "mutually_depend": [1, 27, 30, 56], "extend": [1, 5, 8, 14, 25, 27, 28, 29, 30, 32, 34, 39, 40, 58, 61], "register_al": [1, 27, 30], "in_mutually_exclusive_group": [1, 27, 30], "contains_posit": [1, 27, 30], "optionstr": [1, 27, 28, 31], "name_mod": [1, 6, 27, 28, 31, 32, 41, 60], "long": [1, 5, 6, 27, 28, 31, 32, 41, 48, 59, 60, 61], "short": [1, 4, 6, 11, 27, 28, 31, 32, 41, 59, 60], "display_long": [1, 27, 31], "all_option_str": [1, 27, 31], "triflagoptionstr": [1, 27, 31, 32], "add_alt": [1, 27, 31], "update_alt": [1, 27, 31], "alt_allow": [1, 27, 31], "display_long_primari": [1, 27, 31], "short_primari": [1, 27, 31], "display_long_alt": [1, 27, 31], "short_alt": [1, 27, 31], "primary_option_str": [1, 27, 31], "alt_option_str": [1, 27, 31], "env_var": [1, 27, 32, 60], "append_const": [1, 27, 32, 60], "triflag": [1, 27, 31, 32], "alt_help": [1, 27, 32], "actionflag": [1, 4, 5, 7, 27, 32, 40, 42, 56], "passthru": [1, 4, 27, 33], "missing_hint": [1, 27, 33], "store_al": [1, 27, 33], "parse_tre": 1, "posnod": [1, 11, 35], "word": [1, 9, 11, 29, 35, 44, 60], "link_param": [1, 35], "nargs_min": [1, 35], "nargs_max": [1, 35], "any_word": [1, 35], "any_nod": [1, 35], "has_ani": [1, 35], "raw_path": [1, 35], "path_repr": [1, 35], "build_tre": [1, 35], "update_nod": [1, 35], "print_tre": [1, 35], "commandpars": [1, 36], "arg_dequ": [1, 36], "defer": [1, 36], "parse_arg": [1, 36], "handle_pass_thru": [1, 36], "handle_posit": [1, 36], "handle_long": [1, 36], "handle_short": [1, 36], "consume_valu": [1, 36], "node": [1, 11, 36], "parsertest": [1, 37], "assert_dict_equ": [1, 37], "assert_parse_result": [1, 37], "assert_parse_results_cas": [1, 37], "assert_parse_fail": [1, 37], "assert_parse_fails_cas": [1, 37], "assert_call_fail": [1, 37], "assert_call_fails_cas": [1, 37], "assert_strings_equ": [1, 37], "assert_str_starts_with_lin": [1, 37], "assert_str_contain": [1, 37], "redirectstream": [1, 37, 62], "stdout": [1, 21, 37, 50, 58, 62], "stderr": [1, 37, 62], "format_diff": [1, 37], "get_rst_text": [1, 37], "get_help_text": [1, 37], "get_usage_text": [1, 37], "sealed_mock": [1, 37], "camel_to_snake_cas": [1, 39], "short_repr": [1, 39], "missingmixin": [1, 6, 23, 39], "fixedflagmeta": [1, 39], "fixedflag": [1, 6, 24, 39], "author": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 48], "doug": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 48], "skrypa": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 48], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 57], "extract": 3, "command_cl": [3, 7], "attr": [3, 54], "str": [3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 58], "all": [4, 5, 6, 7, 8, 9, 11, 13, 14, 19, 28, 29, 30, 33, 40, 41, 42, 48, 50, 53, 56, 57, 58, 60, 61], "between": [4, 6, 24, 39, 40, 41, 58, 60], "definit": 4, "involv": 4, "commandcl": [4, 8, 9, 35, 37], "none": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 56, 58, 60], "tupl": [4, 14, 16, 23, 26, 32, 35, 37, 60], "split": [4, 44, 60, 61], "optionmap": 4, "map": [4, 8, 9, 11, 15, 19, 29, 41, 58, 61], "opt": 4, "associ": [4, 5, 7, 13, 14, 29, 60], "properti": [4, 7, 14, 28, 29, 30, 31, 32, 35, 37, 39, 40, 60], "avail": [4, 29, 32, 40, 41, 58, 60, 61, 62], "iter": [4, 7, 9, 13, 14, 15, 16, 30, 31, 32, 37], "point": [5, 14, 40, 48, 61], "program": [5, 6, 8, 21, 23, 25, 29, 40, 41, 48, 58, 59, 60, 61, 62], "provid": [5, 6, 7, 8, 10, 11, 14, 15, 18, 19, 20, 21, 22, 26, 28, 29, 30, 32, 33, 34, 40, 41, 42, 44, 50, 56, 57, 58, 59, 60, 61, 62], "here": [5, 29, 32, 34, 41, 58, 59, 60, 61], "refer": [5, 8, 30, 40], "cli": [5, 6, 8, 32, 40, 41, 52, 59, 60, 61], "intern": [5, 7, 29], "safe": 5, "subclass": [5, 6, 8, 9, 14, 18, 19, 22, 28, 29, 30, 40, 41, 58, 61], "redefin": 5, "overwrit": 5, "classmethod": [5, 7, 8, 10, 14, 15, 25, 28, 29, 35, 36], "sequenc": [5, 6, 7, 15, 22, 26, 32, 60], "commandobj": [5, 29], "primari": [5, 8, 30, 32, 40, 57, 60, 61], "argument": [5, 6, 7, 8, 10, 11, 15, 18, 19, 21, 22, 28, 29, 30, 32, 33, 34, 36, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "resolv": [5, 21, 24, 58], "run": [5, 6, 7, 8, 21, 41, 43, 47, 48, 56, 58, 59, 60, 61, 62], "dure": [5, 7, 18, 29, 30, 41, 61], "To": [5, 14, 21, 40, 42, 58, 59, 60, 61, 62], "abl": [5, 40, 60, 61], "possibli": 5, "mention": 5, "separ": [5, 6, 9, 29, 32, 33, 41, 58, 60, 61], "sy": [5, 8, 40, 41, 59, 62], "alreadi": [5, 6, 7, 21, 36, 40, 58], "final": [5, 6, 29, 41], "doe": [5, 8, 11, 14, 15, 20, 24, 28, 29, 32, 40, 41, 58, 60, 61, 62], "readi": 5, "arg": [5, 7, 19, 33, 36, 37, 39, 40, 43], "int": [5, 6, 7, 11, 13, 14, 15, 16, 22, 23, 24, 26, 28, 29, 32, 35, 36, 37, 39, 56, 57, 58, 59, 61, 62], "handler": [5, 10, 18, 19, 21, 22, 23, 58], "skip": 5, "total": [5, 36], "first": [5, 6, 8, 14, 15, 21, 29, 32, 59, 60], "always_avail": [5, 32, 40, 42, 60], "super": [5, 40], "implement": [5, 8, 14, 32, 40, 41, 52, 58, 59, 60], "placehold": [5, 28, 60], "perform": [5, 6, 11, 32, 34, 41, 58, 60], "task": [5, 40, 56, 57], "more": [5, 9, 11, 15, 16, 21, 26, 29, 32, 34, 40, 41, 42, 57, 58, 59, 60, 61], "resourc": 5, "intens": 5, "oper": 5, "side": [5, 22, 58], "effect": [5, 34, 60], "place": 5, "recommend": [5, 40], "trigger": [5, 32, 62], "far": 5, "return_command": 5, "bool": [5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 60], "present": [5, 6, 32, 34, 40, 42, 58, 60, 61], "detect": [5, 6, 32, 34, 41, 60], "count": [5, 7, 26, 28, 32, 52, 57, 59, 62], "found": [5, 8, 36, 56, 59], "runtimeerror": [5, 11], "rais": [5, 6, 7, 8, 9, 10, 11, 20, 22, 28, 29, 30, 32, 41, 56, 60, 61], "explicitli": [5, 6, 14, 29, 32, 59, 60], "whether": [5, 6, 7, 8, 9, 14, 19, 21, 22, 28, 30, 32, 41, 55, 56, 58, 60], "ran": 5, "through": [5, 29, 58], "could": [5, 6, 14, 48], "behavior": [6, 7, 22, 39, 40, 58, 60], "read_onli": 6, "similar": [6, 19, 29, 32, 40, 41, 56, 58, 60, 61], "invoc": [6, 8, 41], "unknown": [6, 8, 41], "encount": [6, 8, 9, 41], "backtrack": [6, 41], "how": [6, 40, 41, 57, 58, 59, 60, 62], "form": [6, 11, 32, 41, 59, 60], "ambigu": [6, 11, 41], "valu": [6, 7, 8, 10, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 34, 36, 39, 41, 56, 57, 58, 60, 61], "shown": [6, 60, 61], "relat": [6, 24, 41, 56, 61], "cmdaliasmod": 6, "alias": [6, 14, 38, 41, 61], "displai": [6, 8, 15, 29, 32, 41, 60, 61], "sort": [6, 41], "visual": [6, 41, 42], "indic": [6, 7, 21, 28, 29, 41, 42, 56, 58, 60], "mutual": [6, 11, 30, 41, 48, 49, 51, 53, 59], "exclus": [6, 11, 22, 30, 41, 48, 49, 51, 53, 58, 59], "depend": [6, 8, 22, 29, 30, 41, 51, 55, 57, 58, 59, 60], "fact": [6, 41], "commandtyp": [6, 7, 13, 25, 29, 36], "paramorgroup": [6, 7, 11, 14, 30], "successfulli": [6, 41], "top": [6, 8, 9, 41, 60, 61], "docstr": [6, 41, 60], "delimit": [6, 41], "column": [6, 15, 16, 41], "char": [6, 15], "adjust": [6, 22, 41, 58], "indent": [6, 35, 41], "qualnam": [6, 7, 23, 24, 39], "start": [6, 7, 22, 23, 24, 30, 39, 57, 58], "boundari": [6, 7, 23, 24, 39], "most": [6, 29, 30, 40, 60], "rightmost": 6, "highest": 6, "alon": 6, "equival": [6, 41, 59, 60], "4": [6, 24, 29, 56, 60], "treat": [6, 15, 28, 58], "boolean": [6, 32, 60], "8": [6, 9, 24, 42], "empti": [6, 9, 23, 34, 58, 60], "16": [6, 24], "regardless": [6, 8, 40, 61], "foo_bar": [6, 61], "set": [6, 7, 11, 19, 21, 26, 28, 31, 35, 40, 41, 42, 48, 56, 57, 58, 60, 61], "_": [6, 39, 57, 59, 62], "3": [6, 7, 14, 16, 37, 39, 56, 57, 62], "15": 6, "23": 6, "anoth": [6, 41, 42, 58, 61], "line": [6, 7, 14, 44, 58, 60, 61], "subsequ": [6, 14], "replac": [6, 9, 42], "entir": [6, 56, 58], "best": [6, 41], "effort": [6, 41], "multi": [6, 23, 29, 58], "overlap": 6, "singl": [6, 7, 9, 14, 15, 19, 32, 34, 36, 42, 58, 59, 60], "exact": 6, "reject": [6, 18, 41], "user": [6, 7, 11, 28, 29, 30, 32, 34, 40, 48, 53, 56, 58, 60, 61], "interpret": [6, 29], "track": 7, "anyconfig": [7, 8], "abstractcontextmanag": [7, 37], "hold": [7, 32, 34, 60], "hierarchi": 7, "affect": [7, 15, 40], "optstr": [7, 14, 15, 16, 25, 29, 32], "pathlik": [7, 9], "current": [7, 24, 40, 61], "fit": 7, "recurs": [7, 35], "dictionari": [7, 41], "access": [7, 62], "gather": [7, 62], "assign": [7, 28, 31, 32, 60], "categor": 7, "union": [7, 15, 21, 22, 23, 26, 28, 29, 31, 32, 35, 37], "Not": [7, 18, 22, 58, 60, 61], "val_count": 7, "actionphas": 7, "phase": 7, "yield": [7, 14], "increment": [7, 32, 60], "silent": 7, "get": [7, 13, 57], "activ": [7, 11, 36], "creat": [7, 9, 21, 58, 60], "new": [7, 15, 44, 48, 60], "to_cal": 7, "obtain": 7, "particular": [7, 62], "ones": 7, "That": [7, 40], "positional_onli": 7, "var_posit": 7, "raw": 7, "metaclass": [8, 39], "find": [8, 43, 56, 61], "namespac": 8, "abcmeta": 8, "custom": [8, 18, 19, 20, 21, 22, 23, 28, 41, 43, 57, 58], "what": [8, 16, 19, 29, 40, 41, 58, 61], "stem": 8, "wrap": [8, 14, 22, 29, 41, 58], "disabl": [8, 41, 42, 60, 62], "cl": 8, "commandani": [8, 13], "include_abc": 8, "mro": 8, "NOT": [8, 32, 60], "no_sys_argv": [8, 13, 25], "infer": [8, 59, 60], "__subclasses__": 8, "releas": [8, 57], "dead": 8, "quickli": [8, 57], "enough": [8, 41], "top_onli": 9, "fix_nam": [9, 13], "fix_name_func": [9, 13], "namefunc": [9, 13], "load": [9, 21, 42, 58], "camelcas": [9, 29], "snake_cas": [9, 29, 61], "oserror": 9, "thereof": [9, 40], "attempt": [9, 11, 18, 24, 58], "propag": [9, 62], "importerror": 9, "import_modul": 9, "import": [9, 40, 42, 48, 57, 58, 59, 61, 62], "output_dir": 9, "utf": [9, 42], "newlin": 9, "n": [9, 37, 40, 48, 49, 52, 57, 58, 59, 60, 62], "ext": 9, "module_templ": 9, "header": [9, 15, 56], "currentmodul": 9, "automodul": 9, "undoc": 9, "inherit": [9, 57, 61], "skip_modul": 9, "subdir": 9, "index_nam": 9, "index_head": 9, "index_subdir": 9, "caption": 9, "pkg_name": 9, "pkg_path": 9, "index": [9, 15, 57], "subdirectori": 9, "content": [9, 13, 42, 58], "content_subdir": 9, "expect": [10, 19, 30, 32, 34, 37, 40, 48, 58, 60, 61, 62], "unexpect": [10, 23, 58], "catch": 10, "keyboardinterrupt": 10, "gracefulli": 10, "brokenpipeerror": 10, "often": [10, 60], "caus": [10, 11, 21, 23, 58, 61], "pipe": 10, "tool": [10, 40, 42, 57], "tail": 10, "invalid": [10, 11, 20, 40], "transfer": 10, "control": [10, 40, 41, 42, 61], "baseexcept": 10, "exc_typ": 10, "exc": [10, 37], "statu": 11, "param_conflicts_map": 11, "correctli": [11, 57], "combo": [11, 41, 56, 60], "pre": [11, 20, 40, 58], "delim": [13, 14, 39], "sub_cmd_choic": 13, "init_level": 13, "built": [14, 39], "param_cl": 14, "overridden": [14, 18, 22, 40, 41, 58], "parenthes": 14, "bracket": 14, "include_meta": 14, "prefix": [14, 16, 28, 29, 31, 32, 37, 56, 60, 61], "tw_offset": [14, 16, 29], "alt": [14, 31], "discov": [14, 36, 40], "consid": 14, "canon": 14, "togeth": [14, 60], "default_mod": 14, "offset": 14, "calcul": [14, 22, 29, 60, 61], "everi": [14, 32, 34], "primarili": 14, "nest": [14, 30, 40, 56], "inclus": [14, 22, 58], "format_str": 14, "origin": [14, 29], "suffix": 14, "modif": [14, 58], "simpli": [14, 56], "omit": 14, "data": [15, 21, 24, 58], "markup": 15, "value_pad": 15, "20": [15, 41], "tabl": 15, "emit": 15, "rubric": 15, "begin": [15, 24, 58, 60], "bodi": 15, "rowmap": 15, "t": [15, 18, 19, 29, 40, 57, 58, 61], "auto_head": 15, "popul": [15, 61], "add_head": 15, "pair": [15, 19, 32, 58, 60], "second": [15, 56], "insert": 15, "By": [15, 21, 22, 32, 34, 40, 56, 58, 59, 60, 61], "normal": [15, 19, 56, 58, 62], "below": [15, 26, 56], "grid": 15, "info": [15, 21, 32, 34, 40, 41, 56, 58, 61], "usage_part": 16, "lpad": [16, 29], "cont_ind": 16, "usage_delim": 16, "complic": 16, "than": [16, 41, 42, 58, 59, 60], "just": [16, 56, 60], "scale": [16, 57], "abstract": 18, "desir": [18, 19, 21, 22, 40, 42, 58, 60, 61], "determin": [18, 29, 60, 61], "convers": [18, 20], "actual": [18, 37, 62], "happen": 18, "restrict": [19, 21, 58], "typefunc": 19, "case_sensit": [19, 58], "_choicesbas": 19, "evalu": [19, 30, 58, 60], "sensit": [19, 58], "enumt": 19, "valueerror": [20, 22], "type_str": 20, "expand": [21, 58], "readabl": [21, 57, 58], "writabl": [21, 58], "allow_dash": [21, 58], "use_windows_fix": [21, 58], "fileinput": 21, "tild": [21, 58], "fulli": [21, 58], "absolut": [21, 58], "symlink": [21, 58], "regular": [21, 58], "stdin": [21, 37, 58, 62], "window": [21, 42, 58], "fix": [21, 41, 58], "issu": [21, 24, 40, 41, 52, 57, 58, 62], "git": [21, 24, 58], "bash": [21, 24, 58], "r": [21, 24, 49, 53, 56, 58, 60, 61], "byte": [21, 37], "immedi": [21, 58, 60], "upon": [21, 58], "impli": [21, 58], "addit": [21, 28, 29, 32, 33, 34, 40, 48, 58, 60, 61, 62], "textio": 21, "binaryio": 21, "de": [21, 58], "dump": [21, 58], "written": 21, "rb": [21, 58], "float": [22, 32, 35, 39, 58, 60], "nt": 22, "numericinput": 22, "integ": [22, 26, 32, 58, 60], "builtin": [22, 40, 58], "outsid": [22, 56, 58], "nearest": [22, 58], "bound": [22, 58, 60], "necessarili": [22, 58, 62], "stop": [22, 58], "closer": 22, "behav": [22, 41, 58], "obvious": [22, 58], "correct": [22, 42, 58], "minimum": [22, 26, 41, 58, 60], "lower": [22, 29, 32, 41, 42, 57, 58, 60, 61], "maximum": [22, 26, 58], "upper": [22, 58], "snap_dir": 22, "violat": 22, "setlocal": [23, 58], "problem": [23, 41, 58], "system": [23, 58], "manner": [23, 57, 58], "thread": [23, 58], "lead": [23, 58], "part": [23, 58], "leav": [23, 58], "proper": [23, 58], "i18n": [23, 58], "babel": [23, 58], "unit": [23, 37, 57, 62], "represent": 23, "iso": [23, 58], "out_format": [23, 58], "out_local": [23, 58], "calendarunitinput": 23, "week": [23, 58], "earliest": [23, 58], "timedelta": 23, "latest": [23, 58], "datetimeinput": 23, "32": 24, "64": 24, "127": 24, "inconsist": 24, "distribut": 24, "situat": [24, 61], "python": [24, 40, 58], "drive": [24, 58], "introspect": 25, "strip": 25, "frozenset": 26, "unifi": 26, "mean": 26, "argpars": [26, 41, 59, 60], "exceed": [26, 58], "advanc": [26, 43, 59], "hide": [28, 30, 56, 60], "parambas": [28, 30], "t_co": [28, 32], "meant": [28, 29], "individu": [28, 29, 32, 33, 34, 60], "parameter_act": [28, 29, 32, 34], "did": [28, 30, 32, 40, 56], "brief": [28, 30, 60], "least": [28, 30, 32, 56, 58], "repr_attr": 28, "repr": [28, 39], "short_combo": [28, 32, 33], "opt_str": [28, 32, 33], "pre_act": [28, 32], "position": [28, 34, 60], "default_ok": 28, "default_help": 29, "local_choic": [29, 61], "deleg": 29, "sub": [29, 60], "command_or_choic": 29, "further": [29, 61], "chosen": 29, "better": [29, 40, 60], "suit": [29, 60], "make": [29, 34, 40, 42, 56, 57, 60], "sens": [29, 40, 60], "method_or_choic": 29, "instanti": 29, "explicit": [29, 32, 59, 60], "unchang": 29, "partial": 29, "escap": [29, 61], "quot": [29, 61], "natur": 29, "jump": 29, "hoop": 29, "maintain": [29, 39, 40, 57, 60, 61], "distinct": [29, 59, 60, 61], "choice_validation_exc": 29, "manag": [30, 56, 62], "arbitrari": [30, 56, 60], "vice": [30, 56], "versa": [30, 56], "back": [30, 41], "virtual": 30, "inner": [30, 56], "outward": 30, "__set_name__": 31, "nargsvalu": [32, 34], "inputtypefunc": [32, 34], "choicestyp": [32, 34], "basicactionmixin": [32, 34], "transform": [32, 34, 58, 60], "pick": [32, 34, 58, 60], "environ": [32, 53, 56, 60, 61], "search": [32, 57, 60], "env": [32, 53, 56, 60, 61], "var": [32, 60], "td": 32, "tc": 32, "_flag": 32, "typic": [32, 60], "constant": [32, 60], "ta": 32, "alt_prefix": [32, 60], "alt_long": [32, 60], "alt_short": [32, 60], "trinari": [32, 60], "ternari": [32, 60], "along": [32, 40, 60, 61], "prioriti": [32, 60], "rel": [32, 60, 61], "amount": [32, 57, 60], "unless": [32, 41, 56, 60], "whenev": [32, 60], "verbatim": [32, 60], "multipli": [32, 60], "remain": [33, 57, 60], "thru": 33, "hint": 33, "last": [34, 60], "unbound": [34, 60], "mutablemap": 35, "anyword": 35, "state": [36, 60], "dequ": 36, "consum": 36, "receiv": [36, 58], "methodnam": 37, "runtest": 37, "testcas": [37, 62], "d1": 37, "d2": 37, "msg": 37, "cmd_cl": 37, "expected_exc": 37, "expected_pattern": 37, "exceptioncas": 37, "pattern": [37, 40, 57, 61], "diff_lin": 37, "trim": 37, "sub_text": 37, "io": [37, 57], "name_a": 37, "name_b": 37, "199": 37, "obj": [39, 61], "max_len": 39, "100": 39, "sep": 39, "enumtyp": 39, "pseudo": 39, "7": [39, 58], "10": [39, 53, 61], "11": 39, "parameter": 39, "around": [39, 61], "break": 39, "chang": [39, 40, 60], "cache_tim": 39, "intuit": 40, "orient": 40, "develop": 40, "experi": 40, "id": [40, 48, 53, 56], "renam": 40, "hunt": 40, "keep": 40, "minim": 40, "basic": [40, 43, 56, 57, 59, 61], "standard": 40, "share": [40, 43, 60], "step": [40, 49, 58], "extra": 40, "helloworld": [40, 62], "simpl": [40, 43, 52, 57, 59, 60, 62], "greet": [40, 52, 57, 59, 62], "contact": [40, 52, 62], "fake": [40, 52, 61, 62], "org": [40, 52, 57, 62], "world": [40, 43, 48, 57, 59, 60, 62], "person": [40, 48, 52, 57, 59, 62], "sai": [40, 48, 52, 57, 59, 60, 62], "hello": [40, 43, 54, 57, 59, 60, 62], "howev": [40, 61], "relationship": 40, "correspond": [40, 56], "echo": [40, 43, 44, 58, 60], "join": [40, 60], "__name__": [40, 57, 58, 59, 61], "look": 40, "known": 40, "purpos": 40, "modifi": [40, 58], "let": 40, "One": [40, 56, 58, 60], "benefit": 40, "prefer": 40, "anywher": 40, "awar": [40, 48, 61], "logger": 40, "onc": [40, 57, 61, 62], "intermedi": 40, "basecommand": 40, "log_fmt": [40, 61], "asctim": [40, 61], "levelnam": [40, 61], "lineno": [40, 61], "els": [40, 56, 58, 61], "debug": [40, 61], "basicconfig": [40, 61], "reason": 40, "improv": 40, "incur": 40, "overhead": 40, "slower": 40, "respons": 40, "longer": [40, 61], "sure": [40, 42], "don": [40, 57, 61], "mind": 40, "rest": [40, 43, 61], "incorrect": [41, 58], "extended_error_handl": 41, "fulfil": 41, "detail": 41, "per": 41, "basi": 41, "experiment": 41, "pleas": 41, "report": 41, "tracker": [41, 57], "entireti": 41, "30": 41, "grouped_action_flag": [42, 51, 56], "garbl": 42, "compar": 42, "lack": 42, "putti": 42, "remot": 42, "translat": 42, "categori": [42, 60], "easili": [42, 57], "mani": [42, 60], "appli": [42, 56], "someth": 42, "save_command_rst": 42, "script_path": 42, "rst_path": 42, "w": [42, 51, 56, 58], "fine": 42, "grain": 42, "out": 42, "scope": 42, "guid": 42, "With": 43, "wrapper": [43, 60, 61], "complex": [43, 57, 59], "sync": [43, 56, 61], "init": 43, "action_with_arg": [44, 60], "revers": [44, 60], "advanced_subcommand": [45, 61], "basic_subcommand": [46, 61], "command_wrapp": [47, 60], "host": [47, 60], "across": 48, "complex_exampl": 48, "made": 48, "presenc": 48, "dry": [48, 56, 59], "item": [48, 58, 61], "custom_input": [49, 58, 62], "in_fil": [49, 58], "out_fil": [49, 58], "simple_rang": 49, "49": 49, "skip_rang": 49, "29": 49, "float_rang": 49, "choice_rang": 49, "19": 49, "p": [49, 58, 61], "j": [49, 58, 62], "choos": [49, 61], "k": 49, "action_a": [51, 56], "action_b": [51, 56], "action_c": [51, 56], "action_d": [51, 56], "action_w": [51, 56], "action_x": [51, 56], "action_i": [51, 56], "action_z": [51, 56], "x": [51, 56, 61], "y": [51, 56], "z": [51, 56], "hello_world": [52, 57, 59, 62], "rest_api_wrapp": [53, 56, 61], "dev": [53, 56, 61], "qa": [53, 56, 61], "uat": [53, 56, 61], "prod": [53, 56, 61], "connect": [53, 56, 61], "role": [53, 56], "admin": [53, 56], "limit": [53, 61], "l": [53, 61], "shared_logging_init": 54, "log_test": 54, "simple_flag": [55, 60], "spam": 55, "factor": 55, "apiwrapp": [56, 61], "wait": 56, "no_wait": 56, "taskrunn": 56, "indefinit": 56, "ensur": [56, 62], "findbaz": [56, 61], "find_object": [56, 61], "42": 56, "And": 56, "enforc": [56, 57], "itself": 56, "similarli": 56, "refactor": 56, "deep": 56, "rule": 56, "demonstr": 56, "letter": 56, "groupedflag": 56, "ab": 56, "cd": 56, "wx": 56, "wxy": 56, "wxyz": 56, "descriptor": 57, "well": [57, 59, 60, 61], "veri": [57, 58], "larg": 57, "easi": 57, "goal": 57, "reduc": 57, "boilerpl": 57, "bob": [57, 62], "pip": 57, "wide": 57, "wcwidth": 57, "introduct": 57, "explan": 57, "introduc": 57, "http": 57, "dskrypa": 57, "github": 57, "com": 57, "tree": 57, "pypi": 57, "page": 57, "facilit": 58, "doesn": 58, "understand": 58, "truncat": 58, "inputsexampl": [58, 62], "bad": 58, "example_out": 58, "txt": 58, "cat": 58, "eagerli": 58, "seen": 58, "plain": 58, "binari": 58, "deseri": 58, "iter_data": 58, "isinst": 58, "enumer": 58, "featur": 58, "At": 58, "less": [58, 60], "against": 58, "redund": 58, "_missing_": 58, "myenum": 58, "8601": 58, "non": 58, "6": [58, 60], "weekdai": 58, "independ": 58, "decim": 58, "mondai": 58, "sundai": 58, "fall": 58, "equal": 58, "earlier": 58, "usual": [59, 60], "save": 59, "variat": 59, "john": 59, "rather": 59, "own": [59, 61], "principl": 59, "add_argu": 59, "again": [59, 61], "clearer": 60, "differenti": 60, "major": 60, "extens": 60, "cast": 60, "pep": 60, "484": 60, "exactli": 60, "n\u2080": 60, "n\u2081": 60, "greater": 60, "n\u2093": 60, "roughli": 60, "end": 60, "uniqu": 60, "mycommand": 60, "fbar": 60, "noisycommand": 60, "vv": 60, "v2": 60, "chain": 60, "flexibl": 60, "under": 60, "condit": 60, "setter": 60, "print_twic": 60, "shortcut": 60, "servic": 60, "restart": 60, "act": 60, "customiz": 60, "build_dir": 60, "install_dir": 60, "instal": 60, "backup_dir": 60, "shutil": 60, "check_cal": 60, "as_posix": 60, "cleanup": 60, "rmtree": 60, "therefor": 60, "select": 61, "foobar": 61, "view": 61, "overli": 61, "simplist": 61, "hypothet": 61, "region": 61, "notimplementederror": 61, "findfoo": 61, "queri": 61, "findbar": 61, "show_al": 61, "chr": 61, "97": 61, "123": 61, "fnmatch": 61, "endregion": 61, "criteria": 61, "relev": 61, "produc": 61, "next": 61, "unrecogn": 61, "put": 61, "aris": 61, "accomplish": 61, "won": 61, "mixin": 61, "reusabl": 61, "anyth": 62, "success": 62, "unhandl": 62, "assertrais": 62, "systemexit": 62, "intent": 62, "unittest": 62, "helloworldtest": 62, "test_parse_count": 62, "5": 62, "assertequ": 62, "test_parse_name_and_count": 62, "assertdictequ": 62, "temporarili": 62, "contextlib": 62, "redirect_stdout": 62, "redirect_stderr": 62, "test_hello_default": 62, "stream": 62, "test_hello_test": 62, "test_custom_input_json_stdin": 62}, "objects": {"cli_command_parser": [[2, 0, 0, "-", "actions"], [3, 0, 0, "-", "annotations"], [4, 0, 0, "-", "command_parameters"], [5, 0, 0, "-", "commands"], [6, 0, 0, "-", "config"], [7, 0, 0, "-", "context"], [8, 0, 0, "-", "core"], [9, 0, 0, "-", "documentation"], [10, 0, 0, "-", "error_handling"], [11, 0, 0, "-", "exceptions"], [25, 0, 0, "-", "metadata"], [26, 0, 0, "-", "nargs"], [35, 0, 0, "-", "parse_tree"], [36, 0, 0, "-", "parser"], [37, 0, 0, "-", "testing"], [38, 0, 0, "-", "typing"], [39, 0, 0, "-", "utils"]], "cli_command_parser.actions": [[2, 1, 1, "", "help_action"]], "cli_command_parser.annotations": [[3, 1, 1, "", "get_descriptor_value_type"]], "cli_command_parser.command_parameters": [[4, 2, 1, "", "CommandParameters"]], "cli_command_parser.command_parameters.CommandParameters": [[4, 3, 1, "", "action"], [4, 3, 1, "", "action_flags"], [4, 4, 1, "", "always_available_action_flags"], [4, 3, 1, "", "combo_option_map"], [4, 3, 1, "", "command"], [4, 3, 1, "", "command_parent"], [4, 5, 1, "", "find_nested_option_that_accepts_values"], [4, 5, 1, "", "find_nested_pass_thru"], [4, 5, 1, "", "find_option_that_accepts_values"], [4, 4, 1, "", "formatter"], [4, 5, 1, "", "get_option_param_value_pairs"], [4, 3, 1, "", "groups"], [4, 5, 1, "", "long_option_to_param_value_pair"], [4, 3, 1, "", "option_map"], [4, 3, 1, "", "options"], [4, 3, 1, "", "parent"], [4, 4, 1, "", "pass_thru"], [4, 3, 1, "", "positionals"], [4, 5, 1, "", "required_check_params"], [4, 5, 1, "", "short_option_to_param_value_pairs"], [4, 3, 1, "", "split_action_flags"], [4, 3, 1, "", "sub_command"], [4, 5, 1, "", "try_env_params"], [4, 5, 1, "", "validate_groups"]], "cli_command_parser.commands": [[5, 2, 1, "", "Command"], [5, 1, 1, "", "main"]], "cli_command_parser.commands.Command": [[5, 5, 1, "", "__call__"], [5, 5, 1, "", "_after_main_"], [5, 5, 1, "", "_before_main_"], [5, 5, 1, "", "_init_command_"], [5, 5, 1, "", "_pre_init_actions_"], [5, 3, 1, "", "ctx"], [5, 5, 1, "", "main"], [5, 5, 1, "", "parse"], [5, 5, 1, "", "parse_and_run"]], "cli_command_parser.commands.Command.__call__.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._after_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._before_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._init_command_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._pre_init_actions_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.main.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.parse.params": [[5, 6, 1, "", "argv"]], "cli_command_parser.commands.Command.parse_and_run.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.main.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"], [5, 6, 1, "", "return_command"]], "cli_command_parser.config": [[6, 2, 1, "", "AmbiguousComboMode"], [6, 2, 1, "", "CommandConfig"], [6, 2, 1, "", "OptionNameMode"], [6, 2, 1, "", "ShowDefaults"], [6, 2, 1, "", "SubcommandAliasHelpMode"]], "cli_command_parser.config.AmbiguousComboMode": [[6, 3, 1, "", "IGNORE"], [6, 3, 1, "", "PERMISSIVE"], [6, 3, 1, "", "STRICT"]], "cli_command_parser.config.CommandConfig": [[6, 3, 1, "", "FIELDS"], [6, 3, 1, "", "action_after_action_flags"], [6, 3, 1, "", "add_help"], [6, 3, 1, "", "allow_backtrack"], [6, 3, 1, "", "allow_missing"], [6, 3, 1, "", "always_run_after_main"], [6, 3, 1, "", "ambiguous_short_combos"], [6, 5, 1, "", "as_dict"], [6, 3, 1, "", "choice_delim"], [6, 3, 1, "", "cmd_alias_mode"], [6, 3, 1, "", "command_formatter"], [6, 3, 1, "", "error_handler"], [6, 3, 1, "", "extended_epilog"], [6, 3, 1, "", "ignore_unknown"], [6, 3, 1, "", "min_usage_column_width"], [6, 3, 1, "", "multiple_action_flags"], [6, 3, 1, "", "option_name_mode"], [6, 3, 1, "", "param_formatter"], [6, 3, 1, "", "reject_ambiguous_pos_combos"], [6, 3, 1, "", "show_defaults"], [6, 3, 1, "", "show_docstring"], [6, 3, 1, "", "show_group_tree"], [6, 3, 1, "", "show_group_type"], [6, 3, 1, "", "sort_choices"], [6, 3, 1, "", "usage_column_width"], [6, 3, 1, "", "use_type_metavar"]], "cli_command_parser.config.OptionNameMode": [[6, 3, 1, "", "BOTH"], [6, 3, 1, "", "BOTH_DASH"], [6, 3, 1, "", "BOTH_UNDERSCORE"], [6, 3, 1, "", "DASH"], [6, 3, 1, "", "UNDERSCORE"]], "cli_command_parser.config.ShowDefaults": [[6, 3, 1, "", "ANY"], [6, 3, 1, "", "MISSING"], [6, 3, 1, "", "NEVER"], [6, 3, 1, "", "NON_EMPTY"], [6, 3, 1, "", "TRUTHY"]], "cli_command_parser.config.SubcommandAliasHelpMode": [[6, 3, 1, "", "ALIAS"], [6, 3, 1, "", "COMBINE"], [6, 3, 1, "", "REPEAT"]], "cli_command_parser.context": [[7, 2, 1, "", "Context"], [7, 2, 1, "", "ParseState"], [7, 1, 1, "", "get_context"], [7, 1, 1, "", "get_current_context"], [7, 1, 1, "", "get_or_create_context"], [7, 1, 1, "", "get_parsed"], [7, 1, 1, "", "get_raw_arg"]], "cli_command_parser.context.Context": [[7, 4, 1, "", "action_flag_count"], [7, 4, 1, "", "all_action_flags"], [7, 3, 1, "", "allow_argv_prog"], [7, 4, 1, "", "categorized_action_flags"], [7, 3, 1, "", "config"], [7, 5, 1, "", "for_prog"], [7, 5, 1, "", "get_error_handler"], [7, 5, 1, "", "get_parsed"], [7, 5, 1, "", "get_parsed_value"], [7, 5, 1, "", "iter_action_flags"], [7, 5, 1, "", "num_provided"], [7, 4, 1, "", "params"], [7, 3, 1, "", "prog"], [7, 5, 1, "", "record_action"], [7, 5, 1, "", "set_parsed_value"], [7, 4, 1, "", "terminal_width"]], "cli_command_parser.context.Context.get_parsed.params": [[7, 6, 1, "", "exclude"], [7, 6, 1, "", "recursive"]], "cli_command_parser.context.Context.iter_action_flags.params": [[7, 6, 1, "", "phase"]], "cli_command_parser.context.ParseState": [[7, 3, 1, "", "COMPLETE"], [7, 3, 1, "", "FAILED"], [7, 3, 1, "", "INITIAL"], [7, 4, 1, "", "done"]], "cli_command_parser.context.get_context.params": [[7, 6, 1, "", "command"]], "cli_command_parser.context.get_current_context.params": [[7, 6, 1, "", "silent"]], "cli_command_parser.context.get_parsed.params": [[7, 6, 1, "", "command"], [7, 6, 1, "", "to_call"]], "cli_command_parser.core": [[8, 2, 1, "", "CommandMeta"], [8, 1, 1, "", "get_config"], [8, 1, 1, "", "get_metadata"], [8, 1, 1, "", "get_params"], [8, 1, 1, "", "get_parent"], [8, 1, 1, "", "get_top_level_commands"]], "cli_command_parser.core.CommandMeta": [[8, 5, 1, "", "config"], [8, 5, 1, "", "meta"], [8, 5, 1, "", "params"], [8, 5, 1, "", "parent"]], "cli_command_parser.core.CommandMeta.params": [[8, 6, 1, "", "action_after_action_flags"], [8, 6, 1, "", "add_help"], [8, 6, 1, "", "allow_missing"], [8, 6, 1, "", "always_run_after_main"], [8, 6, 1, "", "choice"], [8, 6, 1, "", "choices"], [8, 6, 1, "", "description"], [8, 6, 1, "", "doc_name"], [8, 6, 1, "", "epilog"], [8, 6, 1, "", "error_handler"], [8, 6, 1, "", "help"], [8, 6, 1, "", "ignore_unknown"], [8, 6, 1, "", "multiple_action_flags"], [8, 6, 1, "", "prog"], [8, 6, 1, "", "usage"]], "cli_command_parser.core.CommandMeta.parent.params": [[8, 6, 1, "", "cls"], [8, 6, 1, "", "include_abc"]], "cli_command_parser.core.get_parent.params": [[8, 6, 1, "", "cls"], [8, 6, 1, "", "include_abc"]], "cli_command_parser.documentation": [[9, 2, 1, "", "RstWriter"], [9, 1, 1, "", "load_commands"], [9, 1, 1, "", "render_command_rst"], [9, 1, 1, "", "render_script_rst"]], "cli_command_parser.documentation.RstWriter": [[9, 5, 1, "", "document_module"], [9, 5, 1, "", "document_package"], [9, 5, 1, "", "document_script"], [9, 5, 1, "", "document_scripts"], [9, 5, 1, "", "write_index"], [9, 5, 1, "", "write_rst"]], "cli_command_parser.documentation.RstWriter.document_package.params": [[9, 6, 1, "", "caption"], [9, 6, 1, "", "empty"], [9, 6, 1, "", "header"], [9, 6, 1, "", "index"], [9, 6, 1, "", "name"], [9, 6, 1, "", "pkg_name"], [9, 6, 1, "", "pkg_path"], [9, 6, 1, "", "subdir"]], "cli_command_parser.documentation.load_commands.params": [[9, 6, 1, "", "path"], [9, 6, 1, "", "top_only"]], "cli_command_parser.documentation.render_command_rst.params": [[9, 6, 1, "", "command"], [9, 6, 1, "", "fix_name"], [9, 6, 1, "", "fix_name_func"]], "cli_command_parser.error_handling": [[10, 2, 1, "", "ErrorHandler"], [10, 2, 1, "", "NullErrorHandler"]], "cli_command_parser.error_handling.ErrorHandler": [[10, 5, 1, "", "__call__"], [10, 5, 1, "", "cls_handler"], [10, 5, 1, "", "copy"], [10, 5, 1, "", "get_handler"], [10, 5, 1, "", "register"], [10, 5, 1, "", "unregister"]], "cli_command_parser.exceptions": [[11, 7, 1, "", "AmbiguousCombo"], [11, 7, 1, "", "AmbiguousParseTree"], [11, 7, 1, "", "AmbiguousShortForm"], [11, 7, 1, "", "BadArgument"], [11, 7, 1, "", "CommandDefinitionError"], [11, 7, 1, "", "CommandParserException"], [11, 7, 1, "", "InvalidChoice"], [11, 7, 1, "", "MissingArgument"], [11, 7, 1, "", "MultiParamUsageError"], [11, 7, 1, "", "NoActiveContext"], [11, 7, 1, "", "NoSuchOption"], [11, 7, 1, "", "ParamConflict"], [11, 7, 1, "", "ParamUsageError"], [11, 7, 1, "", "ParameterDefinitionError"], [11, 7, 1, "", "ParamsMissing"], [11, 7, 1, "", "ParserExit"], [11, 7, 1, "", "UsageError"]], "cli_command_parser.exceptions.CommandParserException": [[11, 3, 1, "", "code"], [11, 5, 1, "", "exit"], [11, 5, 1, "", "show"]], "cli_command_parser.exceptions.MissingArgument": [[11, 3, 1, "", "message"]], "cli_command_parser.exceptions.UsageError": [[11, 3, 1, "", "message"]], "cli_command_parser.formatting": [[13, 0, 0, "-", "commands"], [14, 0, 0, "-", "params"], [15, 0, 0, "-", "restructured_text"], [16, 0, 0, "-", "utils"]], "cli_command_parser.formatting.commands": [[13, 2, 1, "", "CommandHelpFormatter"], [13, 1, 1, "", "get_formatter"]], "cli_command_parser.formatting.commands.CommandHelpFormatter": [[13, 5, 1, "", "format_help"], [13, 5, 1, "", "format_rst"], [13, 5, 1, "", "format_usage"], [13, 5, 1, "", "maybe_add_groups"], [13, 5, 1, "", "maybe_add_option"], [13, 5, 1, "", "maybe_add_options"], [13, 5, 1, "", "maybe_add_positionals"]], "cli_command_parser.formatting.params": [[14, 2, 1, "", "ChoiceGroup"], [14, 2, 1, "", "ChoiceMapHelpFormatter"], [14, 2, 1, "", "GroupHelpFormatter"], [14, 2, 1, "", "OptionHelpFormatter"], [14, 2, 1, "", "ParamHelpFormatter"], [14, 2, 1, "", "PassThruHelpFormatter"], [14, 2, 1, "", "PositionalHelpFormatter"], [14, 2, 1, "", "TriFlagHelpFormatter"]], "cli_command_parser.formatting.params.ChoiceGroup": [[14, 5, 1, "", "add"], [14, 3, 1, "", "choice_strs"], [14, 3, 1, "", "choices"], [14, 5, 1, "", "format"], [14, 5, 1, "", "group_choices"], [14, 5, 1, "", "prepare"], [14, 5, 1, "", "prepare_aliases"], [14, 5, 1, "", "prepare_combined"], [14, 5, 1, "", "prepare_repeated"]], "cli_command_parser.formatting.params.ChoiceGroup.format.params": [[14, 6, 1, "", "default_mode"], [14, 6, 1, "", "prefix"], [14, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.ChoiceGroup.group_choices.params": [[14, 6, 1, "", "choices"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare.params": [[14, 6, 1, "", "default_mode"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases.params": [[14, 6, 1, "", "format_str"]], "cli_command_parser.formatting.params.ChoiceMapHelpFormatter": [[14, 4, 1, "", "choice_groups"], [14, 5, 1, "", "format_help"], [14, 5, 1, "", "format_metavar"], [14, 5, 1, "", "format_usage"], [14, 3, 1, "", "param"], [14, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter": [[14, 5, 1, "", "format_description"], [14, 5, 1, "", "format_help"], [14, 5, 1, "", "format_usage"], [14, 3, 1, "", "param"], [14, 3, 1, "", "required_formatter_map"], [14, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter.format_help.params": [[14, 6, 1, "", "clean"], [14, 6, 1, "", "prefix"], [14, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.OptionHelpFormatter": [[14, 5, 1, "", "format_usage"], [14, 5, 1, "", "iter_usage_parts"], [14, 3, 1, "", "param"], [14, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.ParamHelpFormatter": [[14, 5, 1, "", "__init_subclass__"], [14, 5, 1, "", "for_param_cls"], [14, 5, 1, "", "format_basic_usage"], [14, 5, 1, "", "format_description"], [14, 5, 1, "", "format_help"], [14, 5, 1, "", "format_metavar"], [14, 5, 1, "", "format_usage"], [14, 5, 1, "", "iter_usage_parts"], [14, 5, 1, "", "maybe_wrap_usage"], [14, 3, 1, "", "param"], [14, 3, 1, "", "required_formatter_map"], [14, 5, 1, "", "rst_row"], [14, 5, 1, "", "rst_rows"], [14, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.PassThruHelpFormatter": [[14, 3, 1, "", "param"], [14, 3, 1, "", "required_formatter_map"]], "cli_command_parser.formatting.params.PositionalHelpFormatter": [[14, 5, 1, "", "format_usage"], [14, 3, 1, "", "param"]], "cli_command_parser.formatting.params.TriFlagHelpFormatter": [[14, 5, 1, "", "format_description"], [14, 5, 1, "", "format_help"], [14, 5, 1, "", "format_usage"], [14, 3, 1, "", "param"], [14, 5, 1, "", "rst_rows"]], "cli_command_parser.formatting.restructured_text": [[15, 2, 1, "", "RstTable"], [15, 1, 1, "", "rst_bar"], [15, 1, 1, "", "rst_list_table"]], "cli_command_parser.formatting.restructured_text.RstTable": [[15, 5, 1, "", "add_dict_rows"], [15, 5, 1, "", "add_kv_rows"], [15, 5, 1, "", "add_row"], [15, 5, 1, "", "add_rows"], [15, 5, 1, "", "bar"], [15, 5, 1, "", "from_dict"], [15, 5, 1, "", "from_dicts"], [15, 5, 1, "", "iter_build"], [15, 3, 1, "", "rows"], [15, 3, 1, "", "show_title"], [15, 3, 1, "", "subtitle"], [15, 3, 1, "", "title"], [15, 3, 1, "", "use_table_directive"], [15, 3, 1, "", "widths"]], "cli_command_parser.formatting.restructured_text.RstTable.add_row.params": [[15, 6, 1, "", "columns"], [15, 6, 1, "", "header"], [15, 6, 1, "", "index"]], "cli_command_parser.formatting.restructured_text.RstTable.bar.params": [[15, 6, 1, "", "char"]], "cli_command_parser.formatting.restructured_text.RstTable.params": [[15, 6, 1, "", "headers"], [15, 6, 1, "", "show_title"], [15, 6, 1, "", "subtitle"], [15, 6, 1, "", "title"], [15, 6, 1, "", "use_table_directive"]], "cli_command_parser.formatting.utils": [[16, 1, 1, "", "format_help_entry"], [16, 1, 1, "", "line_iter"]], "cli_command_parser.inputs": [[18, 0, 0, "-", "base"], [19, 0, 0, "-", "choices"], [20, 0, 0, "-", "exceptions"], [21, 0, 0, "-", "files"], [22, 0, 0, "-", "numeric"], [23, 0, 0, "-", "time"], [24, 0, 0, "-", "utils"]], "cli_command_parser.inputs.base": [[18, 2, 1, "", "InputType"]], "cli_command_parser.inputs.base.InputType": [[18, 5, 1, "", "__call__"], [18, 5, 1, "", "fix_default"], [18, 5, 1, "", "format_metavar"], [18, 5, 1, "", "is_valid_type"]], "cli_command_parser.inputs.base.InputType.is_valid_type.params": [[18, 6, 1, "", "value"]], "cli_command_parser.inputs.choices": [[19, 2, 1, "", "ChoiceMap"], [19, 2, 1, "", "Choices"], [19, 2, 1, "", "EnumChoices"]], "cli_command_parser.inputs.choices.ChoiceMap": [[19, 5, 1, "", "__call__"], [19, 3, 1, "", "choices"]], "cli_command_parser.inputs.choices.ChoiceMap.params": [[19, 6, 1, "", "case_sensitive"], [19, 6, 1, "", "choices"], [19, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.Choices": [[19, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.Choices.params": [[19, 6, 1, "", "case_sensitive"], [19, 6, 1, "", "choices"], [19, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.EnumChoices": [[19, 5, 1, "", "__call__"], [19, 3, 1, "", "enum"]], "cli_command_parser.inputs.choices.EnumChoices.params": [[19, 6, 1, "", "case_sensitive"], [19, 6, 1, "", "enum"]], "cli_command_parser.inputs.exceptions": [[20, 7, 1, "", "InputValidationError"], [20, 7, 1, "", "InvalidChoiceError"]], "cli_command_parser.inputs.files": [[21, 2, 1, "", "File"], [21, 2, 1, "", "Json"], [21, 2, 1, "", "Path"], [21, 2, 1, "", "Pickle"], [21, 2, 1, "", "Serialized"]], "cli_command_parser.inputs.files.File": [[21, 5, 1, "", "__call__"], [21, 3, 1, "", "encoding"], [21, 3, 1, "", "errors"], [21, 3, 1, "", "lazy"], [21, 3, 1, "", "mode"], [21, 3, 1, "", "parents"], [21, 3, 1, "", "type"]], "cli_command_parser.inputs.files.File.params": [[21, 6, 1, "", "encoding"], [21, 6, 1, "", "errors"], [21, 6, 1, "", "kwargs"], [21, 6, 1, "", "lazy"], [21, 6, 1, "", "mode"], [21, 6, 1, "", "parents"]], "cli_command_parser.inputs.files.Json.params": [[21, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Path": [[21, 5, 1, "", "__call__"]], "cli_command_parser.inputs.files.Path.params": [[21, 6, 1, "", "allow_dash"], [21, 6, 1, "", "exists"], [21, 6, 1, "", "expand"], [21, 6, 1, "", "readable"], [21, 6, 1, "", "resolve"], [21, 6, 1, "", "type"], [21, 6, 1, "", "use_windows_fix"], [21, 6, 1, "", "writable"]], "cli_command_parser.inputs.files.Pickle.params": [[21, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Serialized": [[21, 3, 1, "", "converter"], [21, 3, 1, "", "pass_file"]], "cli_command_parser.inputs.files.Serialized.params": [[21, 6, 1, "", "converter"], [21, 6, 1, "", "kwargs"], [21, 6, 1, "", "pass_file"]], "cli_command_parser.inputs.numeric": [[22, 2, 1, "", "NumRange"], [22, 2, 1, "", "Range"]], "cli_command_parser.inputs.numeric.NumRange": [[22, 5, 1, "", "__call__"], [22, 5, 1, "", "handle_invalid"], [22, 3, 1, "", "include_max"], [22, 3, 1, "", "include_min"], [22, 3, 1, "", "max"], [22, 3, 1, "", "min"], [22, 3, 1, "", "snap"]], "cli_command_parser.inputs.numeric.NumRange.handle_invalid.params": [[22, 6, 1, "", "bound"], [22, 6, 1, "", "inclusive"], [22, 6, 1, "", "snap_dir"]], "cli_command_parser.inputs.numeric.NumRange.params": [[22, 6, 1, "", "include_max"], [22, 6, 1, "", "include_min"], [22, 6, 1, "", "max"], [22, 6, 1, "", "min"], [22, 6, 1, "", "snap"], [22, 6, 1, "", "type"]], "cli_command_parser.inputs.numeric.Range": [[22, 5, 1, "", "__call__"], [22, 3, 1, "", "range"], [22, 3, 1, "", "snap"], [22, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.Range.params": [[22, 6, 1, "", "range"], [22, 6, 1, "", "snap"]], "cli_command_parser.inputs.time": [[23, 2, 1, "", "DTFormatMode"], [23, 2, 1, "", "Date"], [23, 2, 1, "", "DateTime"], [23, 2, 1, "", "Day"], [23, 2, 1, "", "Month"], [23, 2, 1, "", "Time"]], "cli_command_parser.inputs.time.DTFormatMode": [[23, 3, 1, "", "ABBREVIATION"], [23, 3, 1, "", "FULL"], [23, 3, 1, "", "NUMERIC"], [23, 3, 1, "", "NUMERIC_ISO"]], "cli_command_parser.inputs.time.Date": [[23, 3, 1, "", "dt_type"]], "cli_command_parser.inputs.time.DateTime": [[23, 3, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Day": [[23, 3, 1, "", "dt_type"], [23, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Month": [[23, 3, 1, "", "dt_type"], [23, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Time": [[23, 3, 1, "", "dt_type"]], "cli_command_parser.inputs.utils": [[24, 2, 1, "", "FileWrapper"], [24, 2, 1, "", "InputParam"], [24, 2, 1, "", "StatMode"], [24, 1, 1, "", "fix_windows_path"]], "cli_command_parser.inputs.utils.FileWrapper": [[24, 5, 1, "", "close"], [24, 5, 1, "", "read"], [24, 5, 1, "", "write"]], "cli_command_parser.inputs.utils.InputParam": [[24, 3, 1, "", "default"], [24, 3, 1, "", "name"]], "cli_command_parser.inputs.utils.StatMode": [[24, 3, 1, "", "ANY"], [24, 3, 1, "", "BLOCK"], [24, 3, 1, "", "CHARACTER"], [24, 3, 1, "", "DIR"], [24, 3, 1, "", "FIFO"], [24, 3, 1, "", "FILE"], [24, 3, 1, "", "LINK"], [24, 3, 1, "", "SOCKET"], [24, 5, 1, "", "matches"]], "cli_command_parser.metadata": [[25, 2, 1, "", "ProgramMetadata"]], "cli_command_parser.metadata.ProgramMetadata": [[25, 3, 1, "", "command"], [25, 3, 1, "", "description"], [25, 3, 1, "", "doc_name"], [25, 3, 1, "", "doc_str"], [25, 3, 1, "", "docs_url"], [25, 3, 1, "", "email"], [25, 3, 1, "", "epilog"], [25, 5, 1, "", "for_command"], [25, 5, 1, "", "format_epilog"], [25, 5, 1, "", "get_doc_str"], [25, 3, 1, "", "module"], [25, 3, 1, "", "package"], [25, 3, 1, "", "parent"], [25, 3, 1, "", "path"], [25, 3, 1, "", "pkg_doc_str"], [25, 3, 1, "", "prog"], [25, 3, 1, "", "prog_from_sys_argv"], [25, 3, 1, "", "url"], [25, 3, 1, "", "usage"], [25, 3, 1, "", "version"]], "cli_command_parser.nargs": [[26, 2, 1, "", "Nargs"]], "cli_command_parser.nargs.Nargs": [[26, 3, 1, "", "allowed"], [26, 3, 1, "", "max"], [26, 3, 1, "", "min"], [26, 3, 1, "", "range"], [26, 5, 1, "", "satisfied"], [26, 3, 1, "", "variable"]], "cli_command_parser.parameters": [[28, 0, 0, "-", "base"], [29, 0, 0, "-", "choice_map"], [30, 0, 0, "-", "groups"], [31, 0, 0, "-", "option_strings"], [32, 0, 0, "-", "options"], [33, 0, 0, "-", "pass_thru"], [34, 0, 0, "-", "positionals"]], "cli_command_parser.parameters.base": [[28, 2, 1, "", "BaseOption"], [28, 2, 1, "", "BasePositional"], [28, 2, 1, "", "Parameter"]], "cli_command_parser.parameters.base.BaseOption": [[28, 3, 1, "", "option_strs"]], "cli_command_parser.parameters.base.BaseOption.params": [[28, 6, 1, "", "action"], [28, 6, 1, "", "kwargs"], [28, 6, 1, "", "name_mode"], [28, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.base.BasePositional": [[28, 5, 1, "", "__init_subclass__"]], "cli_command_parser.parameters.base.BasePositional.__init_subclass__.params": [[28, 6, 1, "", "default_ok"], [28, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.BasePositional.params": [[28, 6, 1, "", "action"], [28, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.Parameter": [[28, 5, 1, "", "__init_subclass__"], [28, 3, 1, "", "accepts_none"], [28, 3, 1, "", "accepts_values"], [28, 5, 1, "", "can_pop_counts"], [28, 4, 1, "", "has_choices"], [28, 5, 1, "", "is_valid_arg"], [28, 3, 1, "", "metavar"], [28, 3, 1, "", "nargs"], [28, 5, 1, "", "pop_last"], [28, 5, 1, "", "prepare_and_validate"], [28, 5, 1, "", "prepare_value"], [28, 5, 1, "", "result"], [28, 5, 1, "", "result_value"], [28, 3, 1, "", "show_default"], [28, 4, 1, "", "show_in_help"], [28, 5, 1, "", "take_action"], [28, 3, 1, "", "type"], [28, 5, 1, "", "validate"], [28, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.base.Parameter.__init_subclass__.params": [[28, 6, 1, "", "accepts_none"], [28, 6, 1, "", "accepts_values"], [28, 6, 1, "", "repr_attrs"]], "cli_command_parser.parameters.base.Parameter.params": [[28, 6, 1, "", "action"], [28, 6, 1, "", "default"], [28, 6, 1, "", "help"], [28, 6, 1, "", "hide"], [28, 6, 1, "", "metavar"], [28, 6, 1, "", "name"], [28, 6, 1, "", "required"], [28, 6, 1, "", "show_default"]], "cli_command_parser.parameters.choice_map": [[29, 2, 1, "", "Action"], [29, 2, 1, "", "Choice"], [29, 2, 1, "", "ChoiceMap"], [29, 2, 1, "", "SubCommand"]], "cli_command_parser.parameters.choice_map.Action": [[29, 5, 1, "", "__call__"], [29, 5, 1, "", "register"], [29, 5, 1, "", "register_action"]], "cli_command_parser.parameters.choice_map.Action.__call__.params": [[29, 6, 1, "", "choice"], [29, 6, 1, "", "default"], [29, 6, 1, "", "help"], [29, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Action.register.params": [[29, 6, 1, "", "choice"], [29, 6, 1, "", "default"], [29, 6, 1, "", "help"], [29, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Choice": [[29, 3, 1, "", "choice"], [29, 5, 1, "", "format_help"], [29, 5, 1, "", "format_usage"], [29, 3, 1, "", "help"], [29, 3, 1, "", "local"], [29, 3, 1, "", "target"]], "cli_command_parser.parameters.choice_map.ChoiceMap": [[29, 5, 1, "", "__init_subclass__"], [29, 5, 1, "", "append"], [29, 3, 1, "", "choices"], [29, 3, 1, "", "description"], [29, 4, 1, "", "has_choices"], [29, 3, 1, "", "nargs"], [29, 5, 1, "", "register_choice"], [29, 5, 1, "", "result"], [29, 5, 1, "", "result_value"], [29, 4, 1, "", "show_in_help"], [29, 5, 1, "", "target"], [29, 3, 1, "", "title"], [29, 5, 1, "", "validate"]], "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__.params": [[29, 6, 1, "", "choice_validation_exc"], [29, 6, 1, "", "kwargs"], [29, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.ChoiceMap.params": [[29, 6, 1, "", "action"], [29, 6, 1, "", "description"], [29, 6, 1, "", "kwargs"], [29, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.SubCommand": [[29, 5, 1, "", "register"], [29, 5, 1, "", "register_command"]], "cli_command_parser.parameters.choice_map.SubCommand.register.params": [[29, 6, 1, "", "choice"], [29, 6, 1, "", "command_or_choice"], [29, 6, 1, "", "help"]], "cli_command_parser.parameters.groups": [[30, 2, 1, "", "ParamGroup"]], "cli_command_parser.parameters.groups.ParamGroup": [[30, 5, 1, "", "add"], [30, 4, 1, "", "contains_positional"], [30, 3, 1, "", "description"], [30, 5, 1, "", "extend"], [30, 4, 1, "", "in_mutually_exclusive_group"], [30, 3, 1, "", "members"], [30, 3, 1, "", "mutually_dependent"], [30, 3, 1, "", "mutually_exclusive"], [30, 5, 1, "", "register"], [30, 5, 1, "", "register_all"], [30, 4, 1, "", "show_in_help"], [30, 5, 1, "", "validate"]], "cli_command_parser.parameters.groups.ParamGroup.params": [[30, 6, 1, "", "description"], [30, 6, 1, "", "hide"], [30, 6, 1, "", "mutually_dependent"], [30, 6, 1, "", "mutually_exclusive"], [30, 6, 1, "", "name"], [30, 6, 1, "", "required"]], "cli_command_parser.parameters.option_strings": [[31, 2, 1, "", "OptionStrings"], [31, 2, 1, "", "TriFlagOptionStrings"]], "cli_command_parser.parameters.option_strings.OptionStrings": [[31, 5, 1, "", "all_option_strs"], [31, 3, 1, "", "combinable"], [31, 4, 1, "", "display_long"], [31, 4, 1, "", "long"], [31, 3, 1, "", "name_mode"], [31, 5, 1, "", "option_strs"], [31, 4, 1, "", "short"], [31, 5, 1, "", "update"]], "cli_command_parser.parameters.option_strings.TriFlagOptionStrings": [[31, 5, 1, "", "add_alts"], [31, 5, 1, "", "all_option_strs"], [31, 4, 1, "", "alt_allowed"], [31, 5, 1, "", "alt_option_strs"], [31, 4, 1, "", "display_long_alt"], [31, 4, 1, "", "display_long_primary"], [31, 5, 1, "", "option_strs"], [31, 5, 1, "", "primary_option_strs"], [31, 4, 1, "", "short_alt"], [31, 4, 1, "", "short_primary"], [31, 5, 1, "", "update_alts"]], "cli_command_parser.parameters.options": [[32, 2, 1, "", "ActionFlag"], [32, 2, 1, "", "Counter"], [32, 2, 1, "", "Flag"], [32, 2, 1, "", "Option"], [32, 2, 1, "", "TriFlag"], [32, 3, 1, "", "action_flag"], [32, 1, 1, "", "after_main"], [32, 1, 1, "", "before_main"]], "cli_command_parser.parameters.options.ActionFlag": [[32, 5, 1, "", "__call__"], [32, 4, 1, "", "func"], [32, 5, 1, "", "result"]], "cli_command_parser.parameters.options.ActionFlag.params": [[32, 6, 1, "", "always_available"], [32, 6, 1, "", "before_main"], [32, 6, 1, "", "func"], [32, 6, 1, "", "kwargs"], [32, 6, 1, "", "option_strs"], [32, 6, 1, "", "order"]], "cli_command_parser.parameters.options.Counter": [[32, 3, 1, "", "accepts_none"], [32, 3, 1, "", "accepts_values"], [32, 5, 1, "", "append"], [32, 3, 1, "", "nargs"], [32, 5, 1, "", "prepare_value"], [32, 5, 1, "", "result"], [32, 5, 1, "", "result_value"], [32, 3, 1, "", "type"], [32, 5, 1, "", "validate"]], "cli_command_parser.parameters.options.Counter.params": [[32, 6, 1, "", "action"], [32, 6, 1, "", "const"], [32, 6, 1, "", "default"], [32, 6, 1, "", "kwargs"], [32, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.options.Flag": [[32, 3, 1, "", "accepts_none"], [32, 3, 1, "", "accepts_values"], [32, 5, 1, "", "append_const"], [32, 3, 1, "", "const"], [32, 3, 1, "", "default"], [32, 5, 1, "", "store_const"]], "cli_command_parser.parameters.options.Flag.params": [[32, 6, 1, "", "action"], [32, 6, 1, "", "const"], [32, 6, 1, "", "default"], [32, 6, 1, "", "kwargs"], [32, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.options.Option": [[32, 3, 1, "", "env_var"], [32, 5, 1, "", "env_vars"]], "cli_command_parser.parameters.options.Option.params": [[32, 6, 1, "", "action"], [32, 6, 1, "", "choices"], [32, 6, 1, "", "default"], [32, 6, 1, "", "env_var"], [32, 6, 1, "", "kwargs"], [32, 6, 1, "", "nargs"], [32, 6, 1, "", "option_strs"], [32, 6, 1, "", "required"], [32, 6, 1, "", "type"]], "cli_command_parser.parameters.options.TriFlag": [[32, 3, 1, "", "accepts_none"], [32, 3, 1, "", "accepts_values"], [32, 3, 1, "", "alt_help"], [32, 3, 1, "", "consts"], [32, 3, 1, "", "default"], [32, 3, 1, "", "option_strs"], [32, 5, 1, "", "store_const"]], "cli_command_parser.parameters.options.TriFlag.params": [[32, 6, 1, "", "action"], [32, 6, 1, "", "alt_help"], [32, 6, 1, "", "alt_long"], [32, 6, 1, "", "alt_prefix"], [32, 6, 1, "", "alt_short"], [32, 6, 1, "", "consts"], [32, 6, 1, "", "default"], [32, 6, 1, "", "kwargs"], [32, 6, 1, "", "name_mode"], [32, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.pass_thru": [[33, 2, 1, "", "PassThru"]], "cli_command_parser.parameters.pass_thru.PassThru": [[33, 3, 1, "", "missing_hint"], [33, 3, 1, "", "nargs"], [33, 5, 1, "", "result"], [33, 5, 1, "", "result_value"], [33, 5, 1, "", "store_all"], [33, 5, 1, "", "take_action"]], "cli_command_parser.parameters.pass_thru.PassThru.params": [[33, 6, 1, "", "action"], [33, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.positionals": [[34, 2, 1, "", "Positional"]], "cli_command_parser.parameters.positionals.Positional.params": [[34, 6, 1, "", "action"], [34, 6, 1, "", "choices"], [34, 6, 1, "", "default"], [34, 6, 1, "", "kwargs"], [34, 6, 1, "", "nargs"], [34, 6, 1, "", "type"]], "cli_command_parser.parse_tree": [[35, 2, 1, "", "PosNode"]], "cli_command_parser.parse_tree.PosNode": [[35, 4, 1, "", "any_node"], [35, 4, 1, "", "any_word"], [35, 5, 1, "", "build_tree"], [35, 5, 1, "", "has_any"], [35, 5, 1, "", "link_params"], [35, 3, 1, "", "links"], [35, 5, 1, "", "nargs_max"], [35, 5, 1, "", "nargs_min"], [35, 3, 1, "", "param"], [35, 3, 1, "", "parent"], [35, 5, 1, "", "path_repr"], [35, 5, 1, "", "print_tree"], [35, 4, 1, "", "raw_path"], [35, 3, 1, "", "target"], [35, 5, 1, "", "update_node"], [35, 3, 1, "", "word"]], "cli_command_parser.parser": [[36, 2, 1, "", "CommandParser"]], "cli_command_parser.parser.CommandParser": [[36, 3, 1, "", "arg_deque"], [36, 5, 1, "", "consume_values"], [36, 3, 1, "", "ctx"], [36, 3, 1, "", "deferred"], [36, 5, 1, "", "handle_long"], [36, 5, 1, "", "handle_pass_thru"], [36, 5, 1, "", "handle_positional"], [36, 5, 1, "", "handle_short"], [36, 3, 1, "", "node"], [36, 3, 1, "", "params"], [36, 5, 1, "", "parse_args"], [36, 3, 1, "", "positionals"]], "cli_command_parser.parser.CommandParser.consume_values.params": [[36, 6, 1, "", "found"], [36, 6, 1, "", "param"]], "cli_command_parser.testing": [[37, 2, 1, "", "ParserTest"], [37, 2, 1, "", "RedirectStreams"], [37, 1, 1, "", "format_diff"], [37, 1, 1, "", "get_help_text"], [37, 1, 1, "", "get_rst_text"], [37, 1, 1, "", "get_usage_text"], [37, 1, 1, "", "sealed_mock"]], "cli_command_parser.testing.ParserTest": [[37, 5, 1, "", "assert_call_fails"], [37, 5, 1, "", "assert_call_fails_cases"], [37, 5, 1, "", "assert_dict_equal"], [37, 5, 1, "", "assert_parse_fails"], [37, 5, 1, "", "assert_parse_fails_cases"], [37, 5, 1, "", "assert_parse_results"], [37, 5, 1, "", "assert_parse_results_cases"], [37, 5, 1, "", "assert_str_contains"], [37, 5, 1, "", "assert_str_starts_with_line"], [37, 5, 1, "", "assert_strings_equal"]], "cli_command_parser.testing.RedirectStreams": [[37, 4, 1, "", "stderr"], [37, 4, 1, "", "stdout"]], "cli_command_parser.utils": [[39, 2, 1, "", "FixedFlag"], [39, 2, 1, "", "FixedFlagMeta"], [39, 2, 1, "", "MissingMixin"], [39, 2, 1, "", "Terminal"], [39, 1, 1, "", "camel_to_snake_case"], [39, 1, 1, "", "short_repr"]], "cli_command_parser.utils.Terminal": [[39, 4, 1, "", "width"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method", "6": "py:parameter", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"advanc": [0, 45, 57], "usag": [0, 41], "post": 0, "run": [0, 40, 45], "context": [0, 7], "access": 0, "raw": 0, "argument": 0, "valu": 0, "pars": [0, 40, 41, 58, 62], "arg": [0, 44], "dictionari": 0, "paramet": [0, 27, 56, 59, 60, 61], "overridden": 0, "name": [0, 59], "mix": 0, "action": [0, 2, 44, 51, 60], "actionflag": [0, 41, 60], "api": [1, 53], "document": [1, 9, 42, 57], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "annot": 3, "command_paramet": 4, "command": [5, 13, 40, 41, 47, 57, 62], "config": 6, "core": 8, "error_handl": 10, "except": [11, 20], "format": [12, 42], "packag": [12, 17, 27], "param": 14, "restructured_text": 15, "util": [16, 24, 39], "input": [17, 49, 58], "base": [18, 28], "choic": [19, 58], "file": [21, 58], "numer": [22, 58], "time": [23, 58], "metadata": [25, 41], "narg": 26, "choice_map": 29, "group": [30, 42, 51, 56], "option_str": 31, "option": [32, 41, 60], "pass_thru": 33, "posit": [34, 60], "parse_tre": 35, "parser": [36, 57], "test": [37, 62], "type": [38, 56, 58, 59], "defin": 40, "method": 40, "inherit": 40, "initi": 40, "us": 40, "_init_command_": 40, "_before_main_": 40, "__init__": 40, "configur": [41, 57], "error": 41, "handl": 41, "help": [41, 42, 59], "text": [41, 42, 59], "restructuredtext": 42, "gener": 42, "rst": 42, "exampl": [43, 48, 56, 57], "script": 43, "With": 44, "subcommand": [45, 46, 48, 53, 54, 60, 61], "foo": [45, 46], "bar": [45, 46], "baz": 45, "basic": 46, "wrapper": [47, 53], "complex": 48, "hello": [48, 52], "log": [48, 54], "updat": 48, "custom": 49, "echo": 50, "flag": [51, 55, 60], "world": 52, "rest": 53, "show": [53, 54], "sync": 53, "find": 53, "share": [54, 61], "init": 54, "simpl": 55, "mutual": 56, "exclus": 56, "depend": 56, "combin": 56, "how": 56, "work": 56, "outer": 56, "cli": 57, "program": 57, "instal": 57, "user": 57, "guid": 57, "build": 57, "link": 57, "indic": 57, "tabl": 57, "path": 58, "serial": 58, "rang": 58, "numrang": 58, "choicemap": 58, "enumchoic": 58, "date": 58, "dai": 58, "month": 58, "full": 58, "datetim": 58, "get": 59, "start": 59, "entri": 59, "point": 59, "triflag": 60, "counter": 60, "other": 60, "passthru": 60, "automat": 61, "registr": 61, "nest": 61, "explicit": 61, "common": 61, "helper": 62}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Complex Example": [[48, "complex-example"]], "Subcommands": [[48, "subcommands"], [46, "subcommands"], [45, "subcommands"], [53, "subcommands"], [54, "subcommands"], [61, "subcommands"]], "Subcommand: hello": [[48, "subcommand-hello"]], "Subcommand: logs": [[48, "subcommand-logs"]], "Subcommand: update": [[48, "subcommand-update"]], "Basic Subcommand": [[46, "basic-subcommand"]], "Subcommand: foo": [[46, "subcommand-foo"], [45, "subcommand-foo"]], "Subcommand: bar": [[46, "subcommand-bar"]], "Action With Args": [[44, "action-with-args"]], "Command Wrapper": [[47, "command-wrapper"]], "Advanced Subcommand": [[45, "advanced-subcommand"]], "Subcommand: run foo": [[45, "subcommand-run-foo"]], "Subcommand: run bar": [[45, "subcommand-run-bar"]], "Subcommand: baz": [[45, "subcommand-baz"]], "Example Scripts": [[43, "example-scripts"]], "Documentation": [[42, "documentation"]], "Help Text": [[42, "help-text"], [59, "help-text"]], "Group Formatting": [[42, "group-formatting"]], "reStructuredText": [[42, "restructuredtext"]], "Generating RST Documentation": [[42, "generating-rst-documentation"]], "Grouped Action Flags": [[51, "grouped-action-flags"]], "Hello World": [[52, "hello-world"]], "Simple Flags": [[55, "simple-flags"]], "Custom Inputs": [[49, "custom-inputs"]], "Rest Api Wrapper": [[53, "rest-api-wrapper"]], "Subcommand: show": [[53, "subcommand-show"], [54, "subcommand-show"]], "Subcommand: sync": [[53, "subcommand-sync"]], "Subcommand: find": [[53, "subcommand-find"]], "Shared Logging Init": [[54, "shared-logging-init"]], "Echo": [[50, "echo"]], "Automatic Registration": [[61, "automatic-registration"]], "Nested Subcommands": [[61, "nested-subcommands"]], "Explicit Registration": [[61, "explicit-registration"]], "Shared Common Parameters": [[61, "shared-common-parameters"]], "Parameters": [[60, "parameters"], [59, "parameters"]], "Options": [[60, "options"]], "Option": [[60, "option"]], "Flag": [[60, "flag"]], "TriFlag": [[60, "triflag"]], "Counter": [[60, "counter"]], "Positionals": [[60, "positionals"]], "Positional": [[60, "positional"]], "SubCommand": [[60, "subcommand"]], "Action": [[60, "action"]], "Others": [[60, "others"]], "PassThru": [[60, "passthru"]], "ActionFlag": [[60, "actionflag"]], "Input Types": [[58, "input-types"]], "Paths & Files": [[58, "paths-files"]], "Path": [[58, "path"]], "File": [[58, "file"]], "Serialized Files": [[58, "serialized-files"]], "Numeric Ranges": [[58, "numeric-ranges"]], "Range": [[58, "range"]], "NumRange": [[58, "numrange"]], "Choice Inputs": [[58, "choice-inputs"]], "Choices": [[58, "choices"]], "ChoiceMap": [[58, "choicemap"]], "EnumChoices": [[58, "enumchoices"]], "Date & Time": [[58, "date-time"]], "Day & Month": [[58, "day-month"]], "Day": [[58, "day"]], "Month": [[58, "month"]], "Full Date / Time Parsing": [[58, "full-date-time-parsing"]], "DateTime": [[58, "datetime"]], "Date": [[58, "date"]], "Time": [[58, "time"]], "Getting Started": [[59, "getting-started"]], "Types": [[59, "types"]], "Names": [[59, "names"]], "Entry Points": [[59, "entry-points"]], "CLI Command Parser": [[57, "cli-command-parser"]], "Example Program": [[57, "example-program"]], "Installing CLI Command Parser": [[57, "installing-cli-command-parser"]], "User Guide": [[57, "user-guide"]], "Building Commands": [[57, "building-commands"]], "Configuring & Documenting Commands": [[57, "configuring-documenting-commands"]], "Advanced": [[57, "advanced"]], "Links": [[57, "links"]], "Indices and Tables": [[57, "indices-and-tables"]], "Testing Commands": [[62, "testing-commands"]], "Testing Parsing": [[62, "testing-parsing"]], "Test Helpers": [[62, "test-helpers"]], "Parameter Groups": [[56, "parameter-groups"]], "Mutually Exclusive": [[56, "mutually-exclusive"]], "Mutually Dependent": [[56, "mutually-dependent"]], "Combining Group Types": [[56, "combining-group-types"]], "How it Works": [[56, "how-it-works"]], "Mutually Exclusive Outer Group": [[56, "mutually-exclusive-outer-group"]], "Mutually Dependent Outer Group": [[56, "mutually-dependent-outer-group"]], "Examples": [[56, "examples"]], "Commands Module": [[5, "module-cli_command_parser.commands"], [13, "module-cli_command_parser.formatting.commands"]], "Advanced Usage": [[0, "advanced-usage"]], "Post-Run & Context": [[0, "post-run-context"]], "Accessing Raw Argument Values": [[0, "accessing-raw-argument-values"]], "Parsed Args as a Dictionary": [[0, "parsed-args-as-a-dictionary"]], "Parameters with Overridden Names": [[0, "parameters-with-overridden-names"]], "Mixing Actions & ActionFlags": [[0, "mixing-actions-actionflags"]], "Command_Parameters Module": [[4, "module-cli_command_parser.command_parameters"]], "API Documentation": [[1, "api-documentation"]], "Actions Module": [[2, "module-cli_command_parser.actions"]], "Annotations Module": [[3, "module-cli_command_parser.annotations"]], "Config Module": [[6, "module-cli_command_parser.config"]], "Exceptions Module": [[11, "module-cli_command_parser.exceptions"], [20, "module-cli_command_parser.inputs.exceptions"]], "Error_Handling Module": [[10, "module-cli_command_parser.error_handling"]], "Core Module": [[8, "module-cli_command_parser.core"]], "Context Module": [[7, "module-cli_command_parser.context"]], "Formatting Package": [[12, "formatting-package"]], "Documentation Module": [[9, "module-cli_command_parser.documentation"]], "Testing Module": [[37, "module-cli_command_parser.testing"]], "Typing Module": [[38, "module-cli_command_parser.typing"]], "Parse_Tree Module": [[35, "module-cli_command_parser.parse_tree"]], "Commands": [[40, "commands"]], "Defining Commands": [[40, "defining-commands"]], "Command Methods": [[40, "command-methods"]], "Parse & Run": [[40, "parse-run"]], "Inheritance": [[40, "inheritance"]], "Initialization Methods": [[40, "initialization-methods"]], "Using _init_command_": [[40, "using-init-command"]], "Using _before_main_": [[40, "using-before-main"]], "Using __init__": [[40, "using-init"]], "Utils Module": [[39, "module-cli_command_parser.utils"], [16, "module-cli_command_parser.formatting.utils"], [24, "module-cli_command_parser.inputs.utils"]], "Configuration": [[41, "configuration"]], "Command Metadata": [[41, "command-metadata"]], "Configuration Options": [[41, "configuration-options"]], "Error Handling Options": [[41, "error-handling-options"]], "ActionFlag Options": [[41, "actionflag-options"]], "Parsing Options": [[41, "parsing-options"]], "Usage & Help Text Options": [[41, "usage-help-text-options"]], "Parser Module": [[36, "module-cli_command_parser.parser"]], "Params Module": [[14, "module-cli_command_parser.formatting.params"]], "Restructured_Text Module": [[15, "module-cli_command_parser.formatting.restructured_text"]], "Base Module": [[18, "module-cli_command_parser.inputs.base"], [28, "module-cli_command_parser.parameters.base"]], "Choices Module": [[19, "module-cli_command_parser.inputs.choices"]], "Inputs Package": [[17, "inputs-package"]], "Numeric Module": [[22, "module-cli_command_parser.inputs.numeric"]], "Time Module": [[23, "module-cli_command_parser.inputs.time"]], "Nargs Module": [[26, "module-cli_command_parser.nargs"]], "Metadata Module": [[25, "module-cli_command_parser.metadata"]], "Parameters Package": [[27, "parameters-package"]], "Files Module": [[21, "module-cli_command_parser.inputs.files"]], "Choice_Map Module": [[29, "module-cli_command_parser.parameters.choice_map"]], "Groups Module": [[30, "module-cli_command_parser.parameters.groups"]], "Options Module": [[32, "module-cli_command_parser.parameters.options"]], "Positionals Module": [[34, "module-cli_command_parser.parameters.positionals"]], "Pass_Thru Module": [[33, "module-cli_command_parser.parameters.pass_thru"]], "Option_Strings Module": [[31, "module-cli_command_parser.parameters.option_strings"]]}, "indexentries": {"cli_command_parser.actions": [[2, "module-cli_command_parser.actions"]], "help_action() (in module cli_command_parser.actions)": [[2, "cli_command_parser.actions.help_action"]], "module": [[2, "module-cli_command_parser.actions"], [3, "module-cli_command_parser.annotations"], [4, "module-cli_command_parser.command_parameters"], [5, "module-cli_command_parser.commands"], [6, "module-cli_command_parser.config"], [7, "module-cli_command_parser.context"], [8, "module-cli_command_parser.core"], [9, "module-cli_command_parser.documentation"], [10, "module-cli_command_parser.error_handling"], [11, "module-cli_command_parser.exceptions"], [13, "module-cli_command_parser.formatting.commands"], [14, "module-cli_command_parser.formatting.params"], [15, "module-cli_command_parser.formatting.restructured_text"], [16, "module-cli_command_parser.formatting.utils"], [18, "module-cli_command_parser.inputs.base"], [19, "module-cli_command_parser.inputs.choices"], [20, "module-cli_command_parser.inputs.exceptions"], [21, "module-cli_command_parser.inputs.files"], [22, "module-cli_command_parser.inputs.numeric"], [23, "module-cli_command_parser.inputs.time"], [24, "module-cli_command_parser.inputs.utils"], [25, "module-cli_command_parser.metadata"], [26, "module-cli_command_parser.nargs"], [28, "module-cli_command_parser.parameters.base"], [29, "module-cli_command_parser.parameters.choice_map"], [30, "module-cli_command_parser.parameters.groups"], [31, "module-cli_command_parser.parameters.option_strings"], [32, "module-cli_command_parser.parameters.options"], [33, "module-cli_command_parser.parameters.pass_thru"], [34, "module-cli_command_parser.parameters.positionals"], [35, "module-cli_command_parser.parse_tree"], [36, "module-cli_command_parser.parser"], [37, "module-cli_command_parser.testing"], [38, "module-cli_command_parser.typing"], [39, "module-cli_command_parser.utils"]], "cli_command_parser.annotations": [[3, "module-cli_command_parser.annotations"]], "get_descriptor_value_type() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_descriptor_value_type"]], "commandparameters (class in cli_command_parser.command_parameters)": [[4, "cli_command_parser.command_parameters.CommandParameters"]], "action (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action"]], "action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action_flags"]], "always_available_action_flags (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.always_available_action_flags"]], "cli_command_parser.command_parameters": [[4, "module-cli_command_parser.command_parameters"]], "combo_option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.combo_option_map"]], "command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command"]], "command_parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command_parent"]], "find_nested_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_option_that_accepts_values"]], "find_nested_pass_thru() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_pass_thru"]], "find_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_option_that_accepts_values"]], "formatter (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.formatter"]], "get_option_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.get_option_param_value_pairs"]], "groups (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.groups"]], "long_option_to_param_value_pair() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.long_option_to_param_value_pair"]], "option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.option_map"]], "options (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.options"]], "parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.parent"]], "pass_thru (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.pass_thru"]], "positionals (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.positionals"]], "required_check_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.required_check_params"]], "short_option_to_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.short_option_to_param_value_pairs"]], "split_action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.split_action_flags"]], "sub_command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.sub_command"]], "try_env_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.try_env_params"]], "validate_groups() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.validate_groups"]], "command (class in cli_command_parser.commands)": [[5, "cli_command_parser.commands.Command"]], "__call__() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.__call__"]], "_after_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._after_main_"]], "_before_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._before_main_"]], "_init_command_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._init_command_"]], "_pre_init_actions_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._pre_init_actions_"]], "cli_command_parser.commands": [[5, "module-cli_command_parser.commands"]], "ctx (cli_command_parser.commands.command attribute)": [[5, "cli_command_parser.commands.Command.ctx"]], "main() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.main"]], "main() (in module cli_command_parser.commands)": [[5, "cli_command_parser.commands.main"]], "parse() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse"]], "parse_and_run() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse_and_run"]], "alias (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.ALIAS"]], "any (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.ANY"]], "ambiguouscombomode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.AmbiguousComboMode"]], "both (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH"]], "both_dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_DASH"]], "both_underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_UNDERSCORE"]], "combine (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.COMBINE"]], "commandconfig (class in cli_command_parser.config)": [[6, "cli_command_parser.config.CommandConfig"]], "dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.DASH"]], "fields (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.FIELDS"]], "ignore (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.IGNORE"]], "missing (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.MISSING"]], "never (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NEVER"]], "non_empty (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NON_EMPTY"]], "optionnamemode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.OptionNameMode"]], "permissive (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.PERMISSIVE"]], "repeat (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.REPEAT"]], "strict (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.STRICT"]], "showdefaults (class in cli_command_parser.config)": [[6, "cli_command_parser.config.ShowDefaults"]], "subcommandaliashelpmode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode"]], "truthy (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.TRUTHY"]], "underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.UNDERSCORE"]], "action_after_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.action_after_action_flags"]], "add_help (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.add_help"]], "allow_backtrack (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_backtrack"]], "allow_missing (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_missing"]], "always_run_after_main (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.always_run_after_main"]], "ambiguous_short_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ambiguous_short_combos"]], "as_dict() (cli_command_parser.config.commandconfig method)": [[6, "cli_command_parser.config.CommandConfig.as_dict"]], "choice_delim (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.choice_delim"]], "cli_command_parser.config": [[6, "module-cli_command_parser.config"]], "cmd_alias_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.cmd_alias_mode"]], "command_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.command_formatter"]], "error_handler (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.error_handler"]], "extended_epilog (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.extended_epilog"]], "ignore_unknown (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ignore_unknown"]], "min_usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.min_usage_column_width"]], "multiple_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.multiple_action_flags"]], "option_name_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.option_name_mode"]], "param_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.param_formatter"]], "reject_ambiguous_pos_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.reject_ambiguous_pos_combos"]], "show_defaults (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_defaults"]], "show_docstring (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_docstring"]], "show_group_tree (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_tree"]], "show_group_type (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_type"]], "sort_choices (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.sort_choices"]], "usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.usage_column_width"]], "use_type_metavar (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.use_type_metavar"]], "complete (cli_command_parser.context.parsestate attribute)": [[7, "cli_command_parser.context.ParseState.COMPLETE"]], "context (class in cli_command_parser.context)": [[7, "cli_command_parser.context.Context"]], "failed (cli_command_parser.context.parsestate attribute)": [[7, "cli_command_parser.context.ParseState.FAILED"]], "initial (cli_command_parser.context.parsestate attribute)": [[7, "cli_command_parser.context.ParseState.INITIAL"]], "parsestate (class in cli_command_parser.context)": [[7, "cli_command_parser.context.ParseState"]], "action_flag_count (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.action_flag_count"]], "all_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.all_action_flags"]], "allow_argv_prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.allow_argv_prog"]], "categorized_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.categorized_action_flags"]], "cli_command_parser.context": [[7, "module-cli_command_parser.context"]], "config (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.config"]], "done (cli_command_parser.context.parsestate property)": [[7, "cli_command_parser.context.ParseState.done"]], "for_prog() (cli_command_parser.context.context class method)": [[7, "cli_command_parser.context.Context.for_prog"]], "get_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_context"]], "get_current_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_current_context"]], "get_error_handler() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_error_handler"]], "get_or_create_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_or_create_context"]], "get_parsed() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed"]], "get_parsed() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_parsed"]], "get_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed_value"]], "get_raw_arg() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_raw_arg"]], "iter_action_flags() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.iter_action_flags"]], "num_provided() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.num_provided"]], "params (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.params"]], "prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.prog"]], "record_action() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.record_action"]], "set_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.set_parsed_value"]], "terminal_width (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.terminal_width"]], "commandmeta (class in cli_command_parser.core)": [[8, "cli_command_parser.core.CommandMeta"]], "cli_command_parser.core": [[8, "module-cli_command_parser.core"]], "config() (cli_command_parser.core.commandmeta class method)": [[8, "cli_command_parser.core.CommandMeta.config"]], "get_config() (in module cli_command_parser.core)": [[8, "cli_command_parser.core.get_config"]], "get_metadata() (in module cli_command_parser.core)": [[8, "cli_command_parser.core.get_metadata"]], "get_params() (in module cli_command_parser.core)": [[8, "cli_command_parser.core.get_params"]], "get_parent() (in module cli_command_parser.core)": [[8, "cli_command_parser.core.get_parent"]], "get_top_level_commands() (in module cli_command_parser.core)": [[8, "cli_command_parser.core.get_top_level_commands"]], "meta() (cli_command_parser.core.commandmeta class method)": [[8, "cli_command_parser.core.CommandMeta.meta"]], "params() (cli_command_parser.core.commandmeta class method)": [[8, "cli_command_parser.core.CommandMeta.params"]], "parent() (cli_command_parser.core.commandmeta class method)": [[8, "cli_command_parser.core.CommandMeta.parent"]], "rstwriter (class in cli_command_parser.documentation)": [[9, "cli_command_parser.documentation.RstWriter"]], "cli_command_parser.documentation": [[9, "module-cli_command_parser.documentation"]], "document_module() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.document_module"]], "document_package() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.document_package"]], "document_script() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.document_script"]], "document_scripts() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.document_scripts"]], "load_commands() (in module cli_command_parser.documentation)": [[9, "cli_command_parser.documentation.load_commands"]], "render_command_rst() (in module cli_command_parser.documentation)": [[9, "cli_command_parser.documentation.render_command_rst"]], "render_script_rst() (in module cli_command_parser.documentation)": [[9, "cli_command_parser.documentation.render_script_rst"]], "write_index() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.write_index"]], "write_rst() (cli_command_parser.documentation.rstwriter method)": [[9, "cli_command_parser.documentation.RstWriter.write_rst"]], "errorhandler (class in cli_command_parser.error_handling)": [[10, "cli_command_parser.error_handling.ErrorHandler"]], "nullerrorhandler (class in cli_command_parser.error_handling)": [[10, "cli_command_parser.error_handling.NullErrorHandler"]], "__call__() (cli_command_parser.error_handling.errorhandler method)": [[10, "cli_command_parser.error_handling.ErrorHandler.__call__"]], "cli_command_parser.error_handling": [[10, "module-cli_command_parser.error_handling"]], "cls_handler() (cli_command_parser.error_handling.errorhandler class method)": [[10, "cli_command_parser.error_handling.ErrorHandler.cls_handler"]], "copy() (cli_command_parser.error_handling.errorhandler method)": [[10, "cli_command_parser.error_handling.ErrorHandler.copy"]], "get_handler() (cli_command_parser.error_handling.errorhandler method)": [[10, "cli_command_parser.error_handling.ErrorHandler.get_handler"]], "register() (cli_command_parser.error_handling.errorhandler method)": [[10, "cli_command_parser.error_handling.ErrorHandler.register"]], "unregister() (cli_command_parser.error_handling.errorhandler method)": [[10, "cli_command_parser.error_handling.ErrorHandler.unregister"]], "ambiguouscombo": [[11, "cli_command_parser.exceptions.AmbiguousCombo"]], "ambiguousparsetree": [[11, "cli_command_parser.exceptions.AmbiguousParseTree"]], "ambiguousshortform": [[11, "cli_command_parser.exceptions.AmbiguousShortForm"]], "badargument": [[11, "cli_command_parser.exceptions.BadArgument"]], "commanddefinitionerror": [[11, "cli_command_parser.exceptions.CommandDefinitionError"]], "commandparserexception": [[11, "cli_command_parser.exceptions.CommandParserException"]], "invalidchoice": [[11, "cli_command_parser.exceptions.InvalidChoice"]], "missingargument": [[11, "cli_command_parser.exceptions.MissingArgument"]], "multiparamusageerror": [[11, "cli_command_parser.exceptions.MultiParamUsageError"]], "noactivecontext": [[11, "cli_command_parser.exceptions.NoActiveContext"]], "nosuchoption": [[11, "cli_command_parser.exceptions.NoSuchOption"]], "paramconflict": [[11, "cli_command_parser.exceptions.ParamConflict"]], "paramusageerror": [[11, "cli_command_parser.exceptions.ParamUsageError"]], "parameterdefinitionerror": [[11, "cli_command_parser.exceptions.ParameterDefinitionError"]], "paramsmissing": [[11, "cli_command_parser.exceptions.ParamsMissing"]], "parserexit": [[11, "cli_command_parser.exceptions.ParserExit"]], "usageerror": [[11, "cli_command_parser.exceptions.UsageError"]], "cli_command_parser.exceptions": [[11, "module-cli_command_parser.exceptions"]], "code (cli_command_parser.exceptions.commandparserexception attribute)": [[11, "cli_command_parser.exceptions.CommandParserException.code"]], "exit() (cli_command_parser.exceptions.commandparserexception method)": [[11, "cli_command_parser.exceptions.CommandParserException.exit"]], "message (cli_command_parser.exceptions.missingargument attribute)": [[11, "cli_command_parser.exceptions.MissingArgument.message"]], "message (cli_command_parser.exceptions.usageerror attribute)": [[11, "cli_command_parser.exceptions.UsageError.message"]], "show() (cli_command_parser.exceptions.commandparserexception method)": [[11, "cli_command_parser.exceptions.CommandParserException.show"]], "commandhelpformatter (class in cli_command_parser.formatting.commands)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter"]], "cli_command_parser.formatting.commands": [[13, "module-cli_command_parser.formatting.commands"]], "format_help() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_help"]], "format_rst() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_rst"]], "format_usage() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_usage"]], "get_formatter() (in module cli_command_parser.formatting.commands)": [[13, "cli_command_parser.formatting.commands.get_formatter"]], "maybe_add_groups() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_groups"]], "maybe_add_option() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_option"]], "maybe_add_options() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_options"]], "maybe_add_positionals() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[13, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_positionals"]], "choicegroup (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.ChoiceGroup"]], "choicemaphelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter"]], "grouphelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter"]], "optionhelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.OptionHelpFormatter"]], "paramhelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter"]], "passthruhelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.PassThruHelpFormatter"]], "positionalhelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.PositionalHelpFormatter"]], "triflaghelpformatter (class in cli_command_parser.formatting.params)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter"]], "__init_subclass__() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.__init_subclass__"]], "add() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.add"]], "choice_groups (cli_command_parser.formatting.params.choicemaphelpformatter property)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.choice_groups"]], "choice_strs (cli_command_parser.formatting.params.choicegroup attribute)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.choice_strs"]], "choices (cli_command_parser.formatting.params.choicegroup attribute)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.choices"]], "cli_command_parser.formatting.params": [[14, "module-cli_command_parser.formatting.params"]], "for_param_cls() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.for_param_cls"]], "format() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.format"]], "format_basic_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.format_basic_usage"]], "format_description() (cli_command_parser.formatting.params.grouphelpformatter method)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_description"]], "format_help() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.grouphelpformatter method)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_help"]], "format_metavar() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_metavar"]], "format_metavar() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.format_metavar"]], "format_usage() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.grouphelpformatter method)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[14, "cli_command_parser.formatting.params.OptionHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.positionalhelpformatter method)": [[14, "cli_command_parser.formatting.params.PositionalHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_usage"]], "group_choices() (cli_command_parser.formatting.params.choicegroup class method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.group_choices"]], "iter_usage_parts() (cli_command_parser.formatting.params.optionhelpformatter method)": [[14, "cli_command_parser.formatting.params.OptionHelpFormatter.iter_usage_parts"]], "iter_usage_parts() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.iter_usage_parts"]], "maybe_wrap_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.maybe_wrap_usage"]], "param (cli_command_parser.formatting.params.choicemaphelpformatter attribute)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.param"]], "param (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.param"]], "param (cli_command_parser.formatting.params.optionhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.OptionHelpFormatter.param"]], "param (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.param"]], "param (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.PassThruHelpFormatter.param"]], "param (cli_command_parser.formatting.params.positionalhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.PositionalHelpFormatter.param"]], "param (cli_command_parser.formatting.params.triflaghelpformatter attribute)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter.param"]], "prepare() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.prepare"]], "prepare_aliases() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases"]], "prepare_combined() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.prepare_combined"]], "prepare_repeated() (cli_command_parser.formatting.params.choicegroup method)": [[14, "cli_command_parser.formatting.params.ChoiceGroup.prepare_repeated"]], "required_formatter_map (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[14, "cli_command_parser.formatting.params.PassThruHelpFormatter.required_formatter_map"]], "rst_row() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_row"]], "rst_rows() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_rows"]], "rst_rows() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[14, "cli_command_parser.formatting.params.TriFlagHelpFormatter.rst_rows"]], "rst_table() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[14, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.rst_table"]], "rst_table() (cli_command_parser.formatting.params.grouphelpformatter method)": [[14, "cli_command_parser.formatting.params.GroupHelpFormatter.rst_table"]], "rst_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[14, "cli_command_parser.formatting.params.OptionHelpFormatter.rst_usage"]], "rst_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[14, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_usage"]], "rsttable (class in cli_command_parser.formatting.restructured_text)": [[15, "cli_command_parser.formatting.restructured_text.RstTable"]], "add_dict_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.add_dict_rows"]], "add_kv_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.add_kv_rows"]], "add_row() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.add_row"]], "add_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.add_rows"]], "bar() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.bar"]], "cli_command_parser.formatting.restructured_text": [[15, "module-cli_command_parser.formatting.restructured_text"]], "from_dict() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.from_dict"]], "from_dicts() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.from_dicts"]], "iter_build() (cli_command_parser.formatting.restructured_text.rsttable method)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.iter_build"]], "rows (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.rows"]], "rst_bar() (in module cli_command_parser.formatting.restructured_text)": [[15, "cli_command_parser.formatting.restructured_text.rst_bar"]], "rst_list_table() (in module cli_command_parser.formatting.restructured_text)": [[15, "cli_command_parser.formatting.restructured_text.rst_list_table"]], "show_title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.show_title"]], "subtitle (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.subtitle"]], "title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.title"]], "use_table_directive (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.use_table_directive"]], "widths (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[15, "cli_command_parser.formatting.restructured_text.RstTable.widths"]], "cli_command_parser.formatting.utils": [[16, "module-cli_command_parser.formatting.utils"]], "format_help_entry() (in module cli_command_parser.formatting.utils)": [[16, "cli_command_parser.formatting.utils.format_help_entry"]], "line_iter() (in module cli_command_parser.formatting.utils)": [[16, "cli_command_parser.formatting.utils.line_iter"]], "inputtype (class in cli_command_parser.inputs.base)": [[18, "cli_command_parser.inputs.base.InputType"]], "__call__() (cli_command_parser.inputs.base.inputtype method)": [[18, "cli_command_parser.inputs.base.InputType.__call__"]], "cli_command_parser.inputs.base": [[18, "module-cli_command_parser.inputs.base"]], "fix_default() (cli_command_parser.inputs.base.inputtype method)": [[18, "cli_command_parser.inputs.base.InputType.fix_default"]], "format_metavar() (cli_command_parser.inputs.base.inputtype method)": [[18, "cli_command_parser.inputs.base.InputType.format_metavar"]], "is_valid_type() (cli_command_parser.inputs.base.inputtype method)": [[18, "cli_command_parser.inputs.base.InputType.is_valid_type"]], "choicemap (class in cli_command_parser.inputs.choices)": [[19, "cli_command_parser.inputs.choices.ChoiceMap"]], "choices (class in cli_command_parser.inputs.choices)": [[19, "cli_command_parser.inputs.choices.Choices"]], "enumchoices (class in cli_command_parser.inputs.choices)": [[19, "cli_command_parser.inputs.choices.EnumChoices"]], "__call__() (cli_command_parser.inputs.choices.choicemap method)": [[19, "cli_command_parser.inputs.choices.ChoiceMap.__call__"]], "__call__() (cli_command_parser.inputs.choices.choices method)": [[19, "cli_command_parser.inputs.choices.Choices.__call__"]], "__call__() (cli_command_parser.inputs.choices.enumchoices method)": [[19, "cli_command_parser.inputs.choices.EnumChoices.__call__"]], "choices (cli_command_parser.inputs.choices.choicemap attribute)": [[19, "cli_command_parser.inputs.choices.ChoiceMap.choices"]], "cli_command_parser.inputs.choices": [[19, "module-cli_command_parser.inputs.choices"]], "enum (cli_command_parser.inputs.choices.enumchoices attribute)": [[19, "cli_command_parser.inputs.choices.EnumChoices.enum"]], "inputvalidationerror": [[20, "cli_command_parser.inputs.exceptions.InputValidationError"]], "invalidchoiceerror": [[20, "cli_command_parser.inputs.exceptions.InvalidChoiceError"]], "cli_command_parser.inputs.exceptions": [[20, "module-cli_command_parser.inputs.exceptions"]], "file (class in cli_command_parser.inputs.files)": [[21, "cli_command_parser.inputs.files.File"]], "json (class in cli_command_parser.inputs.files)": [[21, "cli_command_parser.inputs.files.Json"]], "path (class in cli_command_parser.inputs.files)": [[21, "cli_command_parser.inputs.files.Path"]], "pickle (class in cli_command_parser.inputs.files)": [[21, "cli_command_parser.inputs.files.Pickle"]], "serialized (class in cli_command_parser.inputs.files)": [[21, "cli_command_parser.inputs.files.Serialized"]], "__call__() (cli_command_parser.inputs.files.file method)": [[21, "cli_command_parser.inputs.files.File.__call__"]], "__call__() (cli_command_parser.inputs.files.path method)": [[21, "cli_command_parser.inputs.files.Path.__call__"]], "cli_command_parser.inputs.files": [[21, "module-cli_command_parser.inputs.files"]], "converter (cli_command_parser.inputs.files.serialized attribute)": [[21, "cli_command_parser.inputs.files.Serialized.converter"]], "encoding (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.encoding"]], "errors (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.errors"]], "lazy (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.lazy"]], "mode (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.mode"]], "parents (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.parents"]], "pass_file (cli_command_parser.inputs.files.serialized attribute)": [[21, "cli_command_parser.inputs.files.Serialized.pass_file"]], "type (cli_command_parser.inputs.files.file attribute)": [[21, "cli_command_parser.inputs.files.File.type"]], "numrange (class in cli_command_parser.inputs.numeric)": [[22, "cli_command_parser.inputs.numeric.NumRange"]], "range (class in cli_command_parser.inputs.numeric)": [[22, "cli_command_parser.inputs.numeric.Range"]], "__call__() (cli_command_parser.inputs.numeric.numrange method)": [[22, "cli_command_parser.inputs.numeric.NumRange.__call__"]], "__call__() (cli_command_parser.inputs.numeric.range method)": [[22, "cli_command_parser.inputs.numeric.Range.__call__"]], "cli_command_parser.inputs.numeric": [[22, "module-cli_command_parser.inputs.numeric"]], "handle_invalid() (cli_command_parser.inputs.numeric.numrange method)": [[22, "cli_command_parser.inputs.numeric.NumRange.handle_invalid"]], "include_max (cli_command_parser.inputs.numeric.numrange attribute)": [[22, "cli_command_parser.inputs.numeric.NumRange.include_max"]], "include_min (cli_command_parser.inputs.numeric.numrange attribute)": [[22, "cli_command_parser.inputs.numeric.NumRange.include_min"]], "max (cli_command_parser.inputs.numeric.numrange attribute)": [[22, "cli_command_parser.inputs.numeric.NumRange.max"]], "min (cli_command_parser.inputs.numeric.numrange attribute)": [[22, "cli_command_parser.inputs.numeric.NumRange.min"]], "range (cli_command_parser.inputs.numeric.range attribute)": [[22, "cli_command_parser.inputs.numeric.Range.range"]], "snap (cli_command_parser.inputs.numeric.numrange attribute)": [[22, "cli_command_parser.inputs.numeric.NumRange.snap"]], "snap (cli_command_parser.inputs.numeric.range attribute)": [[22, "cli_command_parser.inputs.numeric.Range.snap"]], "type (cli_command_parser.inputs.numeric.range attribute)": [[22, "cli_command_parser.inputs.numeric.Range.type"]], "abbreviation (cli_command_parser.inputs.time.dtformatmode attribute)": [[23, "cli_command_parser.inputs.time.DTFormatMode.ABBREVIATION"]], "dtformatmode (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.DTFormatMode"]], "date (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.Date"]], "datetime (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.DateTime"]], "day (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.Day"]], "full (cli_command_parser.inputs.time.dtformatmode attribute)": [[23, "cli_command_parser.inputs.time.DTFormatMode.FULL"]], "month (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.Month"]], "numeric (cli_command_parser.inputs.time.dtformatmode attribute)": [[23, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC"]], "numeric_iso (cli_command_parser.inputs.time.dtformatmode attribute)": [[23, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC_ISO"]], "time (class in cli_command_parser.inputs.time)": [[23, "cli_command_parser.inputs.time.Time"]], "cli_command_parser.inputs.time": [[23, "module-cli_command_parser.inputs.time"]], "dt_type (cli_command_parser.inputs.time.date attribute)": [[23, "cli_command_parser.inputs.time.Date.dt_type"]], "dt_type (cli_command_parser.inputs.time.datetime attribute)": [[23, "cli_command_parser.inputs.time.DateTime.dt_type"]], "dt_type (cli_command_parser.inputs.time.day attribute)": [[23, "cli_command_parser.inputs.time.Day.dt_type"]], "dt_type (cli_command_parser.inputs.time.month attribute)": [[23, "cli_command_parser.inputs.time.Month.dt_type"]], "dt_type (cli_command_parser.inputs.time.time attribute)": [[23, "cli_command_parser.inputs.time.Time.dt_type"]], "parse_numeric() (cli_command_parser.inputs.time.day method)": [[23, "cli_command_parser.inputs.time.Day.parse_numeric"]], "parse_numeric() (cli_command_parser.inputs.time.month method)": [[23, "cli_command_parser.inputs.time.Month.parse_numeric"]], "any (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.ANY"]], "block (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.BLOCK"]], "character (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.CHARACTER"]], "dir (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.DIR"]], "fifo (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.FIFO"]], "file (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.FILE"]], "filewrapper (class in cli_command_parser.inputs.utils)": [[24, "cli_command_parser.inputs.utils.FileWrapper"]], "inputparam (class in cli_command_parser.inputs.utils)": [[24, "cli_command_parser.inputs.utils.InputParam"]], "link (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.LINK"]], "socket (cli_command_parser.inputs.utils.statmode attribute)": [[24, "cli_command_parser.inputs.utils.StatMode.SOCKET"]], "statmode (class in cli_command_parser.inputs.utils)": [[24, "cli_command_parser.inputs.utils.StatMode"]], "cli_command_parser.inputs.utils": [[24, "module-cli_command_parser.inputs.utils"]], "close() (cli_command_parser.inputs.utils.filewrapper method)": [[24, "cli_command_parser.inputs.utils.FileWrapper.close"]], "default (cli_command_parser.inputs.utils.inputparam attribute)": [[24, "cli_command_parser.inputs.utils.InputParam.default"]], "fix_windows_path() (in module cli_command_parser.inputs.utils)": [[24, "cli_command_parser.inputs.utils.fix_windows_path"]], "matches() (cli_command_parser.inputs.utils.statmode method)": [[24, "cli_command_parser.inputs.utils.StatMode.matches"]], "name (cli_command_parser.inputs.utils.inputparam attribute)": [[24, "cli_command_parser.inputs.utils.InputParam.name"]], "read() (cli_command_parser.inputs.utils.filewrapper method)": [[24, "cli_command_parser.inputs.utils.FileWrapper.read"]], "write() (cli_command_parser.inputs.utils.filewrapper method)": [[24, "cli_command_parser.inputs.utils.FileWrapper.write"]], "programmetadata (class in cli_command_parser.metadata)": [[25, "cli_command_parser.metadata.ProgramMetadata"]], "cli_command_parser.metadata": [[25, "module-cli_command_parser.metadata"]], "command (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.command"]], "description (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.description"]], "doc_name (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.doc_name"]], "doc_str (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.doc_str"]], "docs_url (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.docs_url"]], "email (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.email"]], "epilog (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.epilog"]], "for_command() (cli_command_parser.metadata.programmetadata class method)": [[25, "cli_command_parser.metadata.ProgramMetadata.for_command"]], "format_epilog() (cli_command_parser.metadata.programmetadata method)": [[25, "cli_command_parser.metadata.ProgramMetadata.format_epilog"]], "get_doc_str() (cli_command_parser.metadata.programmetadata method)": [[25, "cli_command_parser.metadata.ProgramMetadata.get_doc_str"]], "module (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.module"]], "package (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.package"]], "parent (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.parent"]], "path (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.path"]], "pkg_doc_str (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.pkg_doc_str"]], "prog (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.prog"]], "prog_from_sys_argv (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.prog_from_sys_argv"]], "url (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.url"]], "usage (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.usage"]], "version (cli_command_parser.metadata.programmetadata attribute)": [[25, "cli_command_parser.metadata.ProgramMetadata.version"]], "nargs (class in cli_command_parser.nargs)": [[26, "cli_command_parser.nargs.Nargs"]], "allowed (cli_command_parser.nargs.nargs attribute)": [[26, "cli_command_parser.nargs.Nargs.allowed"]], "cli_command_parser.nargs": [[26, "module-cli_command_parser.nargs"]], "max (cli_command_parser.nargs.nargs attribute)": [[26, "cli_command_parser.nargs.Nargs.max"]], "min (cli_command_parser.nargs.nargs attribute)": [[26, "cli_command_parser.nargs.Nargs.min"]], "range (cli_command_parser.nargs.nargs attribute)": [[26, "cli_command_parser.nargs.Nargs.range"]], "satisfied() (cli_command_parser.nargs.nargs method)": [[26, "cli_command_parser.nargs.Nargs.satisfied"]], "variable (cli_command_parser.nargs.nargs attribute)": [[26, "cli_command_parser.nargs.Nargs.variable"]], "baseoption (class in cli_command_parser.parameters.base)": [[28, "cli_command_parser.parameters.base.BaseOption"]], "basepositional (class in cli_command_parser.parameters.base)": [[28, "cli_command_parser.parameters.base.BasePositional"]], "parameter (class in cli_command_parser.parameters.base)": [[28, "cli_command_parser.parameters.base.Parameter"]], "__init_subclass__() (cli_command_parser.parameters.base.basepositional class method)": [[28, "cli_command_parser.parameters.base.BasePositional.__init_subclass__"]], "__init_subclass__() (cli_command_parser.parameters.base.parameter class method)": [[28, "cli_command_parser.parameters.base.Parameter.__init_subclass__"]], "accepts_none (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.accepts_none"]], "accepts_values (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.accepts_values"]], "can_pop_counts() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.can_pop_counts"]], "cli_command_parser.parameters.base": [[28, "module-cli_command_parser.parameters.base"]], "has_choices (cli_command_parser.parameters.base.parameter property)": [[28, "cli_command_parser.parameters.base.Parameter.has_choices"]], "is_valid_arg() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.is_valid_arg"]], "metavar (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.metavar"]], "nargs (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.nargs"]], "option_strs (cli_command_parser.parameters.base.baseoption attribute)": [[28, "cli_command_parser.parameters.base.BaseOption.option_strs"]], "pop_last() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.pop_last"]], "prepare_and_validate() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.prepare_and_validate"]], "prepare_value() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.prepare_value"]], "result() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.result"]], "result_value() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.result_value"]], "show_default (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.show_default"]], "show_in_help (cli_command_parser.parameters.base.parameter property)": [[28, "cli_command_parser.parameters.base.Parameter.show_in_help"]], "take_action() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.take_action"]], "type (cli_command_parser.parameters.base.parameter attribute)": [[28, "cli_command_parser.parameters.base.Parameter.type"]], "validate() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.validate"]], "would_accept() (cli_command_parser.parameters.base.parameter method)": [[28, "cli_command_parser.parameters.base.Parameter.would_accept"]], "action (class in cli_command_parser.parameters.choice_map)": [[29, "cli_command_parser.parameters.choice_map.Action"]], "choice (class in cli_command_parser.parameters.choice_map)": [[29, "cli_command_parser.parameters.choice_map.Choice"]], "choicemap (class in cli_command_parser.parameters.choice_map)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap"]], "subcommand (class in cli_command_parser.parameters.choice_map)": [[29, "cli_command_parser.parameters.choice_map.SubCommand"]], "__call__() (cli_command_parser.parameters.choice_map.action method)": [[29, "cli_command_parser.parameters.choice_map.Action.__call__"]], "__init_subclass__() (cli_command_parser.parameters.choice_map.choicemap class method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__"]], "append() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.append"]], "choice (cli_command_parser.parameters.choice_map.choice attribute)": [[29, "cli_command_parser.parameters.choice_map.Choice.choice"]], "choices (cli_command_parser.parameters.choice_map.choicemap attribute)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.choices"]], "cli_command_parser.parameters.choice_map": [[29, "module-cli_command_parser.parameters.choice_map"]], "description (cli_command_parser.parameters.choice_map.choicemap attribute)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.description"]], "format_help() (cli_command_parser.parameters.choice_map.choice method)": [[29, "cli_command_parser.parameters.choice_map.Choice.format_help"]], "format_usage() (cli_command_parser.parameters.choice_map.choice method)": [[29, "cli_command_parser.parameters.choice_map.Choice.format_usage"]], "has_choices (cli_command_parser.parameters.choice_map.choicemap property)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.has_choices"]], "help (cli_command_parser.parameters.choice_map.choice attribute)": [[29, "cli_command_parser.parameters.choice_map.Choice.help"]], "local (cli_command_parser.parameters.choice_map.choice attribute)": [[29, "cli_command_parser.parameters.choice_map.Choice.local"]], "nargs (cli_command_parser.parameters.choice_map.choicemap attribute)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.nargs"]], "register() (cli_command_parser.parameters.choice_map.action method)": [[29, "cli_command_parser.parameters.choice_map.Action.register"]], "register() (cli_command_parser.parameters.choice_map.subcommand method)": [[29, "cli_command_parser.parameters.choice_map.SubCommand.register"]], "register_action() (cli_command_parser.parameters.choice_map.action method)": [[29, "cli_command_parser.parameters.choice_map.Action.register_action"]], "register_choice() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.register_choice"]], "register_command() (cli_command_parser.parameters.choice_map.subcommand method)": [[29, "cli_command_parser.parameters.choice_map.SubCommand.register_command"]], "result() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.result"]], "result_value() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.result_value"]], "show_in_help (cli_command_parser.parameters.choice_map.choicemap property)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.show_in_help"]], "target (cli_command_parser.parameters.choice_map.choice attribute)": [[29, "cli_command_parser.parameters.choice_map.Choice.target"]], "target() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.target"]], "title (cli_command_parser.parameters.choice_map.choicemap attribute)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.title"]], "validate() (cli_command_parser.parameters.choice_map.choicemap method)": [[29, "cli_command_parser.parameters.choice_map.ChoiceMap.validate"]], "paramgroup (class in cli_command_parser.parameters.groups)": [[30, "cli_command_parser.parameters.groups.ParamGroup"]], "add() (cli_command_parser.parameters.groups.paramgroup method)": [[30, "cli_command_parser.parameters.groups.ParamGroup.add"]], "cli_command_parser.parameters.groups": [[30, "module-cli_command_parser.parameters.groups"]], "contains_positional (cli_command_parser.parameters.groups.paramgroup property)": [[30, "cli_command_parser.parameters.groups.ParamGroup.contains_positional"]], "description (cli_command_parser.parameters.groups.paramgroup attribute)": [[30, "cli_command_parser.parameters.groups.ParamGroup.description"]], "extend() (cli_command_parser.parameters.groups.paramgroup method)": [[30, "cli_command_parser.parameters.groups.ParamGroup.extend"]], "in_mutually_exclusive_group (cli_command_parser.parameters.groups.paramgroup property)": [[30, "cli_command_parser.parameters.groups.ParamGroup.in_mutually_exclusive_group"]], "members (cli_command_parser.parameters.groups.paramgroup attribute)": [[30, "cli_command_parser.parameters.groups.ParamGroup.members"]], "mutually_dependent (cli_command_parser.parameters.groups.paramgroup attribute)": [[30, "cli_command_parser.parameters.groups.ParamGroup.mutually_dependent"]], "mutually_exclusive (cli_command_parser.parameters.groups.paramgroup attribute)": [[30, "cli_command_parser.parameters.groups.ParamGroup.mutually_exclusive"]], "register() (cli_command_parser.parameters.groups.paramgroup method)": [[30, "cli_command_parser.parameters.groups.ParamGroup.register"]], "register_all() (cli_command_parser.parameters.groups.paramgroup method)": [[30, "cli_command_parser.parameters.groups.ParamGroup.register_all"]], "show_in_help (cli_command_parser.parameters.groups.paramgroup property)": [[30, "cli_command_parser.parameters.groups.ParamGroup.show_in_help"]], "validate() (cli_command_parser.parameters.groups.paramgroup method)": [[30, "cli_command_parser.parameters.groups.ParamGroup.validate"]], "optionstrings (class in cli_command_parser.parameters.option_strings)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings"]], "triflagoptionstrings (class in cli_command_parser.parameters.option_strings)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings"]], "add_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.add_alts"]], "all_option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.all_option_strs"]], "all_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.all_option_strs"]], "alt_allowed (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_allowed"]], "alt_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_option_strs"]], "cli_command_parser.parameters.option_strings": [[31, "module-cli_command_parser.parameters.option_strings"]], "combinable (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.combinable"]], "display_long (cli_command_parser.parameters.option_strings.optionstrings property)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.display_long"]], "display_long_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_alt"]], "display_long_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_primary"]], "long (cli_command_parser.parameters.option_strings.optionstrings property)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.long"]], "name_mode (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.name_mode"]], "option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.option_strs"]], "option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.option_strs"]], "primary_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.primary_option_strs"]], "short (cli_command_parser.parameters.option_strings.optionstrings property)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.short"]], "short_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_alt"]], "short_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_primary"]], "update() (cli_command_parser.parameters.option_strings.optionstrings method)": [[31, "cli_command_parser.parameters.option_strings.OptionStrings.update"]], "update_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[31, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.update_alts"]], "actionflag (class in cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.ActionFlag"]], "counter (class in cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.Counter"]], "flag (class in cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.Flag"]], "option (class in cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.Option"]], "triflag (class in cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.TriFlag"]], "__call__() (cli_command_parser.parameters.options.actionflag method)": [[32, "cli_command_parser.parameters.options.ActionFlag.__call__"]], "accepts_none (cli_command_parser.parameters.options.counter attribute)": [[32, "cli_command_parser.parameters.options.Counter.accepts_none"]], "accepts_none (cli_command_parser.parameters.options.flag attribute)": [[32, "cli_command_parser.parameters.options.Flag.accepts_none"]], "accepts_none (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.accepts_none"]], "accepts_values (cli_command_parser.parameters.options.counter attribute)": [[32, "cli_command_parser.parameters.options.Counter.accepts_values"]], "accepts_values (cli_command_parser.parameters.options.flag attribute)": [[32, "cli_command_parser.parameters.options.Flag.accepts_values"]], "accepts_values (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.accepts_values"]], "action_flag (in module cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.action_flag"]], "after_main() (in module cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.after_main"]], "alt_help (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.alt_help"]], "append() (cli_command_parser.parameters.options.counter method)": [[32, "cli_command_parser.parameters.options.Counter.append"]], "append_const() (cli_command_parser.parameters.options.flag method)": [[32, "cli_command_parser.parameters.options.Flag.append_const"]], "before_main() (in module cli_command_parser.parameters.options)": [[32, "cli_command_parser.parameters.options.before_main"]], "cli_command_parser.parameters.options": [[32, "module-cli_command_parser.parameters.options"]], "const (cli_command_parser.parameters.options.flag attribute)": [[32, "cli_command_parser.parameters.options.Flag.const"]], "consts (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.consts"]], "default (cli_command_parser.parameters.options.flag attribute)": [[32, "cli_command_parser.parameters.options.Flag.default"]], "default (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.default"]], "env_var (cli_command_parser.parameters.options.option attribute)": [[32, "cli_command_parser.parameters.options.Option.env_var"]], "env_vars() (cli_command_parser.parameters.options.option method)": [[32, "cli_command_parser.parameters.options.Option.env_vars"]], "func (cli_command_parser.parameters.options.actionflag property)": [[32, "cli_command_parser.parameters.options.ActionFlag.func"]], "nargs (cli_command_parser.parameters.options.counter attribute)": [[32, "cli_command_parser.parameters.options.Counter.nargs"]], "option_strs (cli_command_parser.parameters.options.triflag attribute)": [[32, "cli_command_parser.parameters.options.TriFlag.option_strs"]], "prepare_value() (cli_command_parser.parameters.options.counter method)": [[32, "cli_command_parser.parameters.options.Counter.prepare_value"]], "result() (cli_command_parser.parameters.options.actionflag method)": [[32, "cli_command_parser.parameters.options.ActionFlag.result"]], "result() (cli_command_parser.parameters.options.counter method)": [[32, "cli_command_parser.parameters.options.Counter.result"]], "result_value() (cli_command_parser.parameters.options.counter method)": [[32, "cli_command_parser.parameters.options.Counter.result_value"]], "store_const() (cli_command_parser.parameters.options.flag method)": [[32, "cli_command_parser.parameters.options.Flag.store_const"]], "store_const() (cli_command_parser.parameters.options.triflag method)": [[32, "cli_command_parser.parameters.options.TriFlag.store_const"]], "type (cli_command_parser.parameters.options.counter attribute)": [[32, "cli_command_parser.parameters.options.Counter.type"]], "validate() (cli_command_parser.parameters.options.counter method)": [[32, "cli_command_parser.parameters.options.Counter.validate"]], "passthru (class in cli_command_parser.parameters.pass_thru)": [[33, "cli_command_parser.parameters.pass_thru.PassThru"]], "cli_command_parser.parameters.pass_thru": [[33, "module-cli_command_parser.parameters.pass_thru"]], "missing_hint (cli_command_parser.parameters.pass_thru.passthru attribute)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.missing_hint"]], "nargs (cli_command_parser.parameters.pass_thru.passthru attribute)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.nargs"]], "result() (cli_command_parser.parameters.pass_thru.passthru method)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.result"]], "result_value() (cli_command_parser.parameters.pass_thru.passthru method)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.result_value"]], "store_all() (cli_command_parser.parameters.pass_thru.passthru method)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.store_all"]], "take_action() (cli_command_parser.parameters.pass_thru.passthru method)": [[33, "cli_command_parser.parameters.pass_thru.PassThru.take_action"]], "positional (class in cli_command_parser.parameters.positionals)": [[34, "cli_command_parser.parameters.positionals.Positional"]], "cli_command_parser.parameters.positionals": [[34, "module-cli_command_parser.parameters.positionals"]], "posnode (class in cli_command_parser.parse_tree)": [[35, "cli_command_parser.parse_tree.PosNode"]], "any_node (cli_command_parser.parse_tree.posnode property)": [[35, "cli_command_parser.parse_tree.PosNode.any_node"]], "any_word (cli_command_parser.parse_tree.posnode property)": [[35, "cli_command_parser.parse_tree.PosNode.any_word"]], "build_tree() (cli_command_parser.parse_tree.posnode class method)": [[35, "cli_command_parser.parse_tree.PosNode.build_tree"]], "cli_command_parser.parse_tree": [[35, "module-cli_command_parser.parse_tree"]], "has_any() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.has_any"]], "link_params() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.link_params"]], "links (cli_command_parser.parse_tree.posnode attribute)": [[35, "cli_command_parser.parse_tree.PosNode.links"]], "nargs_max() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.nargs_max"]], "nargs_min() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.nargs_min"]], "param (cli_command_parser.parse_tree.posnode attribute)": [[35, "cli_command_parser.parse_tree.PosNode.param"]], "parent (cli_command_parser.parse_tree.posnode attribute)": [[35, "cli_command_parser.parse_tree.PosNode.parent"]], "path_repr() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.path_repr"]], "print_tree() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.print_tree"]], "raw_path (cli_command_parser.parse_tree.posnode property)": [[35, "cli_command_parser.parse_tree.PosNode.raw_path"]], "target (cli_command_parser.parse_tree.posnode attribute)": [[35, "cli_command_parser.parse_tree.PosNode.target"]], "update_node() (cli_command_parser.parse_tree.posnode method)": [[35, "cli_command_parser.parse_tree.PosNode.update_node"]], "word (cli_command_parser.parse_tree.posnode attribute)": [[35, "cli_command_parser.parse_tree.PosNode.word"]], "commandparser (class in cli_command_parser.parser)": [[36, "cli_command_parser.parser.CommandParser"]], "arg_deque (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.arg_deque"]], "cli_command_parser.parser": [[36, "module-cli_command_parser.parser"]], "consume_values() (cli_command_parser.parser.commandparser method)": [[36, "cli_command_parser.parser.CommandParser.consume_values"]], "ctx (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.ctx"]], "deferred (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.deferred"]], "handle_long() (cli_command_parser.parser.commandparser method)": [[36, "cli_command_parser.parser.CommandParser.handle_long"]], "handle_pass_thru() (cli_command_parser.parser.commandparser method)": [[36, "cli_command_parser.parser.CommandParser.handle_pass_thru"]], "handle_positional() (cli_command_parser.parser.commandparser method)": [[36, "cli_command_parser.parser.CommandParser.handle_positional"]], "handle_short() (cli_command_parser.parser.commandparser method)": [[36, "cli_command_parser.parser.CommandParser.handle_short"]], "node (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.node"]], "params (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.params"]], "parse_args() (cli_command_parser.parser.commandparser class method)": [[36, "cli_command_parser.parser.CommandParser.parse_args"]], "positionals (cli_command_parser.parser.commandparser attribute)": [[36, "cli_command_parser.parser.CommandParser.positionals"]], "parsertest (class in cli_command_parser.testing)": [[37, "cli_command_parser.testing.ParserTest"]], "redirectstreams (class in cli_command_parser.testing)": [[37, "cli_command_parser.testing.RedirectStreams"]], "assert_call_fails() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_call_fails"]], "assert_call_fails_cases() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_call_fails_cases"]], "assert_dict_equal() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_dict_equal"]], "assert_parse_fails() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_parse_fails"]], "assert_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_parse_fails_cases"]], "assert_parse_results() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_parse_results"]], "assert_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_parse_results_cases"]], "assert_str_contains() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_str_contains"]], "assert_str_starts_with_line() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_str_starts_with_line"]], "assert_strings_equal() (cli_command_parser.testing.parsertest method)": [[37, "cli_command_parser.testing.ParserTest.assert_strings_equal"]], "cli_command_parser.testing": [[37, "module-cli_command_parser.testing"]], "format_diff() (in module cli_command_parser.testing)": [[37, "cli_command_parser.testing.format_diff"]], "get_help_text() (in module cli_command_parser.testing)": [[37, "cli_command_parser.testing.get_help_text"]], "get_rst_text() (in module cli_command_parser.testing)": [[37, "cli_command_parser.testing.get_rst_text"]], "get_usage_text() (in module cli_command_parser.testing)": [[37, "cli_command_parser.testing.get_usage_text"]], "sealed_mock() (in module cli_command_parser.testing)": [[37, "cli_command_parser.testing.sealed_mock"]], "stderr (cli_command_parser.testing.redirectstreams property)": [[37, "cli_command_parser.testing.RedirectStreams.stderr"]], "stdout (cli_command_parser.testing.redirectstreams property)": [[37, "cli_command_parser.testing.RedirectStreams.stdout"]], "cli_command_parser.typing": [[38, "module-cli_command_parser.typing"]], "fixedflag (class in cli_command_parser.utils)": [[39, "cli_command_parser.utils.FixedFlag"]], "fixedflagmeta (class in cli_command_parser.utils)": [[39, "cli_command_parser.utils.FixedFlagMeta"]], "missingmixin (class in cli_command_parser.utils)": [[39, "cli_command_parser.utils.MissingMixin"]], "terminal (class in cli_command_parser.utils)": [[39, "cli_command_parser.utils.Terminal"]], "camel_to_snake_case() (in module cli_command_parser.utils)": [[39, "cli_command_parser.utils.camel_to_snake_case"]], "cli_command_parser.utils": [[39, "module-cli_command_parser.utils"]], "short_repr() (in module cli_command_parser.utils)": [[39, "cli_command_parser.utils.short_repr"]], "width (cli_command_parser.utils.terminal property)": [[39, "cli_command_parser.utils.Terminal.width"]], "pep 484": [[60, "index-0"]], "python enhancement proposals": [[60, "index-0"]]}})