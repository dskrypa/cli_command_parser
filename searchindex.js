Search.setIndex({"docnames": ["advanced", "api", "api/cli_command_parser.actions", "api/cli_command_parser.annotations", "api/cli_command_parser.command_parameters", "api/cli_command_parser.commands", "api/cli_command_parser.config", "api/cli_command_parser.context", "api/cli_command_parser.conversion", "api/cli_command_parser.conversion.argparse_ast", "api/cli_command_parser.conversion.argparse_utils", "api/cli_command_parser.conversion.command_builder", "api/cli_command_parser.conversion.utils", "api/cli_command_parser.conversion.visitor", "api/cli_command_parser.core", "api/cli_command_parser.documentation", "api/cli_command_parser.error_handling", "api/cli_command_parser.exceptions", "api/cli_command_parser.formatting", "api/cli_command_parser.formatting.commands", "api/cli_command_parser.formatting.params", "api/cli_command_parser.formatting.restructured_text", "api/cli_command_parser.formatting.utils", "api/cli_command_parser.inputs", "api/cli_command_parser.inputs.base", "api/cli_command_parser.inputs.choices", "api/cli_command_parser.inputs.exceptions", "api/cli_command_parser.inputs.files", "api/cli_command_parser.inputs.numeric", "api/cli_command_parser.inputs.patterns", "api/cli_command_parser.inputs.time", "api/cli_command_parser.inputs.utils", "api/cli_command_parser.metadata", "api/cli_command_parser.nargs", "api/cli_command_parser.parameters", "api/cli_command_parser.parameters.base", "api/cli_command_parser.parameters.choice_map", "api/cli_command_parser.parameters.groups", "api/cli_command_parser.parameters.option_strings", "api/cli_command_parser.parameters.options", "api/cli_command_parser.parameters.pass_thru", "api/cli_command_parser.parameters.positionals", "api/cli_command_parser.parse_tree", "api/cli_command_parser.parser", "api/cli_command_parser.testing", "api/cli_command_parser.typing", "api/cli_command_parser.utils", "commands", "configuration", "documentation", "error_handlers", "examples", "examples/action_with_args", "examples/advanced_subcommand", "examples/basic_subcommand", "examples/command_wrapper", "examples/complex", "examples/custom_inputs", "examples/echo", "examples/grouped_action_flags", "examples/hello_world", "examples/rest_api_wrapper", "examples/shared_logging_init", "examples/simple_flags", "groups", "index", "inputs", "intro", "parameters", "subcommands", "testing"], "filenames": ["advanced.rst", "api.rst", "api/cli_command_parser.actions.rst", "api/cli_command_parser.annotations.rst", "api/cli_command_parser.command_parameters.rst", "api/cli_command_parser.commands.rst", "api/cli_command_parser.config.rst", "api/cli_command_parser.context.rst", "api/cli_command_parser.conversion.rst", "api/cli_command_parser.conversion.argparse_ast.rst", "api/cli_command_parser.conversion.argparse_utils.rst", "api/cli_command_parser.conversion.command_builder.rst", "api/cli_command_parser.conversion.utils.rst", "api/cli_command_parser.conversion.visitor.rst", "api/cli_command_parser.core.rst", "api/cli_command_parser.documentation.rst", "api/cli_command_parser.error_handling.rst", "api/cli_command_parser.exceptions.rst", "api/cli_command_parser.formatting.rst", "api/cli_command_parser.formatting.commands.rst", "api/cli_command_parser.formatting.params.rst", "api/cli_command_parser.formatting.restructured_text.rst", "api/cli_command_parser.formatting.utils.rst", "api/cli_command_parser.inputs.rst", "api/cli_command_parser.inputs.base.rst", "api/cli_command_parser.inputs.choices.rst", "api/cli_command_parser.inputs.exceptions.rst", "api/cli_command_parser.inputs.files.rst", "api/cli_command_parser.inputs.numeric.rst", "api/cli_command_parser.inputs.patterns.rst", "api/cli_command_parser.inputs.time.rst", "api/cli_command_parser.inputs.utils.rst", "api/cli_command_parser.metadata.rst", "api/cli_command_parser.nargs.rst", "api/cli_command_parser.parameters.rst", "api/cli_command_parser.parameters.base.rst", "api/cli_command_parser.parameters.choice_map.rst", "api/cli_command_parser.parameters.groups.rst", "api/cli_command_parser.parameters.option_strings.rst", "api/cli_command_parser.parameters.options.rst", "api/cli_command_parser.parameters.pass_thru.rst", "api/cli_command_parser.parameters.positionals.rst", "api/cli_command_parser.parse_tree.rst", "api/cli_command_parser.parser.rst", "api/cli_command_parser.testing.rst", "api/cli_command_parser.typing.rst", "api/cli_command_parser.utils.rst", "commands.rst", "configuration.rst", "documentation.rst", "error_handlers.rst", "examples.rst", "examples/action_with_args.rst", "examples/advanced_subcommand.rst", "examples/basic_subcommand.rst", "examples/command_wrapper.rst", "examples/complex.rst", "examples/custom_inputs.rst", "examples/echo.rst", "examples/grouped_action_flags.rst", "examples/hello_world.rst", "examples/rest_api_wrapper.rst", "examples/shared_logging_init.rst", "examples/simple_flags.rst", "groups.rst", "index.rst", "inputs.rst", "intro.rst", "parameters.rst", "subcommands.rst", "testing.rst"], "titles": ["Advanced Usage", "API Documentation", "Actions Module", "Annotations Module", "Command_Parameters Module", "Commands Module", "Config Module", "Context Module", "Conversion Package", "Argparse_Ast Module", "Argparse_Utils Module", "Command_Builder Module", "Utils Module", "Visitor Module", "Core Module", "Documentation Module", "Error_Handling Module", "Exceptions Module", "Formatting Package", "Commands Module", "Params Module", "Restructured_Text Module", "Utils Module", "Inputs Package", "Base Module", "Choices Module", "Exceptions Module", "Files Module", "Numeric Module", "Patterns Module", "Time Module", "Utils Module", "Metadata Module", "Nargs Module", "Parameters Package", "Base Module", "Choice_Map Module", "Groups Module", "Option_Strings Module", "Options Module", "Pass_Thru Module", "Positionals Module", "Parse_Tree Module", "Parser Module", "Testing Module", "Typing Module", "Utils Module", "Commands", "Configuration", "Documentation", "Error Handling", "Example Scripts", "Action With Args", "Advanced Subcommand", "Basic Subcommand", "Command Wrapper", "Complex Example", "Custom Inputs", "Echo", "Grouped Action Flags", "Hello World", "Rest Api Wrapper", "Shared Logging Init", "Simple Flags", "Parameter Groups", "CLI Command Parser", "Input Types", "Getting Started", "Parameters", "Subcommands", "Testing Commands"], "terms": {"while": [0, 7, 15, 17, 36, 39, 47, 65, 68, 69], "command": [0, 1, 4, 6, 7, 9, 14, 15, 16, 17, 18, 32, 34, 35, 36, 39, 41, 42, 44, 49, 50, 51, 56, 60, 64, 66, 67, 68, 69], "ar": [0, 4, 5, 6, 7, 14, 15, 20, 25, 27, 29, 30, 33, 35, 36, 37, 39, 41, 47, 48, 49, 50, 56, 64, 65, 66, 67, 68, 69, 70], "intend": [0, 5, 7, 20, 37, 39, 47, 56, 68], "self": [0, 2, 16, 35, 47, 64, 65, 66, 67, 68, 69, 70], "contain": [0, 6, 7, 9, 14, 15, 17, 20, 21, 29, 36, 38, 39, 41, 48, 49, 50, 57, 64, 66, 67, 68, 69], "i": [0, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 39, 40, 41, 46, 47, 48, 49, 50, 52, 56, 61, 64, 65, 66, 67, 68, 69, 70], "possibl": [0, 9, 14, 36, 48, 49, 64, 67, 68, 69, 70], "interact": 0, "them": [0, 15, 20, 28, 36, 40, 47, 50, 56, 61, 64, 66, 68, 69, 70], "after": [0, 4, 5, 6, 7, 16, 37, 39, 47, 48, 67, 68], "call": [0, 5, 6, 7, 9, 11, 13, 14, 15, 16, 20, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 44, 47, 48, 50, 66, 67, 68, 69, 70], "parse_and_run": [0, 1, 5, 47, 69, 70], "which": [0, 5, 6, 7, 14, 15, 27, 28, 30, 36, 39, 41, 47, 48, 50, 55, 64, 66, 68, 69], "return": [0, 5, 6, 7, 14, 15, 20, 21, 24, 27, 28, 29, 30, 33, 36, 37, 38, 39, 41, 43, 47, 48, 50, 66, 68, 69], "instanc": [0, 5, 7, 32, 48, 50], "execut": [0, 7, 36, 39, 68, 69, 70], "exampl": [0, 27, 35, 47, 49, 50, 60, 66, 67, 68, 69, 70], "class": [0, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 64, 65, 66, 67, 68, 69, 70], "foo": [0, 6, 39, 47, 49, 50, 51, 63, 64, 67, 68, 69], "bar": [0, 6, 18, 21, 39, 47, 51, 63, 64, 68, 69], "flag": [0, 1, 4, 6, 7, 29, 34, 35, 39, 41, 46, 47, 48, 51, 64, 66, 67, 69], "b": [0, 44, 47, 59, 61, 63, 64, 66, 68, 69, 70], "default": [0, 1, 5, 6, 7, 8, 9, 11, 14, 15, 16, 20, 21, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 49, 50, 53, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "true": [0, 5, 6, 7, 9, 10, 11, 13, 14, 15, 19, 20, 21, 24, 25, 27, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 47, 48, 49, 50, 63, 64, 66, 68], "baz": [0, 47, 51, 64, 68, 69], "posit": [0, 1, 4, 5, 6, 10, 14, 34, 35, 36, 43, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 64, 66, 67, 69], "narg": [0, 1, 6, 7, 8, 11, 34, 35, 36, 39, 40, 41, 42, 47, 48, 64, 68, 69], "def": [0, 47, 49, 50, 64, 65, 66, 67, 68, 69, 70], "main": [0, 1, 4, 5, 6, 14, 39, 48, 56, 64, 65, 66, 67, 68, 69, 70], "print": [0, 2, 9, 16, 47, 48, 49, 50, 52, 53, 54, 56, 58, 61, 64, 65, 66, 67, 68, 69, 70], "f": [0, 47, 49, 50, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70], "test": [0, 1, 14, 47, 64, 65], "one": [0, 4, 5, 6, 9, 15, 17, 20, 25, 26, 28, 29, 33, 35, 37, 39, 47, 49, 64, 66, 67, 68, 69], "fals": [0, 5, 6, 7, 9, 10, 11, 14, 15, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 64, 66, 68, 70], "__main__": [0, 47, 65, 67, 69], "0x26dfcad6e00": 0, "still": [0, 15, 24, 28, 48, 70], "thei": [0, 5, 6, 7, 14, 20, 33, 35, 36, 37, 47, 48, 56, 64, 66, 67, 68, 69, 70], "were": [0, 5, 6, 7, 17, 20, 35, 38, 43, 47, 48, 50, 64, 65, 66, 67, 68], "from": [0, 3, 6, 7, 9, 14, 15, 20, 29, 30, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 64, 65, 66, 67, 68, 69, 70], "insid": [0, 37, 50, 64, 65, 67, 68], "also": [0, 4, 33, 36, 37, 39, 47, 48, 49, 64, 66, 67, 68, 69, 70], "": [0, 4, 5, 6, 7, 14, 16, 17, 20, 26, 36, 39, 47, 48, 50, 56, 63, 64, 65, 67, 68, 69, 70], "easier": [0, 7, 10], "inspect": [0, 48], "an": [0, 4, 6, 7, 9, 14, 15, 16, 17, 20, 21, 25, 28, 30, 35, 36, 37, 39, 41, 47, 48, 49, 50, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70], "termin": [0, 1, 6, 7, 16, 20, 46, 48, 49], "ctx": [0, 1, 4, 5, 7, 43, 47], "lib": 0, "cli_command_pars": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 65, 66, 67, 69, 70], "0x26dfa94fbb0": 0, "param": [0, 1, 6, 7, 14, 15, 17, 18, 19, 35, 37, 38, 40, 42, 43, 48, 68, 69], "commandparamet": [0, 1, 4, 6, 7, 14, 19, 43, 48], "1": [0, 6, 7, 15, 19, 21, 28, 29, 30, 31, 35, 39, 41, 42, 46, 47, 49, 50, 57, 60, 64, 65, 66, 67, 68, 69, 70], "option": [0, 1, 4, 6, 7, 9, 14, 15, 16, 17, 21, 28, 34, 35, 38, 41, 42, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70], "2": [0, 6, 7, 16, 22, 31, 39, 47, 48, 57, 64, 66, 68, 69, 70], "get_pars": [0, 1, 7, 70], "help": [0, 2, 4, 5, 6, 8, 9, 10, 11, 14, 15, 19, 20, 22, 32, 34, 35, 36, 37, 39, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70], "argv": [0, 5, 7, 9, 14, 44, 47, 48, 67], "The": [0, 2, 4, 5, 6, 7, 9, 11, 14, 15, 16, 20, 21, 27, 28, 29, 30, 31, 35, 36, 37, 39, 40, 41, 43, 47, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 70], "object": [0, 4, 6, 7, 9, 11, 13, 14, 15, 16, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 61, 64, 66, 68, 69], "store": [0, 5, 7, 24, 25, 27, 28, 34, 35, 36, 37, 39, 41, 48, 66, 68, 69], "inform": [0, 67, 68], "about": [0, 16, 29, 47, 66, 67], "configur": [0, 4, 5, 6, 7, 20, 35, 39, 47, 49, 66, 68], "defin": [0, 4, 5, 6, 14, 15, 16, 17, 26, 35, 36, 37, 38, 39, 41, 48, 49, 56, 64, 65, 66, 67, 68, 69, 70], "organ": [0, 47, 64, 65, 69], "input": [0, 1, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 43, 51, 65, 68, 70], "entri": [0, 5, 20, 21, 47, 50, 56, 69], "abov": [0, 5, 15, 21, 33, 39, 47, 49, 65, 66, 67, 69, 70], "automat": [0, 6, 10, 28, 29, 35, 36, 39, 47, 48, 49, 50, 65, 66, 67, 68], "ad": [0, 6, 14, 35, 39, 48, 49, 50, 64, 65, 66, 67, 68], "repres": [0, 6, 8, 9, 21, 29, 35, 47, 66, 68], "action_flag": [0, 1, 4, 5, 6, 14, 34, 39, 47, 48], "store_const": [0, 34, 39, 68], "const": [0, 8, 11, 34, 39, 68], "requir": [0, 6, 8, 9, 10, 11, 14, 17, 20, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 64, 65, 66, 68], "show": [0, 1, 6, 15, 17, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69], "thi": [0, 4, 5, 6, 7, 9, 11, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "messag": [0, 1, 9, 14, 17, 30, 35, 37, 39, 44, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "exit": [0, 1, 2, 9, 16, 17, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70], "order": [0, 5, 21, 35, 37, 39, 47, 49, 64, 68], "inf": [0, 39, 68], "before_main": [0, 1, 4, 5, 7, 34, 39, 47, 49, 64, 68], "0": [0, 7, 9, 11, 14, 17, 20, 22, 30, 36, 39, 41, 42, 43, 46, 48, 50, 53, 56, 57, 61, 62, 64, 66, 68, 69, 70], "func": [0, 1, 8, 9, 13, 32, 34, 39, 44, 46, 68], "function": [0, 5, 7, 9, 14, 15, 16, 27, 31, 35, 36, 39, 41, 46, 47, 50, 65, 66, 67, 68, 69], "help_act": [0, 1, 2], "gener": [0, 5, 6, 9, 11, 14, 15, 19, 20, 24, 29, 35, 36, 39, 47, 65, 66, 67, 68, 69], "avoid": [0, 16, 47, 64, 67, 69], "potenti": [0, 6, 17, 47, 48], "conflict": [0, 4, 9, 47, 64, 67, 69], "other": [0, 5, 6, 15, 17, 20, 28, 30, 35, 36, 37, 39, 40, 47, 49, 50, 63, 64, 67, 69, 70], "method": [0, 5, 6, 7, 9, 11, 14, 20, 30, 35, 36, 37, 39, 41, 44, 48, 50, 65, 66, 67, 68, 69, 70], "It": [0, 4, 7, 9, 11, 14, 20, 35, 36, 39, 48, 49, 64, 65, 68, 69, 70], "alwai": [0, 1, 4, 6, 14, 35, 39, 41, 48, 64, 68], "have": [0, 4, 5, 6, 15, 20, 28, 33, 35, 37, 38, 39, 41, 47, 50, 64, 66, 68, 69], "same": [0, 6, 16, 20, 33, 35, 36, 39, 41, 46, 47, 48, 49, 64, 66, 68, 69, 70], "number": [0, 5, 6, 7, 33, 36, 38, 39, 41, 43, 47, 48, 49, 50, 56, 57, 60, 61, 65, 66, 67, 68, 69, 70], "sinc": [0, 28, 47, 48, 64, 66, 68, 69], "its": [0, 4, 5, 19, 21, 27, 47, 50, 64, 66, 67, 68, 69], "neg": [0, 39, 41, 66, 68], "infin": 0, "take": [0, 15, 17, 35, 36, 39, 40, 41, 47, 48, 49, 50, 56, 61, 64, 68, 69], "preced": [0, 35, 39, 40, 41, 48, 49, 68], "over": [0, 35, 49, 68, 69], "ani": [0, 1, 4, 5, 6, 7, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 56, 60, 64, 66, 67, 68, 69, 70], "There": [0, 47, 50, 65], "special": [0, 47, 65, 68, 70], "handl": [0, 5, 6, 7, 9, 14, 16, 22, 27, 28, 30, 31, 33, 35, 36, 39, 43, 47, 65, 66, 67, 68, 69, 70], "parser": [0, 1, 5, 7, 8, 9, 11, 17, 35, 47, 48, 60, 64, 67, 68], "specif": [0, 16, 27, 29, 33, 39, 41, 47, 50, 66, 68, 69], "allow": [0, 1, 5, 6, 7, 9, 14, 15, 21, 25, 27, 28, 30, 33, 36, 37, 39, 41, 47, 48, 64, 65, 66, 68], "process": [0, 4, 5, 16, 20, 24, 25, 27, 28, 29, 30, 35, 40, 47, 66, 68, 69], "when": [0, 4, 5, 6, 9, 11, 14, 15, 17, 20, 24, 26, 27, 28, 29, 31, 35, 36, 37, 39, 41, 46, 47, 48, 49, 50, 64, 65, 66, 67, 68, 69, 70], "would": [0, 6, 7, 15, 17, 22, 24, 28, 39, 47, 48, 50, 56, 61, 64, 66, 67, 68, 69, 70], "otherwis": [0, 15, 27, 28, 35, 37, 39, 41, 47, 64, 66, 68], "fail": [0, 4, 26, 39, 68], "A": [0, 4, 5, 6, 7, 9, 14, 15, 20, 24, 25, 28, 35, 37, 39, 41, 47, 48, 56, 64, 66, 68, 69, 70], "helper": [0, 7, 10, 15, 33, 35, 44, 49, 66, 68], "exist": [0, 7, 15, 23, 27, 31, 47, 48, 66, 68, 69], "retriev": [0, 7], "without": [0, 5, 6, 35, 36, 37, 39, 40, 47, 50, 66, 67, 68, 69, 70], "need": [0, 5, 27, 29, 30, 36, 47, 49, 50, 64, 65, 66, 67, 68, 69, 70], "deal": 0, "attribut": [0, 4, 13, 35, 48, 67, 68, 70], "like": [0, 3, 5, 6, 16, 20, 28, 29, 30, 35, 39, 48, 49, 56, 64, 66, 68], "continu": [0, 5], "work": [0, 5, 37, 46, 47, 50, 70], "even": [0, 4, 5, 6, 14, 39, 48, 61, 65, 67, 68, 69], "given": [0, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 25, 27, 29, 30, 31, 33, 35, 36, 37, 39, 41, 43, 48, 49, 50, 55, 64, 66, 68, 69], "overrid": [0, 5, 6, 7, 14, 35, 39, 50, 68, 70], "differ": [0, 20, 33, 36, 39, 48, 49, 50, 68, 69], "us": [0, 4, 5, 6, 7, 9, 10, 14, 15, 17, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 43, 46, 48, 49, 50, 56, 60, 64, 65, 66, 67, 68, 69, 70], "As": [0, 5], "conveni": [0, 5, 35, 44, 47, 48, 66, 69], "accept": [0, 6, 7, 24, 25, 27, 28, 33, 35, 36, 39, 41, 48, 64, 66, 68], "collect": [0, 4, 6, 7, 9, 13, 15, 17, 25, 26, 29, 30, 33, 35, 36, 38, 40, 66, 68, 69], "abc": [0, 5, 11, 14, 15, 24, 27, 28, 29, 30, 35, 37, 64, 69], "callabl": [0, 6, 7, 9, 13, 16, 20, 27, 28, 32, 35, 36, 39, 41, 44, 46, 48, 66, 68], "filter": [0, 7, 15, 61, 64], "dict": [0, 6, 7, 9, 13, 14, 15, 16, 20, 21, 23, 25, 29, 32, 36, 42, 44, 48, 66, 70], "onli": [0, 5, 6, 7, 15, 17, 20, 21, 27, 28, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 50, 61, 64, 66, 67, 68, 69], "kei": [0, 7, 15, 21, 25, 35, 66, 68], "match": [0, 6, 7, 17, 23, 25, 26, 27, 29, 31, 33, 39, 48, 50, 61, 66, 68, 69], "signatur": [0, 7, 8, 9, 10, 47], "var_keyword": [0, 7], "e": [0, 7, 16, 29, 36, 37, 39, 47, 61, 64, 66, 68, 69], "kwarg": [0, 5, 6, 7, 9, 11, 14, 15, 20, 21, 25, 27, 30, 32, 35, 36, 39, 40, 41, 44, 46, 48], "exclud": [0, 7], "cannot": [0, 7, 15, 17, 25, 37, 48, 64, 66, 68], "pass": [0, 5, 7, 15, 21, 27, 28, 35, 36, 39, 40, 41, 43, 48, 50, 66, 67, 68], "keyword": [0, 5, 6, 7, 9, 10, 15, 21, 27, 35, 36, 39, 40, 41, 47, 48, 50, 68, 69], "must": [0, 5, 6, 7, 25, 27, 29, 33, 35, 36, 37, 39, 40, 41, 47, 48, 64, 66, 68, 69], "In": [0, 5, 49, 50, 64, 66, 69], "some": [0, 4, 14, 30, 31, 47, 48, 49, 65, 66, 68, 69, 70], "case": [0, 5, 14, 15, 17, 25, 29, 31, 33, 36, 37, 39, 44, 47, 48, 50, 56, 64, 66, 68, 69, 70], "subcommand": [0, 1, 4, 5, 6, 14, 15, 16, 19, 20, 34, 35, 36, 37, 47, 48, 49, 51, 64, 65], "mai": [0, 5, 6, 9, 11, 14, 15, 20, 24, 28, 29, 30, 35, 36, 39, 41, 47, 48, 50, 64, 66, 67, 68, 69, 70], "those": [0, 5, 7, 15, 39, 47, 66, 68, 69], "parent": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 23, 27, 31, 32, 36, 42, 47, 66, 69], "common": [0, 2, 5, 7, 47, 50, 56, 61, 64, 65, 66, 68], "occur": [0, 5, 9], "multipl": [0, 5, 6, 14, 17, 30, 35, 47, 48, 53, 56, 61, 62, 64, 66, 67, 68, 69], "level": [0, 6, 14, 15, 21, 37, 47, 48, 64, 65, 68, 69], "where": [0, 6, 9, 21, 24, 25, 28, 29, 36, 37, 50, 66, 68, 69], "each": [0, 6, 14, 15, 20, 21, 47, 48, 52, 64, 65, 66, 67, 68, 69], "ha": [0, 4, 7, 16, 33, 47, 64, 66, 67, 69, 70], "sub_cmd": [0, 47, 64, 69], "sometim": [0, 70], "necessari": [0, 5, 6, 14, 22, 24, 29, 35, 36, 47, 48, 65, 66], "know": 0, "get_raw_arg": [0, 1, 7], "simplifi": [0, 9, 56, 68, 69], "follow": [0, 5, 6, 9, 14, 20, 35, 48, 49, 56, 64, 65, 66, 67, 68, 69], "we": [0, 47, 49, 64, 66, 67, 69, 70], "can": [0, 5, 6, 7, 9, 15, 35, 36, 39, 47, 48, 49, 50, 53, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70], "see": [0, 21, 27, 29, 39, 41, 47, 48, 49, 64, 66, 67, 68, 69, 70], "directli": [0, 35, 36, 47, 50, 66, 68, 70], "result": [0, 5, 6, 7, 15, 17, 27, 29, 30, 34, 35, 36, 39, 40, 47, 48, 49, 50, 61, 62, 64, 66, 67, 68, 69, 70], "cmd": [0, 44, 70], "both": [0, 1, 6, 14, 20, 27, 39, 41, 48, 64, 66, 68, 69, 70], "note": [0, 6, 69], "list": [0, 4, 5, 7, 9, 11, 12, 14, 15, 20, 21, 35, 36, 37, 38, 39, 41, 43, 47, 66, 67, 68], "instead": [0, 5, 6, 15, 20, 25, 29, 31, 35, 36, 39, 47, 48, 50, 56, 61, 64, 66, 67, 68, 69], "string": [0, 6, 9, 15, 20, 21, 22, 23, 25, 27, 29, 30, 35, 36, 38, 39, 40, 41, 46, 47, 48, 66, 67, 68], "due": [0, 15, 49, 50], "wai": [0, 6, 7, 16, 31, 33, 36, 47, 64, 66, 67, 68, 69], "space": [0, 36, 40, 68, 69], "support": [0, 6, 20, 28, 35, 36, 39, 40, 41, 48, 49, 64, 65, 66, 67, 68, 69], "within": [0, 47, 50, 66, 70], "variabl": [0, 1, 4, 6, 20, 33, 35, 39, 41, 47, 48, 68], "g": [0, 61, 64], "altern": [0, 5, 6, 20, 30, 38, 39, 48, 50, 66, 68], "doubl": [0, 52, 68], "underscor": [0, 1, 6, 48], "advantag": [0, 47, 69], "nativ": 0, "mangl": 0, "do": [0, 5, 14, 15, 36, 47, 64, 66, 68, 69, 70], "direct": [0, 5, 14, 15, 21, 28, 47, 64], "wa": [0, 5, 6, 7, 9, 14, 15, 16, 17, 20, 21, 26, 28, 31, 35, 36, 37, 39, 41, 46, 47, 48, 50, 64, 65, 66, 67, 68], "__sub_cmd": 0, "_init_command_": [0, 1, 5], "had": [0, 15, 48], "been": [0, 5, 33, 37, 38, 48, 70], "output": [0, 6, 15, 16, 30, 48, 49, 50, 64, 66, 69, 70], "build_doc": [0, 49], "py": [0, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "script": [0, 1, 6, 8, 9, 11, 15, 48, 49, 50, 65, 67, 69, 70], "build": [0, 39, 49, 68], "document": [0, 6, 14, 20, 21, 32, 47, 67], "project": [0, 49, 65], "includ": [0, 6, 7, 14, 15, 21, 29, 33, 35, 37, 39, 41, 47, 48, 50, 64, 65, 66, 67, 68, 69], "addition": [0, 33, 48, 69], "two": [0, 20, 39, 68, 69], "decor": [0, 5, 35, 36, 37, 39, 47, 50, 68], "stack": [0, 39, 50], "so": [0, 5, 20, 29, 36, 37, 47, 48, 52, 56, 64, 65, 66, 68, 69, 70], "either": [0, 35, 39, 47, 48, 64, 66, 68, 69], "snippet": [0, 64, 66], "builddoc": 0, "descript": [0, 1, 6, 8, 9, 10, 11, 14, 20, 22, 32, 34, 35, 36, 37, 47, 48, 56, 64, 65, 67, 68, 69, 70], "sphinx": [0, 49], "verbos": [0, 47, 50, 53, 56, 61, 62, 64, 68, 69], "counter": [0, 1, 6, 7, 11, 34, 35, 39, 47, 48, 64, 69], "v": [0, 29, 47, 53, 56, 61, 62, 64, 66, 68, 69], "increas": [0, 39, 47, 53, 56, 61, 62, 64, 68, 69], "log": [0, 5, 15, 39, 47, 50, 51, 53, 61, 64, 68, 69], "specifi": [0, 4, 5, 6, 7, 14, 15, 21, 27, 29, 30, 33, 35, 36, 39, 41, 43, 47, 48, 49, 50, 53, 56, 57, 61, 62, 64, 66, 67, 68, 69], "time": [0, 1, 23, 39, 47, 53, 56, 60, 61, 62, 64, 65, 67, 68, 69, 70], "dry_run": [0, 15, 64], "d": [0, 6, 9, 47, 56, 59, 61, 64, 69], "taken": [0, 5, 7, 15, 39, 56, 61, 64, 68], "__init__": [0, 5, 35, 50, 56, 69], "initi": [0, 5, 7, 9, 21, 36, 37, 39, 48, 49, 64, 65, 66, 68, 69], "etc": [0, 6, 7, 15, 20, 27, 35, 39, 41, 48, 67, 68], "sphinx_build": 0, "subprocess": [0, 68], "c": [0, 11, 57, 59, 60, 64, 65, 67, 68, 69, 70], "clean": [0, 20, 65], "doc": 0, "directori": [0, 15, 27, 44, 66, 68, 69], "befor": [0, 4, 5, 6, 15, 16, 21, 24, 25, 28, 35, 37, 39, 47, 66, 68], "up": [0, 47, 65], "dir": [0, 23, 27, 31, 44, 66], "remov": [0, 56], "old": 0, "rst": [0, 15, 19, 20, 21, 48, 62, 67], "file": [0, 1, 9, 14, 15, 23, 31, 48, 49, 50, 57, 67], "html": [0, 49], "u": [0, 65], "updat": [0, 34, 38, 47, 51, 65], "re": [0, 7, 15, 29, 50, 65, 66, 69], "api": [0, 47, 51, 65, 69], "after_main": [0, 1, 5, 7, 34, 39, 47, 64, 68], "o": [0, 9, 29, 57, 66], "open": [0, 27, 49, 66], "web": 0, "browser": 0, "backup": [0, 68], "backup_rst": 0, "auto": [0, 9, 14, 27, 31, 48, 66], "text": [0, 2, 4, 6, 9, 14, 15, 19, 20, 21, 22, 27, 32, 35, 36, 37, 39, 44, 46, 47, 52, 58, 64, 65, 66, 68, 69], "appear": [0, 35, 37, 39, 41, 49, 64, 68, 69], "section": [0, 6, 21, 36, 48, 66, 68, 69], "h": [0, 2, 6, 9, 14, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "dry": [0, 56, 61, 64, 67], "If": [0, 5, 6, 7, 14, 15, 20, 21, 25, 27, 28, 29, 30, 35, 36, 37, 39, 41, 47, 48, 49, 50, 64, 65, 66, 67, 68, 69], "respect": [0, 28, 66, 68], "neither": [0, 39, 64, 68], "becaus": [0, 14, 30, 64, 65, 69], "mark": [0, 36, 64, 68], "enabl": [0, 6, 35, 47, 48, 63, 66, 68], "via": [0, 5, 15, 24, 27, 35, 36, 39, 41, 46, 47, 48, 65, 66, 68, 69, 70], "For": [0, 13, 15, 27, 33, 47, 48, 50, 66, 68, 69], "uco": 0, "being": [0, 6, 14, 35, 47, 48, 50, 68, 70], "higher": [0, 39, 68], "later": [0, 24, 28, 65, 66], "technic": [0, 36, 68], "noth": [0, 5, 9, 11, 20, 47], "librari": [0, 30, 47, 66], "prevent": [0, 6, 14, 48, 50, 65, 68], "problemat": [0, 48], "you": [0, 5, 30, 36, 47, 49, 65, 66, 67, 68, 70], "want": [0, 36, 49, 68], "should": [0, 5, 6, 7, 9, 14, 15, 24, 25, 27, 28, 29, 30, 35, 36, 39, 41, 43, 47, 48, 50, 55, 63, 66, 68, 69], "check": [0, 4, 21, 27, 29, 35, 45, 48, 66, 68, 70], "your": [0, 30, 47, 65, 66], "applic": [0, 5, 30, 47, 66], "twice": [0, 52, 68], "action": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 20, 34, 35, 36, 39, 40, 41, 47, 48, 50, 51, 56, 61, 62, 64, 65, 70], "modul": [1, 8, 18, 23, 34, 47, 49, 50, 56, 65], "annot": [1, 6, 39, 41, 47, 48, 68], "get_descriptor_value_typ": [1, 3], "get_annotation_value_typ": [1, 3], "get_arg": [1, 3], "command_paramet": 1, "sub_command": [1, 4], "split_action_flag": [1, 4], "combo_option_map": [1, 4], "group": [1, 4, 6, 8, 9, 19, 20, 23, 29, 34, 35, 40, 48, 51, 61, 65, 66, 67, 69], "option_map": [1, 4], "command_par": [1, 4], "pass_thru": [1, 4, 34], "all_posit": [1, 4], "get_positionals_to_pars": [1, 4], "always_available_action_flag": [1, 4], "formatt": [1, 4, 19, 20, 22, 34, 35], "get_option_param_value_pair": [1, 4], "long_option_to_param_value_pair": [1, 4], "short_option_to_param_value_pair": [1, 4], "find_option_that_accepts_valu": [1, 4], "find_nested_option_that_accepts_valu": [1, 4], "find_nested_pass_thru": [1, 4], "validate_group": [1, 4], "try_env_param": [1, 4], "required_check_param": [1, 4], "pars": [1, 4, 5, 6, 7, 9, 17, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 65, 67, 68, 69], "__call__": [1, 5, 6, 14, 16, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 39, 47, 48], "_pre_init_actions_": [1, 5, 47], "_before_main_": [1, 5], "_after_main_": [1, 5, 6, 14, 47, 48, 68], "config": [1, 4, 7, 14, 17, 35, 38, 43, 48, 49], "showdefault": [1, 6, 48], "never": [1, 6, 35, 39, 41, 68, 69], "miss": [1, 6, 14, 17, 35, 40, 46, 47, 48, 64], "truthi": [1, 6, 38, 39, 50, 68], "non_empti": [1, 6], "optionnamemod": [1, 6, 35, 38, 48], "dash": [1, 4, 6, 27, 39, 41, 48, 66, 68], "both_underscor": [1, 6], "both_dash": [1, 6], "none": [1, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 64, 66, 68], "subcommandaliashelpmod": [1, 6, 20, 48], "repeat": [1, 6, 20, 60, 64, 65, 67, 69, 70], "combin": [1, 6, 14, 17, 20, 22, 34, 36, 37, 38, 39, 48, 49, 65, 67, 68, 70], "alia": [1, 6, 9, 11, 20, 28, 39, 61], "ambiguouscombomod": [1, 6, 17, 48], "ignor": [1, 6, 14, 27, 39, 48, 64, 66, 68], "permiss": [1, 6, 15, 66], "strict": [1, 6, 17, 31, 48], "allowleadingdash": [1, 6, 35, 39, 41, 68], "numer": [1, 6, 23, 30, 35, 39, 41, 68], "configitem": [1, 6], "type": [1, 3, 6, 7, 8, 9, 10, 11, 14, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 44, 46, 47, 48, 61, 65, 68, 69], "name": [1, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 23, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 44, 46, 47, 48, 56, 60, 61, 64, 65, 66, 68, 69, 70], "dynamicconfigitem": [1, 6], "config_item": [1, 6], "commandconfig": [1, 4, 6, 7, 14, 20, 35, 43, 48, 50, 68], "field": [1, 6, 56], "error_handl": [1, 5, 6, 14, 48, 50], "always_run_after_main": [1, 6, 14, 47, 48, 68], "allow_annotation_typ": [1, 6, 48], "multiple_action_flag": [1, 6, 14, 48], "action_after_action_flag": [1, 6, 14, 48], "ignore_unknown": [1, 6, 14, 48], "allow_miss": [1, 6, 14, 48], "allow_backtrack": [1, 6, 48], "option_name_mod": [1, 6, 8, 11, 35, 39, 48, 68], "reject_ambiguous_pos_combo": [1, 6, 48], "ambiguous_short_combo": [1, 6, 17, 48], "add_help": [1, 6, 8, 9, 10, 11, 14, 48, 49], "use_type_metavar": [1, 6, 48], "show_default": [1, 6, 34, 35, 48, 68], "cmd_alias_mod": [1, 6, 20, 48], "sort_choic": [1, 6, 24, 28, 29, 30, 48], "choice_delim": [1, 6, 24, 28, 29, 30, 48], "show_group_tre": [1, 6, 48, 49], "show_group_typ": [1, 6, 48, 64], "command_formatt": [1, 6, 48], "param_formatt": [1, 6, 48], "extended_epilog": [1, 6, 48], "usage_column_width": [1, 6, 48], "min_usage_column_width": [1, 6, 48], "wrap_usage_str": [1, 6, 48], "show_docstr": [1, 6, 48], "show_inherited_descript": [1, 6, 48], "sub_cmd_doc_depth": [1, 6, 48], "as_dict": [1, 6], "context": [1, 4, 5, 6, 16, 17, 28, 30, 37, 43, 64, 66, 70], "prog": [1, 7, 8, 9, 10, 11, 14, 32, 48, 68], "allow_argv_prog": [1, 7], "for_prog": [1, 7], "terminal_width": [1, 7, 44], "get_error_handl": [1, 7], "get_parsed_valu": [1, 7], "set_parsed_valu": [1, 7], "record_act": [1, 7], "num_provid": [1, 7], "get_miss": [1, 7], "action_flag_count": [1, 7], "all_action_flag": [1, 7], "categorized_action_flag": [1, 7], "iter_action_flag": [1, 7], "actionphas": [1, 7], "pre_init": [1, 7], "contextproxi": [1, 7], "get_current_context": [1, 7], "get_or_create_context": [1, 7], "get_context": [1, 7], "convers": [1, 9, 10, 11, 12, 13, 24, 26, 28, 65], "packag": [1, 15, 32, 50, 56, 65], "argparse_ast": [1, 8], "visit_func": [1, 8, 9], "addvisitedchild": [1, 8, 9], "astcal": [1, 8, 9], "parserarg": [1, 8, 9, 11], "argcollect": [1, 8, 9, 11], "arggroup": [1, 8, 9, 11], "mutuallyexclusivegroup": [1, 8, 9], "subparsersact": [1, 8, 9, 10], "astargumentpars": [1, 8, 9, 11], "subpars": [1, 8, 9], "argparse_util": [1, 8], "argumentpars": [1, 8, 9, 10, 68], "command_build": [1, 8], "convert_script": [1, 8, 11], "convert": [1, 8, 11, 23, 24, 25, 27, 28, 29, 30, 31, 36, 66], "convertergroup": [1, 8, 11], "scriptconvert": [1, 8, 11], "collectionconvert": [1, 8, 11], "parserconvert": [1, 8, 11], "groupconvert": [1, 8, 11], "paramconvert": [1, 8, 11], "paramconvertergroup": [1, 8, 11], "basearg": [1, 8, 11], "commandarg": [1, 8, 11], "parambasearg": [1, 8, 11], "passthruarg": [1, 8, 11], "paramarg": [1, 8, 11], "optionarg": [1, 8, 11], "flagarg": [1, 8, 11], "literal_eval_or_non": [1, 8, 11], "conversionerror": [1, 8, 11], "util": [1, 3, 8, 14, 15, 18, 21, 23], "get_name_repr": [1, 8, 12], "iter_module_par": [1, 8, 12], "collection_cont": [1, 8, 12], "visitor": [1, 8, 9], "scope": [1, 8, 13, 49], "scopedvisit": [1, 8, 13], "scriptvisitor": [1, 8, 13], "trackedref": [1, 8, 13], "imp_nam": [1, 8, 13], "core": [1, 5], "commandmeta": [1, 14], "meta": [1, 14], "get_par": [1, 14], "get_config": [1, 14], "get_metadata": [1, 14], "get_param": [1, 14], "get_top_level_command": [1, 14], "render_script_rst": [1, 15, 49], "render_command_rst": [1, 15, 49], "load_command": [1, 15, 44], "filtered_command": [1, 15], "top_level_command": [1, 15], "import_modul": [1, 15], "rstwriter": [1, 15], "document_script": [1, 15], "document_modul": [1, 15], "document_packag": [1, 15], "write_index": [1, 15], "write_rst": [1, 15], "errorhandl": [1, 5, 6, 7, 14, 16, 48, 50], "exc_handler_map": [1, 16], "regist": [1, 5, 6, 14, 16, 34, 35, 36, 37, 38, 39, 41, 48, 50, 68, 69], "unregist": [1, 16], "cls_handler": [1, 16], "iter_handl": [1, 16], "copi": [1, 9, 16, 68], "nullerrorhandl": [1, 7, 16], "handler": [1, 5, 16, 24, 25, 27, 28, 29, 30, 35, 65, 66], "exc_cl": [1, 16], "handle_kb_interrupt": [1, 16], "no_exit_handl": [1, 16, 50], "extended_error_handl": [1, 16, 48, 50], "except": [1, 5, 6, 11, 14, 16, 23, 28, 35, 36, 37, 39, 44, 47, 48, 50, 64, 65, 68, 70], "commandparserexcept": [1, 16, 17, 26, 50], "code": [1, 5, 17, 47, 65], "parserexit": [1, 17], "commanddefinitionerror": [1, 17], "parameterdefinitionerror": [1, 17], "ambiguousshortform": [1, 17], "ambiguousparsetre": [1, 6, 17, 48], "usageerror": [1, 17, 44], "paramusageerror": [1, 17], "multiparamusageerror": [1, 17], "ambiguouscombo": [1, 17], "paramconflict": [1, 17], "paramsmiss": [1, 17], "badargu": [1, 17], "invalidchoic": [1, 17], "missingargu": [1, 17], "nosuchopt": [1, 17], "noactivecontext": [1, 7, 17], "unsupportedact": [1, 17], "backtrack": [1, 6, 17, 48], "nextcommand": [1, 17], "format": [1, 8, 11, 15, 19, 20, 21, 22, 23, 30, 35, 47, 48, 65, 66, 69], "commandhelpformatt": [1, 4, 6, 18, 19, 48], "get_formatt": [1, 18, 19], "get_usage_sub_cmd": [1, 18, 19], "paramhelpformatt": [1, 6, 18, 20, 35, 48], "positionalhelpformatt": [1, 18, 20], "optionhelpformatt": [1, 18, 20], "triflaghelpformatt": [1, 18, 20], "choicemaphelpformatt": [1, 18, 20], "choicegroup": [1, 18, 20], "passthruhelpformatt": [1, 18, 20], "grouphelpformatt": [1, 18, 20], "restructured_text": [1, 18], "rst_bar": [1, 18, 21], "rst_header": [1, 18, 21], "spaced_rst_head": [1, 18, 21], "rst_direct": [1, 18, 21], "rst_toc_tre": [1, 18, 21], "rst_list_tabl": [1, 18, 21], "rsttabl": [1, 18, 20, 21], "format_help_entri": [1, 18, 22], "combine_and_wrap": [1, 18, 22], "line_it": [1, 18, 22], "base": [1, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 56, 65, 66, 67, 68, 69], "inputtyp": [1, 23, 24, 26, 27, 28, 29, 30], "choic": [1, 6, 8, 11, 14, 17, 18, 20, 23, 26, 30, 34, 36, 37, 39, 41, 48, 57, 61, 64, 68, 69], "choicemap": [1, 20, 23, 25, 34, 36], "enumchoic": [1, 23, 25], "inputvalidationerror": [1, 23, 26], "invalidchoiceerror": [1, 23, 26, 30], "fileinput": [1, 23, 27], "path": [1, 8, 9, 15, 17, 23, 27, 29, 31, 32, 44, 57, 68], "serial": [1, 23, 27], "json": [1, 23, 27, 57, 66], "pickl": [1, 23, 27, 66], "numericinput": [1, 23, 28], "rang": [1, 23, 28, 33, 57, 65, 67, 68, 69, 70], "numrang": [1, 23, 28], "pattern": [1, 23, 44, 47, 61, 65, 69], "patterninput": [1, 23, 29], "regexmod": [1, 23, 29, 66], "regex": [1, 23, 29], "glob": [1, 23, 29], "different_local": [1, 23, 30], "dtinput": [1, 23, 30], "dtformatmod": [1, 23, 30, 66], "calendarunitinput": [1, 23, 30], "dai": [1, 23, 30], "month": [1, 23, 30], "timedelta": [1, 23, 30], "datetimeinput": [1, 23, 30], "datetim": [1, 23, 30], "date": [1, 23, 30, 47], "dt_repr": [1, 23, 30], "normalize_dt": [1, 23, 30], "inputparam": [1, 23, 31], "statmod": [1, 23, 27, 31, 66], "filewrapp": [1, 23, 27, 31, 66], "allows_writ": [1, 23, 31], "fix_windows_path": [1, 23, 27, 31, 66], "metadata": [1, 47], "metadatabas": [1, 32], "inherit": [1, 6, 15, 32, 48, 65, 69], "get_valu": [1, 32], "dynamicmetadata": [1, 32], "cache_result": [1, 32], "dynamic_metadata": [1, 32], "programmetadata": [1, 14, 32], "cmd_modul": [1, 32], "url": [1, 6, 32, 48], "docs_url": [1, 8, 11, 32], "email": [1, 6, 8, 11, 32, 48], "version": [1, 6, 31, 32, 36, 48, 64, 68], "usag": [1, 6, 7, 8, 9, 10, 11, 14, 19, 20, 22, 32, 35, 37, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "epilog": [1, 6, 8, 9, 10, 11, 14, 32, 47, 48, 70], "doc_str": [1, 32], "pkg_doc_str": [1, 32], "for_command": [1, 32], "get_prog": [1, 32], "doc_nam": [1, 14, 15, 32, 48], "format_epilog": [1, 32], "get_doc_str": [1, 32], "get_descript": [1, 32], "progfind": [1, 32], "mod_obj_prog_map": [1, 32], "normal": [1, 21, 23, 25, 29, 32, 39, 47, 64, 66, 68, 70], "min": [1, 6, 23, 28, 33, 66], "max": [1, 23, 28, 33, 66], "satisfi": [1, 33], "has_upper_bound": [1, 33], "upper_bound": [1, 33], "nargs_max_sum": [1, 33], "nargs_min_sum": [1, 33], "paramet": [1, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 49, 65, 66], "parameter_act": [1, 34, 35, 36, 39, 41], "parambas": [1, 34, 35, 37], "basicactionmixin": [1, 34, 35, 39, 41], "baseposit": [1, 4, 19, 34, 35, 36, 41, 42, 43], "baseopt": [1, 4, 17, 19, 34, 35, 38, 39], "get_active_param_group": [1, 34, 35], "choice_map": [1, 34], "paramgroup": [1, 4, 6, 19, 34, 35, 37, 48, 64, 69], "option_str": [1, 9, 10, 34, 35, 39, 68], "optionstr": [1, 34, 35, 38], "triflagoptionstr": [1, 34, 38, 39], "triflag": [1, 34, 38, 39], "actionflag": [1, 4, 5, 7, 34, 39, 47, 49, 64], "passthru": [1, 4, 34, 40], "parse_tre": 1, "anyword": [1, 42], "n": [1, 15, 42, 44, 47, 56, 57, 60, 65, 66, 67, 68, 70], "remain": [1, 40, 42, 65, 68], "posnod": [1, 17, 42], "link": [1, 23, 31, 42], "target": [1, 5, 6, 17, 20, 34, 36, 42, 68, 69], "word": [1, 15, 17, 36, 42, 52, 68], "link_param": [1, 42], "nargs_min": [1, 42], "nargs_max": [1, 42], "any_word": [1, 42], "any_nod": [1, 42], "has_ani": [1, 42], "raw_path": [1, 42], "path_repr": [1, 42], "build_tre": [1, 42], "update_nod": [1, 42], "print_tre": [1, 42], "process_param": [1, 42], "commandpars": [1, 43], "arg_dequ": [1, 43], "defer": [1, 43], "parse_args_and_get_next_cmd": [1, 43], "get_next_cmd": [1, 43], "handle_pass_thru": [1, 43], "handle_remaind": [1, 43], "handle_posit": [1, 43], "handle_long": [1, 43], "handle_short": [1, 43], "consume_valu": [1, 43], "parsertest": [1, 44], "assert_dict_equ": [1, 44], "assert_parse_result": [1, 44], "assert_parse_results_cas": [1, 44], "assert_env_parse_result": [1, 44], "assert_env_parse_results_cas": [1, 44], "assert_parse_fail": [1, 44], "assert_parse_fails_cas": [1, 44], "assert_argv_parse_fails_cas": [1, 44], "assert_call_fail": [1, 44], "assert_call_fails_cas": [1, 44], "assert_strings_equ": [1, 44], "assert_str_starts_with_lin": [1, 44], "assert_str_contain": [1, 44], "env_var": [1, 34, 35, 39, 44, 68], "format_diff": [1, 44], "format_dict_diff": [1, 44], "redirectstream": [1, 44, 70], "stdout": [1, 27, 44, 58, 66, 70], "stderr": [1, 44, 50, 70], "get_usage_text": [1, 44], "get_help_text": [1, 44], "get_rst_text": [1, 44], "sealed_mock": [1, 44], "temporarydir": [1, 44], "camel_to_snake_cas": [1, 46], "short_repr": [1, 46], "missingmixin": [1, 6, 29, 30, 46], "fixedflagmeta": [1, 46], "fixedflag": [1, 6, 31, 46], "width": [1, 6, 7, 18, 20, 21, 46, 48], "valuesourc": [1, 35, 39, 40, 46], "cli": [1, 4, 5, 6, 14, 35, 39, 40, 46, 47, 48, 50, 60, 66, 67, 68, 69], "env": [1, 35, 44, 46, 61, 64, 68, 69], "str_to_bool": [1, 46], "positive_int": [1, 46], "author": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56], "doug": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 56], "skrypa": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 56], "sourc": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 65, 68], "extract": 3, "command_cl": [3, 7], "attr": [3, 9, 62], "str": [3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 66], "tupl": [3, 4, 9, 11, 13, 20, 22, 29, 30, 32, 33, 35, 39, 42, 44, 66, 68], "wrapper": [3, 16, 51, 68, 69], "around": [3, 16, 46, 50, 69], "3": [3, 6, 16, 17, 20, 22, 44, 46, 47, 64, 65, 70], "7": [3, 46, 65, 66], "8": [3, 6, 15, 31, 49, 65], "compat": 3, "make": [3, 10, 36, 41, 47, 49, 64, 65, 68], "behav": [3, 28, 48, 66], "more": [3, 5, 15, 17, 21, 22, 27, 29, 33, 36, 39, 41, 47, 48, 49, 50, 65, 66, 67, 68, 69], "doe": [3, 5, 9, 11, 14, 16, 17, 20, 21, 26, 29, 30, 31, 35, 36, 39, 47, 48, 50, 66, 68, 69, 70], "9": [3, 65], "all": [4, 5, 6, 7, 9, 14, 15, 17, 19, 20, 25, 29, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 56, 58, 61, 64, 65, 66, 68, 69], "member": [4, 6, 8, 11, 15, 25, 29, 34, 35, 37, 46, 48, 56, 61, 64, 66, 69], "between": [4, 6, 31, 46, 47, 48, 50, 66, 68], "definit": [4, 9], "involv": 4, "commandcl": [4, 14, 15, 19, 35, 42, 44], "parent_param": 4, "split": [4, 52, 68, 69], "optionmap": 4, "map": [4, 14, 15, 17, 21, 25, 36, 48, 66, 69], "short": [4, 6, 17, 34, 35, 38, 39, 48, 67, 68], "opt": 4, "charact": [4, 6, 7, 9, 15, 17, 21, 23, 31, 48, 49, 65, 68], "associ": [4, 5, 7, 19, 20, 36, 68], "properti": [4, 7, 9, 11, 20, 30, 32, 33, 35, 36, 37, 38, 39, 42, 44, 46, 47, 68], "avail": [4, 36, 39, 47, 48, 66, 68, 69, 70], "iter": [4, 7, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22, 33, 35, 37, 38, 42, 44], "yield": [4, 7, 20], "environ": [4, 35, 39, 61, 64, 68, 69], "did": [4, 35, 37, 39, 47, 64], "valu": [4, 6, 7, 9, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 46, 48, 50, 64, 65, 66, 68, 69], "point": [5, 20, 47, 50, 56, 69], "program": [5, 6, 9, 14, 16, 27, 30, 32, 36, 47, 48, 56, 66, 67, 68, 69, 70], "extend": [5, 9, 11, 14, 15, 16, 20, 32, 34, 35, 36, 37, 39, 41, 46, 47, 66, 69], "provid": [5, 6, 7, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 39, 40, 41, 47, 48, 49, 52, 58, 64, 65, 66, 67, 68, 69, 70], "here": [5, 36, 39, 41, 48, 66, 67, 68, 69], "refer": [5, 14, 15, 37, 47], "intern": [5, 7, 17, 36], "safe": [5, 47], "subclass": [5, 6, 9, 11, 14, 15, 20, 24, 25, 28, 35, 36, 37, 47, 48, 66, 69], "redefin": 5, "overwrit": 5, "classmethod": [5, 7, 9, 11, 14, 16, 20, 21, 29, 30, 32, 35, 36, 42, 43, 47], "sequenc": [5, 6, 7, 21, 28, 30, 33, 35, 68], "commandobj": [5, 36], "primari": [5, 14, 37, 38, 39, 47, 65, 68, 69], "argument": [5, 6, 7, 9, 14, 15, 16, 17, 21, 24, 25, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "resolv": [5, 23, 27, 31, 66], "run": [5, 6, 7, 14, 27, 48, 50, 51, 55, 56, 61, 64, 66, 67, 68, 69, 70], "dure": [5, 7, 24, 28, 29, 36, 37, 47, 48, 66, 69], "To": [5, 15, 20, 27, 29, 39, 41, 49, 50, 65, 66, 67, 68, 69, 70], "abl": [5, 47, 68, 69], "possibli": [5, 16], "mention": 5, "separ": [5, 6, 15, 36, 39, 40, 48, 50, 66, 68, 69], "sy": [5, 9, 14, 16, 47, 48, 50, 67, 70], "alreadi": [5, 6, 7, 15, 27, 43, 47, 66], "final": [5, 6, 8, 11, 36, 47, 48], "readi": 5, "arg": [5, 7, 8, 9, 10, 11, 21, 25, 35, 40, 43, 44, 46, 47, 51], "int": [5, 6, 7, 9, 11, 15, 16, 17, 19, 20, 21, 22, 28, 29, 30, 31, 33, 35, 36, 39, 42, 43, 44, 46, 47, 64, 65, 66, 67, 69, 70], "error": [5, 6, 9, 10, 14, 15, 16, 17, 23, 26, 27, 31, 47, 65, 66, 69, 70], "skip": [5, 15, 57], "total": [5, 43], "first": [5, 6, 14, 20, 21, 27, 36, 39, 67, 68], "valid": [5, 16, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 39, 47, 64, 66, 68], "always_avail": [5, 39, 47, 49, 68], "super": [5, 47], "implement": [5, 9, 11, 14, 20, 39, 47, 48, 60, 66, 67, 68], "placehold": [5, 35, 68], "perform": [5, 6, 15, 17, 39, 41, 48, 66, 68], "task": [5, 47, 64, 65], "resourc": 5, "intens": 5, "oper": 5, "side": [5, 28, 66], "effect": [5, 41, 68], "place": [5, 17], "recommend": [5, 47], "trigger": [5, 39, 70], "far": 5, "return_command": 5, "bool": [5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 46, 68], "long": [5, 6, 9, 34, 35, 38, 39, 41, 48, 56, 67, 68, 69], "present": [5, 6, 15, 39, 41, 47, 48, 49, 66, 68, 69], "detect": [5, 6, 39, 41, 48, 68], "count": [5, 7, 11, 33, 35, 39, 60, 65, 67, 68, 70], "found": [5, 14, 43, 50, 64, 67], "runtimeerror": [5, 17], "rais": [5, 6, 7, 14, 15, 16, 17, 26, 28, 35, 36, 37, 39, 48, 50, 64, 68, 69], "explicitli": [5, 6, 20, 29, 36, 39, 50, 66, 67, 68], "whether": [5, 6, 7, 9, 14, 15, 20, 25, 27, 28, 29, 35, 37, 38, 39, 41, 48, 63, 64, 65, 66, 68], "ran": 5, "through": [5, 36, 50, 66], "could": [5, 6, 20, 56], "behavior": [6, 7, 15, 28, 46, 47, 50, 66, 68], "qualnam": [6, 7, 29, 30, 31, 46], "start": [6, 7, 28, 29, 30, 31, 37, 46, 65, 66], "boundari": [6, 7, 29, 30, 31, 46], "most": [6, 16, 36, 37, 47, 68], "rightmost": 6, "highest": 6, "alon": 6, "equival": [6, 48, 67, 68], "shown": [6, 48, 68, 69], "4": [6, 11, 15, 19, 21, 31, 36, 47, 64, 68], "treat": [6, 21, 35, 50, 66], "boolean": [6, 39, 68], "empti": [6, 15, 30, 41, 66, 68], "16": [6, 31], "regardless": [6, 14, 47, 69], "how": [6, 9, 47, 48, 50, 65, 66, 67, 68, 70], "form": [6, 17, 39, 48, 67, 68], "foo_bar": [6, 69], "set": [6, 7, 9, 13, 17, 25, 27, 33, 35, 38, 42, 47, 48, 49, 56, 64, 65, 66, 68, 69], "displai": [6, 14, 21, 36, 39, 48, 64, 68, 69], "No": 6, "At": [6, 66], "least": [6, 30, 35, 37, 39, 64, 66], "NOT": [6, 14, 39, 50, 68], "name_mod": [6, 8, 11, 34, 35, 38, 39, 48, 68], "creation": 6, "ones": [6, 7, 15], "mode": [6, 20, 23, 27, 29, 31, 66], "_": [6, 46, 65, 67, 70], "15": 6, "23": 6, "32": [6, 31], "enum": [6, 7, 23, 25, 29, 30, 46, 47, 48, 66], "alias": [6, 9, 10, 20, 45, 48, 69], "anoth": [6, 48, 49, 66, 69], "line": [6, 7, 9, 16, 20, 22, 52, 66, 68, 69], "similar": [6, 7, 25, 36, 39, 47, 48, 50, 64, 66, 68, 69], "subsequ": [6, 20], "replac": [6, 15, 47, 49], "ambigu": [6, 17, 48], "entir": [6, 48, 64, 66], "best": [6, 48], "effort": [6, 48], "multi": [6, 30, 36, 66], "char": [6, 21], "overlap": 6, "singl": [6, 7, 14, 15, 20, 21, 25, 39, 41, 43, 49, 66, 67, 68], "exact": 6, "reject": [6, 24, 28, 39, 41, 48, 68], "user": [6, 7, 17, 35, 36, 37, 39, 41, 47, 50, 51, 61, 64, 66, 68, 69], "interpret": [6, 36, 50], "lead": [6, 15, 30, 66], "5": [6, 70], "dv": 6, "cv": 6, "read_onli": 6, "block": [6, 23, 31, 37, 48, 64], "infer": [6, 14, 48, 67, 68], "invoc": [6, 14, 48], "unknown": [6, 14, 48], "encount": [6, 14, 15, 48], "metavar": [6, 8, 9, 10, 11, 34, 35, 48, 64, 68], "relat": [6, 29, 31, 48, 50, 61, 64, 66, 69], "sort": [6, 16, 30, 48], "delimit": [6, 22, 48], "visual": [6, 48, 49], "indic": [6, 7, 9, 17, 27, 35, 36, 48, 49, 50, 64, 66, 68], "mutual": [6, 17, 37, 48, 56, 57, 59, 61, 67], "exclus": [6, 17, 28, 37, 48, 56, 57, 59, 61, 66, 67], "depend": [6, 14, 28, 36, 37, 47, 48, 59, 63, 65, 66, 67, 68], "fact": [6, 48, 50], "commandtyp": [6, 7, 19, 32, 36, 43], "paramorgroup": [6, 7, 17, 20, 37], "successfulli": [6, 48], "column": [6, 21, 22, 48], "adjust": [6, 28, 47, 48, 66], "indent": [6, 9, 11, 21, 42, 48], "wrap": [6, 14, 20, 22, 28, 36, 48, 66], "basic": [6, 48, 51, 64, 65, 67, 69], "size": [6, 48], "top": [6, 14, 15, 47, 48, 68, 69], "docstr": [6, 48, 68], "maximum": [6, 15, 21, 28, 33, 48, 66], "depth": [6, 15, 21, 48], "full": [6, 20, 23, 29, 30, 50, 69], "track": 7, "anyconfig": [7, 14], "abstractcontextmanag": [7, 44], "hold": [7, 39, 41, 68], "hierarchi": 7, "affect": [7, 21, 47, 48], "optstr": [7, 11, 20, 21, 22, 32, 35, 36, 39], "pathlik": [7, 9, 15], "current": [7, 31, 65, 69], "fit": 7, "recurs": [7, 42], "dictionari": [7, 29, 48], "access": [7, 70], "gather": [7, 70], "assign": [7, 13, 35, 38, 39, 68], "categor": 7, "Not": [7, 24, 28, 30, 47, 66, 68, 69], "val_count": 7, "phase": 7, "increment": [7, 39, 68], "proxi": 7, "activ": [7, 17, 43], "request": 7, "flask": 7, "instanti": [7, 36], "silent": 7, "get": [7, 19, 65], "creat": [7, 15, 27, 66, 68], "new": [7, 21, 22, 52, 56, 68], "to_cal": 7, "obtain": 7, "particular": [7, 68, 70], "That": [7, 47, 68], "positional_onli": 7, "var_posit": 7, "raw": 7, "mod_cls_to_ast_cls_map": [8, 9], "register_pars": [8, 9], "add_pars": [8, 9, 10], "child_cl": [8, 9], "list_attr": [8, 9], "__init_subclass__": [8, 9, 11, 18, 20, 23, 30, 34, 35, 36], "get_tracked_ref": [8, 9, 13], "init_func_nam": [8, 9], "init_func_arg": [8, 9], "init_func_raw_kwarg": [8, 9], "init_func_kwarg": [8, 9], "init_call_repr": [8, 9], "pprint": [8, 9], "add_argu": [8, 9, 67, 68], "add_mutually_exclusive_group": [8, 9, 10, 64], "add_argument_group": [8, 9, 10], "grouped_children": [8, 9, 11], "add_subpars": [8, 9, 10], "sub_pars": [8, 9], "sp_parent": [8, 9], "newline_between_memb": [8, 11], "for_ast_cal": [8, 11], "init_for_ast_cal": [8, 11], "init_group": [8, 11], "format_lin": [8, 11], "member_typ": [8, 11], "format_al": [8, 11], "ast_obj": [8, 11], "descendant_arg": [8, 11], "format_memb": [8, 11], "sub_parser_convert": [8, 11], "is_sub_pars": [8, 11], "attr_nam": [8, 11], "cmd_option_str": [8, 11], "use_auto_long_opt_str": [8, 11], "get_pos_arg": [8, 11], "get_cls_and_kwarg": [8, 11], "is_pass_thru": [8, 11], "is_posit": [8, 11], "is_opt": [8, 11], "to_str": [8, 11], "from_kwarg": [8, 11], "hide": [8, 11, 34, 35, 37, 64, 68], "init_posit": [8, 11], "init_opt": [8, 11], "init_flag": [8, 11], "init_count": [8, 11], "visit_functiondef": [8, 13], "visit_asyncfunctiondef": [8, 13], "visit_lambda": [8, 13], "visit_classdef": [8, 13], "visit_whil": [8, 13], "track_cal": [8, 13], "track_refs_to": [8, 13], "visit_import": [8, 13], "visit_importfrom": [8, 13], "visit_for": [8, 13], "visit_asyncfor": [8, 13], "resolve_ref": [8, 13], "visit_withitem": [8, 13], "visit_assign": [8, 13], "visit_cal": [8, 13], "src_text": 9, "smart_loop_handl": [9, 13], "ast_cl": 9, "parsercl": 9, "node": [9, 12, 13, 17, 42], "initnod": 9, "optcal": 9, "tracked_ref": 9, "trackedrefmap": 9, "parserobj": 9, "ast": [9, 12, 13, 65], "ac": [9, 11], "add_child": 9, "representedcal": 9, "overridden": [9, 11, 15, 20, 24, 28, 47, 48, 66], "dest": [9, 10], "children": 9, "titl": [9, 10, 15, 18, 21, 34, 36, 48, 68, 69], "prefix_char": [9, 10], "argument_default": [9, 10], "conflict_handl": [9, 10], "python": [9, 15, 30, 31, 47, 66], "basenam": 9, "what": [9, 14, 22, 25, 36, 47, 48, 66, 69], "whose": 9, "formatter_class": [9, 10], "helpformatt": [9, 10], "prefix": [9, 11, 20, 21, 22, 35, 36, 38, 39, 44, 64, 68, 69], "fromfile_prefix_char": [9, 10], "addit": [9, 15, 27, 35, 36, 39, 40, 41, 47, 50, 56, 65, 66, 68, 69, 70], "add": [9, 18, 20, 21, 34, 37, 38, 39, 49, 56, 68], "allow_abbrev": [9, 10], "abbrevi": [9, 23, 30, 66, 68], "unambigu": 9, "exit_on_error": [9, 10], "determin": [9, 24, 28, 36, 39, 68, 69], "info": [9, 21, 27, 29, 39, 41, 47, 48, 64, 66, 69], "from_cal": 10, "argpars": [10, 33, 48, 64, 65, 67, 68], "parser_class": 10, "suppress": [10, 68], "_subparsersact": 10, "add_method": 11, "abstract": [11, 24, 30, 35], "had_memb": 11, "num": 11, "expr": [11, 12, 13], "track_ref": 13, "nodevisitor": 13, "cb": 13, "ref": 13, "import": [13, 15, 47, 49, 50, 56, 65, 66, 67, 69, 70], "importfrom": 13, "item": [13, 56, 66, 69], "imp": 13, "metaclass": [14, 46], "find": [14, 47, 51, 64, 69], "namespac": [14, 68], "abcmeta": 14, "custom": [14, 24, 25, 26, 27, 28, 29, 30, 35, 48, 50, 51, 65, 66], "stem": [14, 15], "disabl": [14, 48, 49, 50, 68, 70], "cl": 14, "commandani": [14, 19], "t": [14, 21, 24, 25, 27, 29, 30, 36, 47, 65, 66, 69], "include_abc": [14, 15], "mro": 14, "__subclasses__": 14, "releas": [14, 65], "dead": 14, "quickli": [14, 65], "enough": [14, 48], "top_onli": 15, "fix_nam": [15, 19], "fix_name_func": [15, 19], "namefunc": [15, 19], "load": [15, 27, 49, 66], "camelcas": [15, 36], "snake_cas": [15, 36, 69], "oserror": [15, 50], "thereof": [15, 47], "attempt": [15, 17, 24, 28, 31, 66], "propag": [15, 50, 70], "importerror": 15, "obj_map": 15, "output_dir": 15, "encod": [15, 23, 27, 30, 31, 66], "utf": [15, 49], "newlin": 15, "ext": 15, "module_templ": 15, "header": [15, 21, 64], "currentmodul": 15, "automodul": 15, "undoc": 15, "skip_modul": 15, "written": [15, 21, 27], "extens": [15, 68], "suffix": [15, 20, 44], "notat": 15, "subdir": 15, "write": [15, 23, 27, 29, 31, 47, 49, 57, 58, 66, 70], "subdirectori": 15, "rel": [15, 39, 68, 69], "page": [15, 65], "preserv": 15, "simpl": [15, 47, 51, 57, 60, 65, 67, 68, 70], "appli": [15, 49, 64], "content": [15, 19, 21, 49, 66], "save": [15, 67], "pair": [15, 21, 25, 39, 66, 68], "rst_str": 15, "discov": [15, 20, 43, 47], "index_nam": 15, "index_head": 15, "index_subdir": 15, "caption": 15, "pkg_name": 15, "pkg_path": 15, "index": [15, 21, 65], "max_depth": [15, 21], "tabl": [15, 21], "tree": [15, 21, 65], "unlimit": [15, 21], "content_subdir": 15, "toctre": [15, 21], "referenc": 15, "expect": [16, 25, 27, 37, 39, 41, 44, 46, 47, 56, 66, 68, 69, 70], "unexpect": [16, 30, 66], "catch": [16, 50], "keyboardinterrupt": [16, 50], "gracefulli": 16, "brokenpipeerror": [16, 50], "often": [16, 68], "caus": [16, 17, 27, 30, 66, 69], "pipe": [16, 50], "tool": [16, 47, 49, 65], "tail": 16, "invalid": [16, 17, 26, 39, 47, 68], "transfer": 16, "control": [16, 47, 48, 49, 69], "baseexcept": 16, "exc_typ": 16, "exc": [16, 44, 50], "facilit": [16, 66], "select": [16, 47, 69], "end": [16, 29, 65, 66, 68], "next": [16, 17, 69], "prompt": 16, "last": [16, 41, 65, 68], "incomplet": 16, "statu": 17, "param_conflicts_map": 17, "correctli": [17, 65], "combo": [17, 48, 64, 68], "partial": [17, 36], "pre": [17, 26, 29, 66], "complet": [17, 27, 31, 47, 66], "took": 17, "advanc": [17, 33, 51, 67], "certain": 17, "format_help": [18, 19, 20, 34, 35, 36], "format_rst": [18, 19], "format_usag": [18, 19, 20, 34, 35, 36], "maybe_add_group": [18, 19], "maybe_add_opt": [18, 19], "maybe_add_posit": [18, 19], "required_formatter_map": [18, 20], "for_param_cl": [18, 20], "maybe_wrap_usag": [18, 20], "format_metavar": [18, 20, 23, 24, 28, 29, 30], "format_basic_usag": [18, 20], "iter_usage_part": [18, 20], "format_descript": [18, 20], "rst_usag": [18, 20], "rst_row": [18, 20], "choice_group": [18, 20], "rst_tabl": [18, 20], "choice_str": [18, 20, 23, 30], "group_choic": [18, 20], "prepar": [18, 20, 35], "prepare_combin": [18, 20], "prepare_alias": [18, 20], "prepare_rep": [18, 20], "subtitl": [18, 21], "show_titl": [18, 21], "use_table_direct": [18, 21], "row": [18, 21], "from_dict": [18, 21], "add_dict_row": [18, 21], "add_kv_row": [18, 21], "add_row": [18, 21], "iter_build": [18, 21], "allow_sys_argv": [19, 32], "init_level": 19, "delim": [19, 20, 22, 46], "sub_cmd_choic": 19, "cont_ind": [19, 22], "built": [20, 46], "param_cl": 20, "parenthes": 20, "bracket": 20, "include_meta": 20, "tw_offset": [20, 22, 36], "alt": [20, 38], "consid": [20, 50], "canon": 20, "togeth": [20, 68], "default_mod": 20, "offset": 20, "calcul": [20, 28, 36, 68, 69], "everi": [20, 39, 41], "primarili": 20, "nest": [20, 37, 47, 64], "inclus": [20, 28, 66], "format_str": 20, "origin": [20, 23, 29, 30, 36, 47, 66], "append": [20, 21, 34, 35, 36, 39, 41, 64, 68], "modif": [20, 66], "simpli": [20, 64], "omit": 20, "data": [21, 27, 31, 66], "markup": 21, "overlin": 21, "content_fmt": 21, "value_pad": 21, "20": [21, 48], "emit": 21, "rubric": 21, "begin": [21, 29, 31, 39, 41, 66, 68], "bodi": 21, "rowmap": 21, "auto_head": 21, "popul": [21, 69], "add_head": 21, "second": [21, 30, 64, 66], "insert": 21, "By": [21, 27, 28, 39, 41, 47, 64, 66, 67, 68, 69], "below": [21, 33, 48, 64], "grid": 21, "usage_part": 22, "lpad": [22, 36], "usage_delim": 22, "part": [22, 30, 66], "max_width": 22, "complic": 22, "than": [22, 48, 49, 50, 66, 67, 68], "just": [22, 50, 64, 68], "scale": [22, 65], "is_valid_typ": [23, 24, 28], "fix_default": [23, 24, 27, 28, 30], "expand": [23, 27, 66], "readabl": [23, 27, 65, 66], "writabl": [23, 27, 66], "allow_dash": [23, 27, 66], "use_windows_fix": [23, 27, 66], "validated_path": [23, 27], "lazi": [23, 27, 66], "pass_fil": [23, 27, 31, 66], "snap": [23, 28, 66], "include_min": [23, 28, 66], "include_max": [23, 28, 66], "handle_invalid": [23, 28], "normcas": [23, 29, 66], "local": [23, 30, 34, 36, 66], "dt_type": [23, 30], "numeric_iso": [23, 30], "out_format": [23, 30, 66], "out_local": [23, 30, 66], "parse_numer": [23, 30], "iso": [23, 30, 66], "unit": [23, 30, 44, 65, 66, 70], "earliest": [23, 30, 66], "latest": [23, 30, 66], "parse_dt": [23, 30], "fifo": [23, 31], "socket": [23, 31], "read": [23, 27, 31, 57, 66], "close": [23, 31, 66], "desir": [24, 25, 27, 28, 29, 30, 47, 49, 50, 66, 68, 69], "would_accept": [24, 28, 34, 35], "actual": [24, 44, 70], "take_act": [24, 34, 35, 39, 40], "happen": [24, 47], "restrict": [25, 27, 66, 68], "typefunc": 25, "case_sensit": [25, 66], "_choicesbas": 25, "evalu": [25, 37, 66, 68], "sensit": [25, 29, 66], "enumt": 25, "valueerror": [26, 28, 30], "type_str": 26, "fix": [27, 48, 66], "conform": 27, "tild": [27, 66], "fulli": [27, 66], "absolut": [27, 66], "symlink": [27, 66], "regular": [27, 29, 66], "stdin": [27, 44, 66, 70], "window": [27, 30, 49, 50, 66], "issu": [27, 31, 47, 48, 60, 65, 66, 70], "git": [27, 31, 66], "bash": [27, 31, 66], "r": [27, 31, 56, 57, 61, 64, 66, 68, 69], "union": [27, 30, 36, 39, 42], "byte": [27, 44], "immedi": [27, 66, 68], "upon": [27, 66], "impli": [27, 66, 68], "textio": 27, "binaryio": 27, "de": [27, 66], "dump": [27, 66], "rb": [27, 66], "nt": 28, "float": [28, 30, 33, 39, 42, 46, 57, 66, 68], "integ": [28, 33, 39, 46, 66, 68], "builtin": [28, 47, 66], "outsid": [28, 64, 66], "nearest": [28, 66], "bound": [28, 66, 68], "necessarili": [28, 66, 70], "stop": [28, 66], "closer": 28, "obvious": [28, 66], "correct": [28, 49, 66], "minimum": [28, 33, 38, 48, 66, 68], "lower": [28, 36, 39, 48, 49, 65, 66, 68, 69], "upper": [28, 66], "snap_dir": 28, "violat": 28, "govern": 29, "captur": [29, 66], "regexresult": 29, "compil": [29, 66], "ignorecas": [29, 66], "search": [29, 35, 65, 66, 68], "anchor": [29, 66], "appropri": [29, 66], "express": [29, 66], "One": [29, 47, 50, 64, 66, 68], "identifi": [29, 66], "pick": [29, 39, 41, 47, 66, 68], "match_cas": [29, 66], "fnmatch": [29, 66, 69], "setlocal": [30, 66], "problem": [30, 48, 66], "system": [30, 66], "manner": [30, 65, 66], "thread": [30, 66], "leav": [30, 66], "proper": [30, 66], "i18n": [30, 66], "babel": [30, 66], "manag": [30, 37, 64, 70], "temporari": 30, "calendar": 30, "incorrect": [30, 48, 66], "represent": 30, "min_index": 30, "strptime": 30, "accur": 30, "standalon": 30, "weekdai": [30, 66], "week": [30, 66], "liter": 30, "microsecond": [30, 66], "millisecond": [30, 66], "minut": [30, 66], "hour": [30, 66], "dt": 30, "use_repr": 30, "now": 30, "64": 31, "127": 31, "inconsist": 31, "distribut": 31, "situat": [31, 47, 69], "drive": [31, 66], "introspect": 32, "strip": 32, "allow_inherit": 32, "cmd_path": 32, "cmd_name": [32, 44], "frozenset": 33, "remaind": [33, 40, 68], "unifi": 33, "mean": 33, "exceed": [33, 66], "nargs_object": 33, "missing_hint": [34, 35, 40], "show_in_help": [34, 35, 36, 37], "accepts_non": [34, 35, 39], "accepts_valu": [34, 35, 39], "allow_leading_dash": [34, 35, 39, 41, 68], "has_choic": [34, 35, 36], "prepare_and_valid": [34, 35], "prepare_valu": [34, 35, 39], "is_valid_arg": [34, 35], "result_valu": [34, 35, 36, 39, 40], "can_pop_count": [34, 35], "pop_last": [34, 35], "register_choic": [34, 36], "has_local_choic": [34, 36], "register_command": [34, 36], "register_act": [34, 36], "mutually_exclus": [34, 37, 64], "mutually_depend": [34, 37, 64], "register_al": [34, 37], "in_mutually_exclusive_group": [34, 37], "contains_posit": [34, 37], "contains_requir": [34, 37], "has_long": [34, 38], "has_min_opt": [34, 38], "display_long": [34, 38], "get_usage_opt": [34, 38], "all_option_str": [34, 38], "add_alt": [34, 38], "update_alt": [34, 38], "alt_allow": [34, 38], "display_long_primari": [34, 38], "short_primari": [34, 38], "display_long_alt": [34, 38], "short_alt": [34, 38], "primary_option_str": [34, 38], "alt_option_str": [34, 38], "take_env_var_act": [34, 39], "append_const": [34, 39, 68], "alt_help": [34, 39, 68], "store_al": [34, 40], "methodtyp": 35, "brief": [35, 37, 68], "hint": [35, 40], "hidden": 35, "t_co": [35, 39], "meant": [35, 36], "individu": [35, 36, 39, 40, 41, 68], "repr_attr": 35, "repr": [35, 46], "short_combo": [35, 39, 40], "opt_str": [35, 39, 40], "src": [35, 39, 40], "pre_act": [35, 39], "position": [35, 41, 68], "default_ok": 35, "var": [35, 68], "escap": [36, 69], "quot": [36, 69], "natur": 36, "jump": 36, "hoop": 36, "maintain": [36, 46, 47, 65, 68, 69], "distinct": [36, 67, 68, 69], "choice_validation_exc": 36, "default_help": 36, "local_choic": [36, 69], "deleg": 36, "sub": [36, 50, 68], "command_or_choic": 36, "further": [36, 47, 50, 69], "chosen": 36, "better": [36, 47, 68], "suit": [36, 68], "sens": [36, 47, 68], "method_or_choic": 36, "explicit": [36, 39, 48, 67, 68], "unchang": 36, "arbitrari": [37, 64, 68], "vice": [37, 64], "versa": [37, 64], "back": [37, 48], "virtual": 37, "inner": [37, 64], "outward": 37, "non": [38, 66], "__set_name__": 38, "nargsvalu": [39, 41], "inputtypefunc": [39, 41], "choicestyp": [39, 41], "leadingdash": [39, 41], "transform": [39, 41, 66, 68], "td": 39, "tc": 39, "_flag": 39, "typic": [39, 68], "constant": [39, 68], "falsei": [39, 50, 68], "ye": [39, 68], "use_env_valu": [39, 68], "strict_env": [39, 68], "warn": [39, 68], "ta": 39, "alt_prefix": [39, 68], "alt_long": [39, 68], "alt_short": [39, 68], "trinari": [39, 68], "ternari": [39, 68], "along": [39, 68, 69], "valsrc": [39, 40], "prioriti": [39, 68], "amount": [39, 65, 68], "unless": [39, 48, 64, 68], "whenev": [39, 68], "verbatim": [39, 68], "multipli": [39, 68], "thru": 40, "unbound": [41, 68], "mutablemap": 42, "state": [43, 68], "dequ": 43, "consum": 43, "receiv": [43, 66], "methodnam": 44, "runtest": 44, "testcas": [44, 70], "d1": 44, "d2": 44, "msg": 44, "cmd_cl": 44, "envcas": 44, "expected_exc": 44, "expected_pattern": 44, "exceptioncas": 44, "diff_lin": 44, "trim": 44, "sub_text": 44, "name_a": 44, "name_b": 44, "io": [44, 65], "199": 44, "contextmanag": 44, "ignore_cleanup_error": 44, "temporarydirectori": 44, "obj": [46, 69], "max_len": 46, "100": [46, 47], "sep": 46, "enumtyp": 46, "pseudo": 46, "10": [46, 61, 69], "11": 46, "parameter": 46, "break": 46, "chang": [46, 47, 68], "cache_tim": 46, "min_val": 46, "intuit": 47, "orient": 47, "develop": 47, "experi": 47, "id": [47, 56, 61, 64], "renam": 47, "hunt": 47, "keep": 47, "standard": 47, "share": [47, 51, 68], "step": [47, 57, 66], "minim": 47, "extra": [47, 65], "helloworld": [47, 70], "greet": [47, 60, 65, 67, 70], "contact": [47, 60, 70], "fake": [47, 60, 69, 70], "org": [47, 60, 65, 70], "world": [47, 51, 56, 65, 67, 68, 70], "person": [47, 56, 60, 65, 67, 70], "sai": [47, 56, 60, 65, 67, 68, 70], "hello": [47, 51, 62, 65, 67, 68, 70], "don": [47, 65, 69], "anyth": [47, 70], "els": [47, 64, 66, 69], "echo": [47, 51, 52, 66, 68], "join": [47, 68], "__name__": [47, 65, 66, 67, 69], "drop": 47, "purpos": 47, "modifi": [47, 66], "let": 47, "approach": [47, 50], "__dunder__": 47, "almost": 47, "known": 47, "benefit": 47, "prefer": 47, "anywher": 47, "awar": [47, 56, 69], "logger": 47, "onc": [47, 65, 69, 70], "intermedi": 47, "intention": 47, "low": 47, "freedom": 47, "whatev": 47, "vast": 47, "major": [47, 68], "howev": [47, 69], "presenc": [47, 56], "analog": 47, "claus": 47, "basecommand": 47, "log_fmt": [47, 69], "asctim": [47, 69], "levelnam": [47, 69], "lineno": [47, 69], "debug": [47, 69], "basicconfig": [47, 69], "reason": 47, "improv": 47, "incur": 47, "overhead": 47, "look": 47, "veri": [47, 65, 66], "perceptibli": 47, "slower": 47, "respons": 47, "longer": [47, 69], "sure": [47, 49], "mind": 47, "rest": [47, 51, 69], "why": 47, "mostli": 47, "camel": 48, "registr": [48, 68], "entry_point": 48, "detail": 48, "usual": [48, 50, 67, 68], "fulfil": 48, "per": 48, "basi": 48, "experiment": 48, "pleas": 48, "report": 48, "tracker": [48, 65], "entireti": 48, "well": [48, 65, 67, 68, 69], "30": [48, 65], "grouped_action_flag": [49, 59, 64], "garbl": 49, "compar": 49, "lack": 49, "putti": 49, "remot": 49, "translat": 49, "categori": [49, 68], "easili": [49, 50, 65, 66], "mani": [49, 50, 68], "someth": 49, "save_command_rst": 49, "script_path": 49, "rst_path": 49, "w": [49, 59, 64, 66], "fine": 49, "grain": 49, "out": [49, 57], "guid": 49, "caught": [50, 65], "three": 50, "trace": 50, "everyth": 50, "bug": 50, "broken": 50, "handle_win_os_pipe_error": 50, "mycommand": [50, 68], "__exit__": 50, "less": [50, 66, 68], "tri": 50, "traceback": 50, "myexcept": 50, "handle_my_except": 50, "unabl": 50, "proce": 50, "repo": 50, "face": 50, "With": 51, "complex": [51, 65, 67], "sync": [51, 64, 69], "init": 51, "action_with_arg": [52, 68], "revers": [52, 68], "advanced_subcommand": [53, 69], "basic_subcommand": [54, 69], "command_wrapp": [55, 68], "host": [55, 68], "across": 56, "complex_exampl": 56, "made": 56, "locat": 56, "role": [56, 61, 64], "admin": [56, 61, 64], "l": [56, 61, 69], "custom_input": [57, 66, 70], "in_fil": [57, 66], "out_fil": [57, 66], "49": 57, "29": 57, "19": 57, "p": [57, 61, 66, 69], "j": [57, 66, 70], "choos": [57, 69], "k": 57, "x": [59, 64, 69], "y": [59, 64], "z": [59, 64], "hello_world": [60, 65, 67, 70], "rest_api_wrapp": [61, 64, 69], "dev": [61, 64, 69], "qa": [61, 64, 69], "uat": [61, 64, 69], "prod": [61, 64, 69], "connect": [61, 64, 69], "limit": [61, 69], "queri": [61, 69], "shared_logging_init": 62, "log_test": 62, "simple_flag": [63, 68], "spam": 63, "factor": 63, "apiwrapp": [64, 69], "wait": 64, "no_wait": 64, "taskrunn": 64, "indefinit": 64, "unlik": 64, "ensur": [64, 70], "findbaz": [64, 69], "find_object": [64, 69], "42": 64, "And": 64, "enforc": [64, 65], "itself": 64, "similarli": 64, "refactor": 64, "deep": 64, "rule": 64, "demonstr": 64, "correspond": 64, "letter": 64, "groupedflag": 64, "action_a": 64, "action_b": 64, "action_c": 64, "action_d": 64, "action_w": 64, "action_x": 64, "action_i": 64, "action_z": 64, "ab": 64, "cd": 64, "wx": 64, "wxy": 64, "wxyz": 64, "descriptor": 65, "larg": 65, "easi": 65, "goal": 65, "reduc": 65, "boilerpl": 65, "bob": [65, 70], "pip": 65, "wide": 65, "wcwidth": 65, "2023": 65, "04": 65, "offici": 65, "06": 65, "27": 65, "backport": 65, "astunpars": 65, "relev": [65, 69], "stdlib": 65, "unsur": 65, "introduct": 65, "explan": 65, "introduc": 65, "http": 65, "dskrypa": 65, "github": 65, "com": 65, "pypi": 65, "done": 66, "doesn": 66, "understand": 66, "truncat": 66, "inputsexampl": [66, 70], "bad": 66, "example_out": 66, "txt": 66, "cat": 66, "eagerli": 66, "seen": 66, "plain": 66, "binari": 66, "deseri": 66, "iter_data": 66, "isinst": 66, "enumer": 66, "featur": 66, "against": 66, "redund": 66, "_missing_": 66, "myenum": 66, "flexibl": [66, 68], "8601": 66, "6": [66, 68], "independ": 66, "decim": 66, "mondai": 66, "sundai": 66, "fall": 66, "equal": 66, "earlier": 66, "variat": 67, "john": 67, "rather": 67, "own": [67, 69], "principl": 67, "again": [67, 69], "clearer": 68, "differenti": 68, "cast": 68, "pep": 68, "484": 68, "exactli": 68, "n\u2080": 68, "n\u2081": 68, "greater": 68, "n\u2093": 68, "roughli": 68, "clear": 68, "foobar": [68, 69], "parse_arg": 68, "uniqu": 68, "fbar": 68, "noisycommand": 68, "vv": 68, "v2": 68, "chain": 68, "under": 68, "condit": 68, "setter": 68, "print_twic": 68, "shortcut": 68, "servic": 68, "restart": 68, "act": 68, "customiz": 68, "build_dir": 68, "install_dir": 68, "instal": 68, "backup_dir": 68, "shutil": 68, "check_cal": 68, "as_posix": 68, "cleanup": 68, "rmtree": 68, "therefor": 68, "view": 69, "overli": 69, "simplist": 69, "hypothet": 69, "region": 69, "notimplementederror": 69, "findfoo": 69, "findbar": 69, "show_al": 69, "chr": 69, "97": 69, "123": 69, "endregion": 69, "criteria": 69, "produc": 69, "unrecogn": 69, "put": 69, "aris": 69, "accomplish": 69, "won": 69, "mixin": 69, "reusabl": 69, "success": 70, "unhandl": 70, "assertrais": 70, "systemexit": 70, "intent": 70, "unittest": 70, "helloworldtest": 70, "test_parse_count": 70, "assertequ": 70, "test_parse_name_and_count": 70, "assertdictequ": 70, "temporarili": 70, "contextlib": 70, "redirect_stdout": 70, "redirect_stderr": 70, "test_hello_default": 70, "stream": 70, "test_hello_test": 70, "test_custom_input_json_stdin": 70}, "objects": {"cli_command_parser": [[2, 0, 0, "-", "actions"], [3, 0, 0, "-", "annotations"], [4, 0, 0, "-", "command_parameters"], [5, 0, 0, "-", "commands"], [6, 0, 0, "-", "config"], [7, 0, 0, "-", "context"], [14, 0, 0, "-", "core"], [15, 0, 0, "-", "documentation"], [16, 0, 0, "-", "error_handling"], [17, 0, 0, "-", "exceptions"], [32, 0, 0, "-", "metadata"], [33, 0, 0, "-", "nargs"], [42, 0, 0, "-", "parse_tree"], [43, 0, 0, "-", "parser"], [44, 0, 0, "-", "testing"], [45, 0, 0, "-", "typing"], [46, 0, 0, "-", "utils"]], "cli_command_parser.actions": [[2, 1, 1, "", "help_action"]], "cli_command_parser.annotations": [[3, 1, 1, "", "get_annotation_value_type"], [3, 1, 1, "", "get_args"], [3, 1, 1, "", "get_descriptor_value_type"]], "cli_command_parser.command_parameters": [[4, 2, 1, "", "CommandParameters"]], "cli_command_parser.command_parameters.CommandParameters": [[4, 3, 1, "", "action"], [4, 3, 1, "", "action_flags"], [4, 4, 1, "", "all_positionals"], [4, 4, 1, "", "always_available_action_flags"], [4, 3, 1, "", "combo_option_map"], [4, 3, 1, "", "command"], [4, 3, 1, "", "command_parent"], [4, 5, 1, "", "find_nested_option_that_accepts_values"], [4, 5, 1, "", "find_nested_pass_thru"], [4, 5, 1, "", "find_option_that_accepts_values"], [4, 4, 1, "", "formatter"], [4, 5, 1, "", "get_option_param_value_pairs"], [4, 5, 1, "", "get_positionals_to_parse"], [4, 3, 1, "", "groups"], [4, 5, 1, "", "long_option_to_param_value_pair"], [4, 3, 1, "", "option_map"], [4, 3, 1, "", "options"], [4, 3, 1, "", "parent"], [4, 4, 1, "", "pass_thru"], [4, 3, 1, "", "positionals"], [4, 5, 1, "", "required_check_params"], [4, 5, 1, "", "short_option_to_param_value_pairs"], [4, 3, 1, "", "split_action_flags"], [4, 3, 1, "", "sub_command"], [4, 5, 1, "", "try_env_params"], [4, 5, 1, "", "validate_groups"]], "cli_command_parser.commands": [[5, 2, 1, "", "Command"], [5, 1, 1, "", "main"]], "cli_command_parser.commands.Command": [[5, 5, 1, "", "__call__"], [5, 5, 1, "", "_after_main_"], [5, 5, 1, "", "_before_main_"], [5, 5, 1, "", "_init_command_"], [5, 5, 1, "", "_pre_init_actions_"], [5, 3, 1, "", "ctx"], [5, 5, 1, "", "main"], [5, 5, 1, "", "parse"], [5, 5, 1, "", "parse_and_run"]], "cli_command_parser.commands.Command.__call__.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._after_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._before_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._init_command_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._pre_init_actions_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.main.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.parse.params": [[5, 6, 1, "", "argv"]], "cli_command_parser.commands.Command.parse_and_run.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.main.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"], [5, 6, 1, "", "return_command"]], "cli_command_parser.config": [[6, 2, 1, "", "AllowLeadingDash"], [6, 2, 1, "", "AmbiguousComboMode"], [6, 2, 1, "", "CommandConfig"], [6, 2, 1, "", "ConfigItem"], [6, 2, 1, "", "DynamicConfigItem"], [6, 2, 1, "", "OptionNameMode"], [6, 2, 1, "", "ShowDefaults"], [6, 2, 1, "", "SubcommandAliasHelpMode"], [6, 1, 1, "", "config_item"]], "cli_command_parser.config.AllowLeadingDash": [[6, 3, 1, "", "ALWAYS"], [6, 3, 1, "", "NEVER"], [6, 3, 1, "", "NUMERIC"]], "cli_command_parser.config.AmbiguousComboMode": [[6, 3, 1, "", "IGNORE"], [6, 3, 1, "", "PERMISSIVE"], [6, 3, 1, "", "STRICT"]], "cli_command_parser.config.CommandConfig": [[6, 3, 1, "", "FIELDS"], [6, 3, 1, "", "action_after_action_flags"], [6, 3, 1, "", "add_help"], [6, 3, 1, "", "allow_annotation_type"], [6, 3, 1, "", "allow_backtrack"], [6, 3, 1, "", "allow_missing"], [6, 3, 1, "", "always_run_after_main"], [6, 3, 1, "", "ambiguous_short_combos"], [6, 5, 1, "", "as_dict"], [6, 3, 1, "", "choice_delim"], [6, 3, 1, "", "cmd_alias_mode"], [6, 3, 1, "", "command_formatter"], [6, 3, 1, "", "error_handler"], [6, 3, 1, "", "extended_epilog"], [6, 3, 1, "", "ignore_unknown"], [6, 3, 1, "", "min_usage_column_width"], [6, 3, 1, "", "multiple_action_flags"], [6, 3, 1, "", "option_name_mode"], [6, 3, 1, "", "param_formatter"], [6, 3, 1, "", "reject_ambiguous_pos_combos"], [6, 3, 1, "", "show_defaults"], [6, 3, 1, "", "show_docstring"], [6, 3, 1, "", "show_group_tree"], [6, 3, 1, "", "show_group_type"], [6, 3, 1, "", "show_inherited_descriptions"], [6, 3, 1, "", "sort_choices"], [6, 3, 1, "", "sub_cmd_doc_depth"], [6, 3, 1, "", "usage_column_width"], [6, 3, 1, "", "use_type_metavar"], [6, 3, 1, "", "wrap_usage_str"]], "cli_command_parser.config.ConfigItem": [[6, 3, 1, "", "default"], [6, 3, 1, "", "name"], [6, 3, 1, "", "type"]], "cli_command_parser.config.OptionNameMode": [[6, 3, 1, "", "BOTH"], [6, 3, 1, "", "BOTH_DASH"], [6, 3, 1, "", "BOTH_UNDERSCORE"], [6, 3, 1, "", "DASH"], [6, 3, 1, "", "NONE"], [6, 3, 1, "", "UNDERSCORE"]], "cli_command_parser.config.ShowDefaults": [[6, 3, 1, "", "ANY"], [6, 3, 1, "", "MISSING"], [6, 3, 1, "", "NEVER"], [6, 3, 1, "", "NON_EMPTY"], [6, 3, 1, "", "TRUTHY"]], "cli_command_parser.config.SubcommandAliasHelpMode": [[6, 3, 1, "", "ALIAS"], [6, 3, 1, "", "COMBINE"], [6, 3, 1, "", "REPEAT"]], "cli_command_parser.context": [[7, 2, 1, "", "ActionPhase"], [7, 2, 1, "", "Context"], [7, 2, 1, "", "ContextProxy"], [7, 1, 1, "", "get_context"], [7, 1, 1, "", "get_current_context"], [7, 1, 1, "", "get_or_create_context"], [7, 1, 1, "", "get_parsed"], [7, 1, 1, "", "get_raw_arg"]], "cli_command_parser.context.ActionPhase": [[7, 3, 1, "", "AFTER_MAIN"], [7, 3, 1, "", "BEFORE_MAIN"], [7, 3, 1, "", "PRE_INIT"]], "cli_command_parser.context.Context": [[7, 4, 1, "", "action_flag_count"], [7, 4, 1, "", "all_action_flags"], [7, 3, 1, "", "allow_argv_prog"], [7, 4, 1, "", "categorized_action_flags"], [7, 3, 1, "", "config"], [7, 5, 1, "", "for_prog"], [7, 5, 1, "", "get_error_handler"], [7, 5, 1, "", "get_missing"], [7, 5, 1, "", "get_parsed"], [7, 5, 1, "", "get_parsed_value"], [7, 5, 1, "", "iter_action_flags"], [7, 5, 1, "", "num_provided"], [7, 4, 1, "", "params"], [7, 3, 1, "", "prog"], [7, 5, 1, "", "record_action"], [7, 5, 1, "", "set_parsed_value"], [7, 4, 1, "", "terminal_width"]], "cli_command_parser.context.Context.get_parsed.params": [[7, 6, 1, "", "exclude"], [7, 6, 1, "", "recursive"]], "cli_command_parser.context.Context.iter_action_flags.params": [[7, 6, 1, "", "phase"]], "cli_command_parser.context.ContextProxy": [[7, 4, 1, "", "config"], [7, 4, 1, "", "terminal_width"]], "cli_command_parser.context.get_context.params": [[7, 6, 1, "", "command"]], "cli_command_parser.context.get_current_context.params": [[7, 6, 1, "", "silent"]], "cli_command_parser.context.get_parsed.params": [[7, 6, 1, "", "command"], [7, 6, 1, "", "to_call"]], "cli_command_parser.conversion": [[9, 0, 0, "-", "argparse_ast"], [10, 0, 0, "-", "argparse_utils"], [11, 0, 0, "-", "command_builder"], [12, 0, 0, "-", "utils"], [13, 0, 0, "-", "visitor"]], "cli_command_parser.conversion.argparse_ast": [[9, 2, 1, "", "AddVisitedChild"], [9, 2, 1, "", "ArgCollection"], [9, 2, 1, "", "ArgGroup"], [9, 2, 1, "", "AstArgumentParser"], [9, 2, 1, "", "AstCallable"], [9, 2, 1, "", "MutuallyExclusiveGroup"], [9, 2, 1, "", "ParserArg"], [9, 2, 1, "", "Script"], [9, 2, 1, "", "SubParser"], [9, 2, 1, "", "SubparsersAction"], [9, 2, 1, "", "visit_func"]], "cli_command_parser.conversion.argparse_ast.AddVisitedChild": [[9, 3, 1, "", "child_cls"], [9, 3, 1, "", "list_attr"]], "cli_command_parser.conversion.argparse_ast.ArgCollection": [[9, 5, 1, "", "__init_subclass__"], [9, 3, 1, "", "add_argument"], [9, 5, 1, "", "add_argument_group"], [9, 5, 1, "", "add_mutually_exclusive_group"], [9, 3, 1, "", "args"], [9, 5, 1, "", "grouped_children"], [9, 3, 1, "", "groups"], [9, 3, 1, "", "parent"], [9, 5, 1, "", "pprint"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.ArgGroup": [[9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.AstArgumentParser": [[9, 3, 1, "", "add_subparsers"], [9, 3, 1, "", "represents"], [9, 3, 1, "", "sub_parsers"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.AstCallable": [[9, 5, 1, "", "__init_subclass__"], [9, 5, 1, "", "get_tracked_refs"], [9, 5, 1, "", "init_call_repr"], [9, 4, 1, "", "init_func_args"], [9, 4, 1, "", "init_func_kwargs"], [9, 4, 1, "", "init_func_name"], [9, 4, 1, "", "init_func_raw_kwargs"], [9, 5, 1, "", "pprint"], [9, 3, 1, "", "represents"], [9, 4, 1, "", "signature"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup": [[9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.ParserArg": [[9, 3, 1, "", "parent"], [9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.Script": [[9, 5, 1, "", "add_parser"], [9, 4, 1, "", "mod_cls_to_ast_cls_map"], [9, 4, 1, "", "parsers"], [9, 3, 1, "", "path"], [9, 5, 1, "", "register_parser"]], "cli_command_parser.conversion.argparse_ast.SubParser": [[9, 4, 1, "", "init_func_kwargs"], [9, 5, 1, "", "represents"], [9, 3, 1, "", "sp_parent"]], "cli_command_parser.conversion.argparse_ast.SubparsersAction": [[9, 5, 1, "", "add_parser"], [9, 3, 1, "", "parent"], [9, 5, 1, "", "represents"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.visit_func": [[9, 3, 1, "", "func"]], "cli_command_parser.conversion.argparse_utils": [[10, 2, 1, "", "ArgumentParser"], [10, 2, 1, "", "SubParsersAction"]], "cli_command_parser.conversion.argparse_utils.ArgumentParser": [[10, 5, 1, "", "add_argument_group"], [10, 5, 1, "", "add_mutually_exclusive_group"], [10, 5, 1, "", "add_subparsers"]], "cli_command_parser.conversion.argparse_utils.SubParsersAction": [[10, 5, 1, "", "add_parser"]], "cli_command_parser.conversion.command_builder": [[11, 2, 1, "", "BaseArgs"], [11, 2, 1, "", "CollectionConverter"], [11, 2, 1, "", "CommandArgs"], [11, 7, 1, "", "ConversionError"], [11, 2, 1, "", "Converter"], [11, 2, 1, "", "ConverterGroup"], [11, 2, 1, "", "FlagArgs"], [11, 2, 1, "", "GroupConverter"], [11, 2, 1, "", "OptionArgs"], [11, 2, 1, "", "ParamArgs"], [11, 2, 1, "", "ParamBaseArgs"], [11, 2, 1, "", "ParamConverter"], [11, 2, 1, "", "ParamConverterGroup"], [11, 2, 1, "", "ParserConverter"], [11, 2, 1, "", "PassThruArgs"], [11, 2, 1, "", "ScriptConverter"], [11, 1, 1, "", "convert_script"], [11, 1, 1, "", "literal_eval_or_none"]], "cli_command_parser.conversion.command_builder.BaseArgs": [[11, 5, 1, "", "from_kwargs"], [11, 3, 1, "", "help"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.CollectionConverter": [[11, 3, 1, "", "ast_obj"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_members"], [11, 4, 1, "", "grouped_children"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.CommandArgs": [[11, 3, 1, "", "add_help"], [11, 3, 1, "", "choice"], [11, 3, 1, "", "choices"], [11, 3, 1, "", "description"], [11, 3, 1, "", "docs_url"], [11, 3, 1, "", "email"], [11, 3, 1, "", "epilog"], [11, 3, 1, "", "option_name_mode"], [11, 3, 1, "", "prog"], [11, 3, 1, "", "usage"]], "cli_command_parser.conversion.command_builder.Converter": [[11, 5, 1, "", "__init_subclass__"], [11, 5, 1, "", "convert"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "for_ast_callable"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "init_for_ast_callable"], [11, 5, 1, "", "init_group"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.ConverterGroup": [[11, 5, 1, "", "format_all"], [11, 3, 1, "", "member_type"], [11, 3, 1, "", "members"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.FlagArgs": [[11, 3, 1, "", "const"], [11, 5, 1, "", "init_counter"], [11, 5, 1, "", "init_flag"]], "cli_command_parser.conversion.command_builder.GroupConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.OptionArgs": [[11, 5, 1, "", "init_option"], [11, 3, 1, "", "name_mode"]], "cli_command_parser.conversion.command_builder.ParamArgs": [[11, 3, 1, "", "action"], [11, 3, 1, "", "choices"], [11, 5, 1, "", "init_positional"], [11, 3, 1, "", "nargs"], [11, 3, 1, "", "type"]], "cli_command_parser.conversion.command_builder.ParamBaseArgs": [[11, 3, 1, "", "default"], [11, 3, 1, "", "hide"], [11, 3, 1, "", "metavar"], [11, 3, 1, "", "name"], [11, 3, 1, "", "required"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.ParamConverter": [[11, 3, 1, "", "ast_obj"], [11, 4, 1, "", "attr_name"], [11, 4, 1, "", "cmd_option_strs"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "get_cls_and_kwargs"], [11, 5, 1, "", "get_pos_args"], [11, 5, 1, "", "init_group"], [11, 4, 1, "", "is_option"], [11, 4, 1, "", "is_pass_thru"], [11, 4, 1, "", "is_positional"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "use_auto_long_opt_str"]], "cli_command_parser.conversion.command_builder.ParamConverterGroup": [[11, 5, 1, "", "format_all"]], "cli_command_parser.conversion.command_builder.ParserConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_lines"], [11, 4, 1, "", "is_sub_parser"], [11, 4, 1, "", "name"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "sub_parser_converters"]], "cli_command_parser.conversion.command_builder.ScriptConverter": [[11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"]], "cli_command_parser.conversion.utils": [[12, 1, 1, "", "collection_contents"], [12, 1, 1, "", "get_name_repr"], [12, 1, 1, "", "iter_module_parents"]], "cli_command_parser.conversion.visitor": [[13, 2, 1, "", "ScopedVisit"], [13, 2, 1, "", "ScriptVisitor"], [13, 2, 1, "", "TrackedRef"], [13, 1, 1, "", "imp_names"], [13, 1, 1, "", "scoped"]], "cli_command_parser.conversion.visitor.ScriptVisitor": [[13, 5, 1, "", "get_tracked_refs"], [13, 5, 1, "", "resolve_ref"], [13, 5, 1, "", "track_callable"], [13, 5, 1, "", "track_refs_to"], [13, 5, 1, "", "visit_Assign"], [13, 5, 1, "", "visit_AsyncFor"], [13, 3, 1, "", "visit_AsyncFunctionDef"], [13, 5, 1, "", "visit_Call"], [13, 3, 1, "", "visit_ClassDef"], [13, 5, 1, "", "visit_For"], [13, 3, 1, "", "visit_FunctionDef"], [13, 5, 1, "", "visit_Import"], [13, 5, 1, "", "visit_ImportFrom"], [13, 3, 1, "", "visit_Lambda"], [13, 3, 1, "", "visit_While"], [13, 5, 1, "", "visit_withitem"]], "cli_command_parser.conversion.visitor.TrackedRef": [[13, 3, 1, "", "module"], [13, 3, 1, "", "name"]], "cli_command_parser.core": [[14, 2, 1, "", "CommandMeta"], [14, 1, 1, "", "get_config"], [14, 1, 1, "", "get_metadata"], [14, 1, 1, "", "get_params"], [14, 1, 1, "", "get_parent"], [14, 1, 1, "", "get_top_level_commands"]], "cli_command_parser.core.CommandMeta": [[14, 5, 1, "", "config"], [14, 5, 1, "", "meta"], [14, 5, 1, "", "params"], [14, 5, 1, "", "parent"]], "cli_command_parser.core.CommandMeta.params": [[14, 6, 1, "", "action_after_action_flags"], [14, 6, 1, "", "add_help"], [14, 6, 1, "", "allow_missing"], [14, 6, 1, "", "always_run_after_main"], [14, 6, 1, "", "choice"], [14, 6, 1, "", "choices"], [14, 6, 1, "", "description"], [14, 6, 1, "", "doc_name"], [14, 6, 1, "", "epilog"], [14, 6, 1, "", "error_handler"], [14, 6, 1, "", "help"], [14, 6, 1, "", "ignore_unknown"], [14, 6, 1, "", "multiple_action_flags"], [14, 6, 1, "", "prog"], [14, 6, 1, "", "usage"]], "cli_command_parser.core.CommandMeta.parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.core.get_parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.documentation": [[15, 2, 1, "", "RstWriter"], [15, 1, 1, "", "filtered_commands"], [15, 1, 1, "", "import_module"], [15, 1, 1, "", "load_commands"], [15, 1, 1, "", "render_command_rst"], [15, 1, 1, "", "render_script_rst"], [15, 1, 1, "", "top_level_commands"]], "cli_command_parser.documentation.RstWriter": [[15, 5, 1, "", "document_module"], [15, 5, 1, "", "document_package"], [15, 5, 1, "", "document_script"], [15, 5, 1, "", "document_scripts"], [15, 5, 1, "", "write_index"], [15, 5, 1, "", "write_rst"]], "cli_command_parser.documentation.RstWriter.document_module.params": [[15, 6, 1, "", "module"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_package.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "empty"], [15, 6, 1, "", "header"], [15, 6, 1, "", "index"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "pkg_name"], [15, 6, 1, "", "pkg_path"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_script.params": [[15, 6, 1, "", "kwargs"], [15, 6, 1, "", "name"], [15, 6, 1, "", "path"], [15, 6, 1, "", "replacements"], [15, 6, 1, "", "subdir"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.RstWriter.params": [[15, 6, 1, "", "dry_run"], [15, 6, 1, "", "encoding"], [15, 6, 1, "", "ext"], [15, 6, 1, "", "module_template"], [15, 6, 1, "", "newline"], [15, 6, 1, "", "output_dir"], [15, 6, 1, "", "skip_modules"]], "cli_command_parser.documentation.RstWriter.write_index.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "content_subdir"], [15, 6, 1, "", "contents"], [15, 6, 1, "", "header"], [15, 6, 1, "", "kwargs"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.load_commands.params": [[15, 6, 1, "", "include_abc"], [15, 6, 1, "", "path"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.render_command_rst.params": [[15, 6, 1, "", "command"], [15, 6, 1, "", "fix_name"], [15, 6, 1, "", "fix_name_func"]], "cli_command_parser.error_handling": [[16, 2, 1, "", "ErrorHandler"], [16, 2, 1, "", "Handler"], [16, 2, 1, "", "NullErrorHandler"], [16, 8, 1, "", "error_handler"], [16, 8, 1, "", "extended_error_handler"], [16, 1, 1, "", "handle_kb_interrupt"], [16, 8, 1, "", "no_exit_handler"]], "cli_command_parser.error_handling.ErrorHandler": [[16, 5, 1, "", "__call__"], [16, 5, 1, "", "cls_handler"], [16, 5, 1, "", "copy"], [16, 3, 1, "", "exc_handler_map"], [16, 5, 1, "", "iter_handlers"], [16, 5, 1, "", "register"], [16, 5, 1, "", "unregister"]], "cli_command_parser.error_handling.Handler": [[16, 3, 1, "", "exc_cls"], [16, 3, 1, "", "handler"]], "cli_command_parser.exceptions": [[17, 7, 1, "", "AmbiguousCombo"], [17, 7, 1, "", "AmbiguousParseTree"], [17, 7, 1, "", "AmbiguousShortForm"], [17, 7, 1, "", "Backtrack"], [17, 7, 1, "", "BadArgument"], [17, 7, 1, "", "CommandDefinitionError"], [17, 7, 1, "", "CommandParserException"], [17, 7, 1, "", "InvalidChoice"], [17, 7, 1, "", "MissingArgument"], [17, 7, 1, "", "MultiParamUsageError"], [17, 7, 1, "", "NextCommand"], [17, 7, 1, "", "NoActiveContext"], [17, 7, 1, "", "NoSuchOption"], [17, 7, 1, "", "ParamConflict"], [17, 7, 1, "", "ParamUsageError"], [17, 7, 1, "", "ParameterDefinitionError"], [17, 7, 1, "", "ParamsMissing"], [17, 7, 1, "", "ParserExit"], [17, 7, 1, "", "UnsupportedAction"], [17, 7, 1, "", "UsageError"]], "cli_command_parser.exceptions.CommandParserException": [[17, 3, 1, "", "code"], [17, 5, 1, "", "exit"], [17, 5, 1, "", "show"]], "cli_command_parser.exceptions.MissingArgument": [[17, 3, 1, "", "message"]], "cli_command_parser.exceptions.UsageError": [[17, 3, 1, "", "message"]], "cli_command_parser.formatting": [[19, 0, 0, "-", "commands"], [20, 0, 0, "-", "params"], [21, 0, 0, "-", "restructured_text"], [22, 0, 0, "-", "utils"]], "cli_command_parser.formatting.commands": [[19, 2, 1, "", "CommandHelpFormatter"], [19, 1, 1, "", "get_formatter"], [19, 1, 1, "", "get_usage_sub_cmds"]], "cli_command_parser.formatting.commands.CommandHelpFormatter": [[19, 5, 1, "", "format_help"], [19, 5, 1, "", "format_rst"], [19, 5, 1, "", "format_usage"], [19, 5, 1, "", "maybe_add_groups"], [19, 5, 1, "", "maybe_add_option"], [19, 5, 1, "", "maybe_add_options"], [19, 5, 1, "", "maybe_add_positionals"]], "cli_command_parser.formatting.params": [[20, 2, 1, "", "ChoiceGroup"], [20, 2, 1, "", "ChoiceMapHelpFormatter"], [20, 2, 1, "", "GroupHelpFormatter"], [20, 2, 1, "", "OptionHelpFormatter"], [20, 2, 1, "", "ParamHelpFormatter"], [20, 2, 1, "", "PassThruHelpFormatter"], [20, 2, 1, "", "PositionalHelpFormatter"], [20, 2, 1, "", "TriFlagHelpFormatter"]], "cli_command_parser.formatting.params.ChoiceGroup": [[20, 5, 1, "", "add"], [20, 3, 1, "", "choice_strs"], [20, 3, 1, "", "choices"], [20, 5, 1, "", "format"], [20, 5, 1, "", "group_choices"], [20, 5, 1, "", "prepare"], [20, 5, 1, "", "prepare_aliases"], [20, 5, 1, "", "prepare_combined"], [20, 5, 1, "", "prepare_repeated"]], "cli_command_parser.formatting.params.ChoiceGroup.format.params": [[20, 6, 1, "", "default_mode"], [20, 6, 1, "", "prefix"], [20, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.ChoiceGroup.group_choices.params": [[20, 6, 1, "", "choices"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare.params": [[20, 6, 1, "", "default_mode"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases.params": [[20, 6, 1, "", "format_str"]], "cli_command_parser.formatting.params.ChoiceMapHelpFormatter": [[20, 4, 1, "", "choice_groups"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter.format_help.params": [[20, 6, 1, "", "clean"], [20, 6, 1, "", "prefix"], [20, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.OptionHelpFormatter": [[20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.ParamHelpFormatter": [[20, 5, 1, "", "__init_subclass__"], [20, 5, 1, "", "for_param_cls"], [20, 5, 1, "", "format_basic_usage"], [20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 5, 1, "", "maybe_wrap_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_row"], [20, 5, 1, "", "rst_rows"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.PassThruHelpFormatter": [[20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"]], "cli_command_parser.formatting.params.PositionalHelpFormatter": [[20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"]], "cli_command_parser.formatting.params.TriFlagHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_rows"]], "cli_command_parser.formatting.restructured_text": [[21, 2, 1, "", "RstTable"], [21, 1, 1, "", "rst_bar"], [21, 1, 1, "", "rst_directive"], [21, 1, 1, "", "rst_header"], [21, 1, 1, "", "rst_list_table"], [21, 1, 1, "", "rst_toc_tree"], [21, 1, 1, "", "spaced_rst_header"]], "cli_command_parser.formatting.restructured_text.RstTable": [[21, 5, 1, "", "add_dict_rows"], [21, 5, 1, "", "add_kv_rows"], [21, 5, 1, "", "add_row"], [21, 5, 1, "", "add_rows"], [21, 5, 1, "", "bar"], [21, 5, 1, "", "from_dict"], [21, 5, 1, "", "from_dicts"], [21, 5, 1, "", "iter_build"], [21, 3, 1, "", "rows"], [21, 3, 1, "", "show_title"], [21, 3, 1, "", "subtitle"], [21, 3, 1, "", "title"], [21, 3, 1, "", "use_table_directive"], [21, 3, 1, "", "widths"]], "cli_command_parser.formatting.restructured_text.RstTable.add_row.params": [[21, 6, 1, "", "columns"], [21, 6, 1, "", "header"], [21, 6, 1, "", "index"]], "cli_command_parser.formatting.restructured_text.RstTable.bar.params": [[21, 6, 1, "", "char"]], "cli_command_parser.formatting.restructured_text.RstTable.params": [[21, 6, 1, "", "headers"], [21, 6, 1, "", "show_title"], [21, 6, 1, "", "subtitle"], [21, 6, 1, "", "title"], [21, 6, 1, "", "use_table_directive"]], "cli_command_parser.formatting.restructured_text.rst_toc_tree.params": [[21, 6, 1, "", "content_fmt"], [21, 6, 1, "", "contents"], [21, 6, 1, "", "kwargs"], [21, 6, 1, "", "max_depth"], [21, 6, 1, "", "name"]], "cli_command_parser.formatting.utils": [[22, 1, 1, "", "combine_and_wrap"], [22, 1, 1, "", "format_help_entry"], [22, 1, 1, "", "line_iter"]], "cli_command_parser.inputs": [[24, 0, 0, "-", "base"], [25, 0, 0, "-", "choices"], [26, 0, 0, "-", "exceptions"], [27, 0, 0, "-", "files"], [28, 0, 0, "-", "numeric"], [29, 0, 0, "-", "patterns"], [30, 0, 0, "-", "time"], [31, 0, 0, "-", "utils"]], "cli_command_parser.inputs.base": [[24, 2, 1, "", "InputType"]], "cli_command_parser.inputs.base.InputType": [[24, 5, 1, "", "__call__"], [24, 5, 1, "", "fix_default"], [24, 5, 1, "", "format_metavar"], [24, 5, 1, "", "is_valid_type"]], "cli_command_parser.inputs.base.InputType.is_valid_type.params": [[24, 6, 1, "", "value"]], "cli_command_parser.inputs.choices": [[25, 2, 1, "", "ChoiceMap"], [25, 2, 1, "", "Choices"], [25, 2, 1, "", "EnumChoices"]], "cli_command_parser.inputs.choices.ChoiceMap": [[25, 5, 1, "", "__call__"], [25, 3, 1, "", "choices"]], "cli_command_parser.inputs.choices.ChoiceMap.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.Choices": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.Choices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.EnumChoices": [[25, 5, 1, "", "__call__"], [25, 3, 1, "", "enum"]], "cli_command_parser.inputs.choices.EnumChoices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "enum"]], "cli_command_parser.inputs.exceptions": [[26, 7, 1, "", "InputValidationError"], [26, 7, 1, "", "InvalidChoiceError"]], "cli_command_parser.inputs.files": [[27, 2, 1, "", "File"], [27, 2, 1, "", "FileInput"], [27, 2, 1, "", "Json"], [27, 2, 1, "", "Path"], [27, 2, 1, "", "Pickle"], [27, 2, 1, "", "Serialized"]], "cli_command_parser.inputs.files.File": [[27, 5, 1, "", "__call__"], [27, 3, 1, "", "encoding"], [27, 3, 1, "", "errors"], [27, 3, 1, "", "lazy"], [27, 3, 1, "", "mode"], [27, 3, 1, "", "parents"], [27, 3, 1, "", "type"]], "cli_command_parser.inputs.files.File.params": [[27, 6, 1, "", "encoding"], [27, 6, 1, "", "errors"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "lazy"], [27, 6, 1, "", "mode"], [27, 6, 1, "", "parents"]], "cli_command_parser.inputs.files.FileInput": [[27, 3, 1, "", "allow_dash"], [27, 3, 1, "", "exists"], [27, 3, 1, "", "expand"], [27, 5, 1, "", "fix_default"], [27, 3, 1, "", "readable"], [27, 3, 1, "", "resolve"], [27, 3, 1, "", "type"], [27, 3, 1, "", "use_windows_fix"], [27, 5, 1, "", "validated_path"], [27, 3, 1, "", "writable"]], "cli_command_parser.inputs.files.Json.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Path": [[27, 5, 1, "", "__call__"]], "cli_command_parser.inputs.files.Path.params": [[27, 6, 1, "", "allow_dash"], [27, 6, 1, "", "exists"], [27, 6, 1, "", "expand"], [27, 6, 1, "", "readable"], [27, 6, 1, "", "resolve"], [27, 6, 1, "", "type"], [27, 6, 1, "", "use_windows_fix"], [27, 6, 1, "", "writable"]], "cli_command_parser.inputs.files.Pickle.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Serialized": [[27, 3, 1, "", "converter"], [27, 3, 1, "", "pass_file"]], "cli_command_parser.inputs.files.Serialized.params": [[27, 6, 1, "", "converter"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "pass_file"]], "cli_command_parser.inputs.numeric": [[28, 2, 1, "", "NumRange"], [28, 2, 1, "", "NumericInput"], [28, 2, 1, "", "Range"]], "cli_command_parser.inputs.numeric.NumRange": [[28, 5, 1, "", "__call__"], [28, 5, 1, "", "handle_invalid"], [28, 3, 1, "", "include_max"], [28, 3, 1, "", "include_min"], [28, 3, 1, "", "max"], [28, 3, 1, "", "min"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumRange.handle_invalid.params": [[28, 6, 1, "", "bound"], [28, 6, 1, "", "inclusive"], [28, 6, 1, "", "snap_dir"]], "cli_command_parser.inputs.numeric.NumRange.params": [[28, 6, 1, "", "include_max"], [28, 6, 1, "", "include_min"], [28, 6, 1, "", "max"], [28, 6, 1, "", "min"], [28, 6, 1, "", "snap"], [28, 6, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput": [[28, 5, 1, "", "fix_default"], [28, 5, 1, "", "format_metavar"], [28, 5, 1, "", "is_valid_type"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput.is_valid_type.params": [[28, 6, 1, "", "value"]], "cli_command_parser.inputs.numeric.Range": [[28, 5, 1, "", "__call__"], [28, 3, 1, "", "range"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.Range.params": [[28, 6, 1, "", "range"], [28, 6, 1, "", "snap"]], "cli_command_parser.inputs.patterns": [[29, 2, 1, "", "Glob"], [29, 2, 1, "", "PatternInput"], [29, 2, 1, "", "Regex"], [29, 2, 1, "", "RegexMode"]], "cli_command_parser.inputs.patterns.Glob": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "normcase"]], "cli_command_parser.inputs.patterns.Glob.params": [[29, 6, 1, "", "match_case"], [29, 6, 1, "", "normcase"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.PatternInput": [[29, 5, 1, "", "format_metavar"], [29, 3, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.Regex": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "group"], [29, 3, 1, "", "groups"], [29, 3, 1, "", "mode"]], "cli_command_parser.inputs.patterns.Regex.params": [[29, 6, 1, "", "group"], [29, 6, 1, "", "groups"], [29, 6, 1, "", "mode"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.RegexMode": [[29, 3, 1, "", "DICT"], [29, 3, 1, "", "GROUP"], [29, 3, 1, "", "GROUPS"], [29, 3, 1, "", "MATCH"], [29, 3, 1, "", "STRING"], [29, 5, 1, "", "normalize"]], "cli_command_parser.inputs.time": [[30, 2, 1, "", "CalendarUnitInput"], [30, 2, 1, "", "DTFormatMode"], [30, 2, 1, "", "DTInput"], [30, 2, 1, "", "Date"], [30, 2, 1, "", "DateTime"], [30, 2, 1, "", "DateTimeInput"], [30, 2, 1, "", "Day"], [30, 2, 1, "", "Month"], [30, 2, 1, "", "Time"], [30, 2, 1, "", "TimeDelta"], [30, 2, 1, "", "different_locale"], [30, 1, 1, "", "dt_repr"], [30, 1, 1, "", "normalize_dt"]], "cli_command_parser.inputs.time.CalendarUnitInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 3, 1, "", "abbreviation"], [30, 5, 1, "", "choice_str"], [30, 5, 1, "", "choices"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "full"], [30, 3, 1, "", "numeric"], [30, 3, 1, "", "out_format"], [30, 3, 1, "", "out_locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.CalendarUnitInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.CalendarUnitInput.parse.params": [[30, 6, 1, "", "value"]], "cli_command_parser.inputs.time.DTFormatMode": [[30, 3, 1, "", "ABBREVIATION"], [30, 3, 1, "", "FULL"], [30, 3, 1, "", "NUMERIC"], [30, 3, 1, "", "NUMERIC_ISO"]], "cli_command_parser.inputs.time.DTInput": [[30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "fix_default"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DTInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Date": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTime": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTimeInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 4, 1, "", "earliest"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "formats"], [30, 4, 1, "", "latest"], [30, 3, 1, "", "locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_dt"]], "cli_command_parser.inputs.time.DateTimeInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Day": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "iso"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Month": [[30, 3, 1, "", "dt_type"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Time": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.TimeDelta": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "fix_default"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "unit"]], "cli_command_parser.inputs.time.different_locale": [[30, 3, 1, "", "locale"], [30, 3, 1, "", "original"]], "cli_command_parser.inputs.utils": [[31, 2, 1, "", "FileWrapper"], [31, 2, 1, "", "InputParam"], [31, 2, 1, "", "StatMode"], [31, 1, 1, "", "allows_write"], [31, 1, 1, "", "fix_windows_path"]], "cli_command_parser.inputs.utils.FileWrapper": [[31, 5, 1, "", "close"], [31, 5, 1, "", "read"], [31, 5, 1, "", "write"]], "cli_command_parser.inputs.utils.InputParam": [[31, 3, 1, "", "default"], [31, 3, 1, "", "name"]], "cli_command_parser.inputs.utils.StatMode": [[31, 3, 1, "", "ANY"], [31, 3, 1, "", "BLOCK"], [31, 3, 1, "", "CHARACTER"], [31, 3, 1, "", "DIR"], [31, 3, 1, "", "FIFO"], [31, 3, 1, "", "FILE"], [31, 3, 1, "", "LINK"], [31, 3, 1, "", "SOCKET"], [31, 5, 1, "", "matches"]], "cli_command_parser.metadata": [[32, 2, 1, "", "DynamicMetadata"], [32, 2, 1, "", "Metadata"], [32, 2, 1, "", "MetadataBase"], [32, 2, 1, "", "ProgFinder"], [32, 2, 1, "", "ProgramMetadata"], [32, 1, 1, "", "dynamic_metadata"]], "cli_command_parser.metadata.DynamicMetadata": [[32, 3, 1, "", "cache_result"], [32, 3, 1, "", "func"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.Metadata": [[32, 3, 1, "", "default"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.MetadataBase": [[32, 5, 1, "", "get_value"], [32, 3, 1, "", "inheritable"], [32, 3, 1, "", "name"]], "cli_command_parser.metadata.ProgFinder": [[32, 4, 1, "", "mod_obj_prog_map"], [32, 5, 1, "", "normalize"]], "cli_command_parser.metadata.ProgramMetadata": [[32, 3, 1, "", "cmd_module"], [32, 3, 1, "", "command"], [32, 3, 1, "", "description"], [32, 3, 1, "", "doc_name"], [32, 3, 1, "", "doc_str"], [32, 3, 1, "", "docs_url"], [32, 3, 1, "", "email"], [32, 3, 1, "", "epilog"], [32, 5, 1, "", "for_command"], [32, 5, 1, "", "format_epilog"], [32, 5, 1, "", "get_description"], [32, 5, 1, "", "get_doc_str"], [32, 5, 1, "", "get_prog"], [32, 3, 1, "", "module"], [32, 3, 1, "", "package"], [32, 3, 1, "", "parent"], [32, 3, 1, "", "path"], [32, 3, 1, "", "pkg_doc_str"], [32, 3, 1, "", "prog"], [32, 3, 1, "", "url"], [32, 3, 1, "", "usage"], [32, 3, 1, "", "version"]], "cli_command_parser.nargs": [[33, 2, 1, "", "Nargs"], [33, 1, 1, "", "nargs_max_sum"], [33, 1, 1, "", "nargs_min_sum"]], "cli_command_parser.nargs.Nargs": [[33, 3, 1, "", "allowed"], [33, 4, 1, "", "has_upper_bound"], [33, 3, 1, "", "max"], [33, 3, 1, "", "min"], [33, 3, 1, "", "range"], [33, 5, 1, "", "satisfied"], [33, 4, 1, "", "upper_bound"], [33, 3, 1, "", "variable"]], "cli_command_parser.parameters": [[35, 0, 0, "-", "base"], [36, 0, 0, "-", "choice_map"], [37, 0, 0, "-", "groups"], [38, 0, 0, "-", "option_strings"], [39, 0, 0, "-", "options"], [40, 0, 0, "-", "pass_thru"], [41, 0, 0, "-", "positionals"]], "cli_command_parser.parameters.base": [[35, 2, 1, "", "BaseOption"], [35, 2, 1, "", "BasePositional"], [35, 2, 1, "", "BasicActionMixin"], [35, 2, 1, "", "ParamBase"], [35, 2, 1, "", "Parameter"], [35, 1, 1, "", "get_active_param_group"], [35, 2, 1, "", "parameter_action"]], "cli_command_parser.parameters.base.BaseOption": [[35, 3, 1, "", "env_var"], [35, 5, 1, "", "env_vars"], [35, 3, 1, "", "option_strs"]], "cli_command_parser.parameters.base.BaseOption.params": [[35, 6, 1, "", "action"], [35, 6, 1, "", "env_var"], [35, 6, 1, "", "kwargs"], [35, 6, 1, "", "name_mode"], [35, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.base.BasePositional": [[35, 5, 1, "", "__init_subclass__"]], "cli_command_parser.parameters.base.BasePositional.__init_subclass__.params": [[35, 6, 1, "", "default_ok"], [35, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.BasePositional.params": [[35, 6, 1, "", "action"], [35, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.BasicActionMixin": [[35, 3, 1, "", "action"], [35, 5, 1, "", "append"], [35, 5, 1, "", "can_pop_counts"], [35, 3, 1, "", "nargs"], [35, 5, 1, "", "pop_last"], [35, 5, 1, "", "store"], [35, 3, 1, "", "type"]], "cli_command_parser.parameters.base.ParamBase": [[35, 3, 1, "", "command"], [35, 5, 1, "", "format_help"], [35, 5, 1, "", "format_usage"], [35, 4, 1, "", "formatter"], [35, 3, 1, "", "group"], [35, 3, 1, "", "help"], [35, 3, 1, "", "hide"], [35, 3, 1, "", "missing_hint"], [35, 4, 1, "", "name"], [35, 3, 1, "", "required"], [35, 4, 1, "", "show_in_help"]], "cli_command_parser.parameters.base.ParamBase.params": [[35, 6, 1, "", "help"], [35, 6, 1, "", "hide"], [35, 6, 1, "", "name"], [35, 6, 1, "", "required"]], "cli_command_parser.parameters.base.Parameter": [[35, 5, 1, "", "__init_subclass__"], [35, 3, 1, "", "accepts_none"], [35, 3, 1, "", "accepts_values"], [35, 3, 1, "", "allow_leading_dash"], [35, 5, 1, "", "can_pop_counts"], [35, 4, 1, "", "has_choices"], [35, 5, 1, "", "is_valid_arg"], [35, 3, 1, "", "metavar"], [35, 3, 1, "", "nargs"], [35, 5, 1, "", "pop_last"], [35, 5, 1, "", "prepare_and_validate"], [35, 5, 1, "", "prepare_value"], [35, 5, 1, "", "result"], [35, 5, 1, "", "result_value"], [35, 3, 1, "", "show_default"], [35, 4, 1, "", "show_in_help"], [35, 5, 1, "", "take_action"], [35, 3, 1, "", "type"], [35, 5, 1, "", "validate"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.base.Parameter.__init_subclass__.params": [[35, 6, 1, "", "accepts_none"], [35, 6, 1, "", "accepts_values"], [35, 6, 1, "", "repr_attrs"]], "cli_command_parser.parameters.base.Parameter.params": [[35, 6, 1, "", "action"], [35, 6, 1, "", "default"], [35, 6, 1, "", "help"], [35, 6, 1, "", "hide"], [35, 6, 1, "", "metavar"], [35, 6, 1, "", "name"], [35, 6, 1, "", "required"], [35, 6, 1, "", "show_default"]], "cli_command_parser.parameters.base.parameter_action": [[35, 5, 1, "", "__call__"]], "cli_command_parser.parameters.base.parameter_action.params": [[35, 6, 1, "", "method"]], "cli_command_parser.parameters.choice_map": [[36, 2, 1, "", "Action"], [36, 2, 1, "", "Choice"], [36, 2, 1, "", "ChoiceMap"], [36, 2, 1, "", "SubCommand"]], "cli_command_parser.parameters.choice_map.Action": [[36, 5, 1, "", "__call__"], [36, 5, 1, "", "register"], [36, 5, 1, "", "register_action"]], "cli_command_parser.parameters.choice_map.Action.__call__.params": [[36, 6, 1, "", "choice"], [36, 6, 1, "", "default"], [36, 6, 1, "", "help"], [36, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Action.register.params": [[36, 6, 1, "", "choice"], [36, 6, 1, "", "default"], [36, 6, 1, "", "help"], [36, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Choice": [[36, 3, 1, "", "choice"], [36, 5, 1, "", "format_help"], [36, 5, 1, "", "format_usage"], [36, 3, 1, "", "help"], [36, 3, 1, "", "local"], [36, 3, 1, "", "target"]], "cli_command_parser.parameters.choice_map.ChoiceMap": [[36, 5, 1, "", "__init_subclass__"], [36, 5, 1, "", "append"], [36, 3, 1, "", "choices"], [36, 3, 1, "", "description"], [36, 4, 1, "", "has_choices"], [36, 3, 1, "", "nargs"], [36, 5, 1, "", "register_choice"], [36, 5, 1, "", "result"], [36, 5, 1, "", "result_value"], [36, 4, 1, "", "show_in_help"], [36, 5, 1, "", "target"], [36, 3, 1, "", "title"], [36, 5, 1, "", "validate"]], "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__.params": [[36, 6, 1, "", "choice_validation_exc"], [36, 6, 1, "", "kwargs"], [36, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.ChoiceMap.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "description"], [36, 6, 1, "", "kwargs"], [36, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.SubCommand": [[36, 4, 1, "", "has_local_choices"], [36, 5, 1, "", "register"], [36, 5, 1, "", "register_command"]], "cli_command_parser.parameters.choice_map.SubCommand.register.params": [[36, 6, 1, "", "choice"], [36, 6, 1, "", "command_or_choice"], [36, 6, 1, "", "help"]], "cli_command_parser.parameters.groups": [[37, 2, 1, "", "ParamGroup"]], "cli_command_parser.parameters.groups.ParamGroup": [[37, 5, 1, "", "add"], [37, 4, 1, "", "contains_positional"], [37, 4, 1, "", "contains_required"], [37, 3, 1, "", "description"], [37, 5, 1, "", "extend"], [37, 4, 1, "", "in_mutually_exclusive_group"], [37, 3, 1, "", "members"], [37, 3, 1, "", "mutually_dependent"], [37, 3, 1, "", "mutually_exclusive"], [37, 5, 1, "", "register"], [37, 5, 1, "", "register_all"], [37, 4, 1, "", "show_in_help"], [37, 5, 1, "", "validate"]], "cli_command_parser.parameters.groups.ParamGroup.params": [[37, 6, 1, "", "description"], [37, 6, 1, "", "hide"], [37, 6, 1, "", "mutually_dependent"], [37, 6, 1, "", "mutually_exclusive"], [37, 6, 1, "", "name"], [37, 6, 1, "", "required"]], "cli_command_parser.parameters.option_strings": [[38, 2, 1, "", "OptionStrings"], [38, 2, 1, "", "TriFlagOptionStrings"]], "cli_command_parser.parameters.option_strings.OptionStrings": [[38, 5, 1, "", "all_option_strs"], [38, 3, 1, "", "combinable"], [38, 4, 1, "", "display_long"], [38, 5, 1, "", "get_usage_opt"], [38, 5, 1, "", "has_long"], [38, 5, 1, "", "has_min_opts"], [38, 4, 1, "", "long"], [38, 3, 1, "", "name_mode"], [38, 5, 1, "", "option_strs"], [38, 4, 1, "", "short"], [38, 5, 1, "", "update"]], "cli_command_parser.parameters.option_strings.TriFlagOptionStrings": [[38, 5, 1, "", "add_alts"], [38, 5, 1, "", "all_option_strs"], [38, 4, 1, "", "alt_allowed"], [38, 5, 1, "", "alt_option_strs"], [38, 4, 1, "", "display_long_alt"], [38, 4, 1, "", "display_long_primary"], [38, 5, 1, "", "get_usage_opt"], [38, 5, 1, "", "has_long"], [38, 5, 1, "", "has_min_opts"], [38, 5, 1, "", "option_strs"], [38, 5, 1, "", "primary_option_strs"], [38, 4, 1, "", "short_alt"], [38, 4, 1, "", "short_primary"], [38, 5, 1, "", "update_alts"]], "cli_command_parser.parameters.options": [[39, 2, 1, "", "ActionFlag"], [39, 2, 1, "", "Counter"], [39, 2, 1, "", "Flag"], [39, 2, 1, "", "Option"], [39, 2, 1, "", "TriFlag"], [39, 3, 1, "", "action_flag"], [39, 1, 1, "", "after_main"], [39, 1, 1, "", "before_main"]], "cli_command_parser.parameters.options.ActionFlag": [[39, 5, 1, "", "__call__"], [39, 4, 1, "", "func"], [39, 5, 1, "", "result"]], "cli_command_parser.parameters.options.ActionFlag.params": [[39, 6, 1, "", "always_available"], [39, 6, 1, "", "before_main"], [39, 6, 1, "", "func"], [39, 6, 1, "", "kwargs"], [39, 6, 1, "", "option_strs"], [39, 6, 1, "", "order"]], "cli_command_parser.parameters.options.Counter": [[39, 3, 1, "", "accepts_none"], [39, 3, 1, "", "accepts_values"], [39, 5, 1, "", "append"], [39, 3, 1, "", "nargs"], [39, 5, 1, "", "prepare_value"], [39, 5, 1, "", "result"], [39, 5, 1, "", "result_value"], [39, 3, 1, "", "type"], [39, 5, 1, "", "validate"]], "cli_command_parser.parameters.options.Counter.params": [[39, 6, 1, "", "action"], [39, 6, 1, "", "const"], [39, 6, 1, "", "default"], [39, 6, 1, "", "kwargs"], [39, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.options.Flag": [[39, 3, 1, "", "accepts_none"], [39, 3, 1, "", "accepts_values"], [39, 5, 1, "", "append_const"], [39, 3, 1, "", "const"], [39, 3, 1, "", "default"], [39, 5, 1, "", "store_const"], [39, 5, 1, "", "take_env_var_action"]], "cli_command_parser.parameters.options.Flag.params": [[39, 6, 1, "", "action"], [39, 6, 1, "", "const"], [39, 6, 1, "", "default"], [39, 6, 1, "", "kwargs"], [39, 6, 1, "", "option_strs"], [39, 6, 1, "", "strict_env"], [39, 6, 1, "", "type"], [39, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.Option.params": [[39, 6, 1, "", "action"], [39, 6, 1, "", "allow_leading_dash"], [39, 6, 1, "", "choices"], [39, 6, 1, "", "default"], [39, 6, 1, "", "kwargs"], [39, 6, 1, "", "nargs"], [39, 6, 1, "", "option_strs"], [39, 6, 1, "", "required"], [39, 6, 1, "", "type"]], "cli_command_parser.parameters.options.TriFlag": [[39, 3, 1, "", "accepts_none"], [39, 3, 1, "", "accepts_values"], [39, 3, 1, "", "alt_help"], [39, 3, 1, "", "consts"], [39, 3, 1, "", "default"], [39, 3, 1, "", "option_strs"], [39, 5, 1, "", "store_const"], [39, 5, 1, "", "take_action"], [39, 5, 1, "", "take_env_var_action"]], "cli_command_parser.parameters.options.TriFlag.params": [[39, 6, 1, "", "action"], [39, 6, 1, "", "alt_help"], [39, 6, 1, "", "alt_long"], [39, 6, 1, "", "alt_prefix"], [39, 6, 1, "", "alt_short"], [39, 6, 1, "", "consts"], [39, 6, 1, "", "default"], [39, 6, 1, "", "kwargs"], [39, 6, 1, "", "name_mode"], [39, 6, 1, "", "option_strs"], [39, 6, 1, "", "strict_env"], [39, 6, 1, "", "type"], [39, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.pass_thru": [[40, 2, 1, "", "PassThru"]], "cli_command_parser.parameters.pass_thru.PassThru": [[40, 3, 1, "", "missing_hint"], [40, 3, 1, "", "nargs"], [40, 5, 1, "", "result"], [40, 5, 1, "", "result_value"], [40, 5, 1, "", "store_all"], [40, 5, 1, "", "take_action"]], "cli_command_parser.parameters.pass_thru.PassThru.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.positionals": [[41, 2, 1, "", "Positional"]], "cli_command_parser.parameters.positionals.Positional.params": [[41, 6, 1, "", "action"], [41, 6, 1, "", "allow_leading_dash"], [41, 6, 1, "", "choices"], [41, 6, 1, "", "default"], [41, 6, 1, "", "kwargs"], [41, 6, 1, "", "nargs"], [41, 6, 1, "", "type"]], "cli_command_parser.parse_tree": [[42, 2, 1, "", "AnyWord"], [42, 2, 1, "", "PosNode"], [42, 1, 1, "", "process_param"], [42, 1, 1, "", "process_params"]], "cli_command_parser.parse_tree.AnyWord": [[42, 3, 1, "", "n"], [42, 3, 1, "", "nargs"], [42, 3, 1, "", "remaining"]], "cli_command_parser.parse_tree.PosNode": [[42, 4, 1, "", "any_node"], [42, 4, 1, "", "any_word"], [42, 5, 1, "", "build_tree"], [42, 5, 1, "", "has_any"], [42, 5, 1, "", "link_params"], [42, 3, 1, "", "links"], [42, 5, 1, "", "nargs_max"], [42, 5, 1, "", "nargs_min"], [42, 3, 1, "", "param"], [42, 3, 1, "", "parent"], [42, 5, 1, "", "path_repr"], [42, 5, 1, "", "print_tree"], [42, 4, 1, "", "raw_path"], [42, 3, 1, "", "target"], [42, 5, 1, "", "update_node"], [42, 3, 1, "", "word"]], "cli_command_parser.parser": [[43, 2, 1, "", "CommandParser"]], "cli_command_parser.parser.CommandParser": [[43, 3, 1, "", "arg_deque"], [43, 3, 1, "", "config"], [43, 5, 1, "", "consume_values"], [43, 3, 1, "", "deferred"], [43, 5, 1, "", "get_next_cmd"], [43, 5, 1, "", "handle_long"], [43, 5, 1, "", "handle_pass_thru"], [43, 5, 1, "", "handle_positional"], [43, 5, 1, "", "handle_remainder"], [43, 5, 1, "", "handle_short"], [43, 3, 1, "", "params"], [43, 5, 1, "", "parse_args_and_get_next_cmd"], [43, 3, 1, "", "positionals"]], "cli_command_parser.parser.CommandParser.consume_values.params": [[43, 6, 1, "", "found"], [43, 6, 1, "", "param"]], "cli_command_parser.testing": [[44, 2, 1, "", "ParserTest"], [44, 2, 1, "", "RedirectStreams"], [44, 2, 1, "", "TemporaryDir"], [44, 1, 1, "", "format_dict_diff"], [44, 1, 1, "", "format_diff"], [44, 1, 1, "", "get_help_text"], [44, 1, 1, "", "get_rst_text"], [44, 1, 1, "", "get_usage_text"], [44, 1, 1, "", "load_command"], [44, 1, 1, "", "sealed_mock"]], "cli_command_parser.testing.ParserTest": [[44, 5, 1, "", "assert_argv_parse_fails_cases"], [44, 5, 1, "", "assert_call_fails"], [44, 5, 1, "", "assert_call_fails_cases"], [44, 5, 1, "", "assert_dict_equal"], [44, 5, 1, "", "assert_env_parse_results"], [44, 5, 1, "", "assert_env_parse_results_cases"], [44, 5, 1, "", "assert_parse_fails"], [44, 5, 1, "", "assert_parse_fails_cases"], [44, 5, 1, "", "assert_parse_results"], [44, 5, 1, "", "assert_parse_results_cases"], [44, 5, 1, "", "assert_str_contains"], [44, 5, 1, "", "assert_str_starts_with_line"], [44, 5, 1, "", "assert_strings_equal"], [44, 5, 1, "", "env_vars"]], "cli_command_parser.testing.RedirectStreams": [[44, 4, 1, "", "stderr"], [44, 4, 1, "", "stdout"]], "cli_command_parser.utils": [[46, 2, 1, "", "FixedFlag"], [46, 2, 1, "", "FixedFlagMeta"], [46, 2, 1, "", "MissingMixin"], [46, 2, 1, "", "Terminal"], [46, 2, 1, "", "ValueSource"], [46, 1, 1, "", "camel_to_snake_case"], [46, 1, 1, "", "positive_int"], [46, 1, 1, "", "short_repr"], [46, 1, 1, "", "str_to_bool"]], "cli_command_parser.utils.Terminal": [[46, 4, 1, "", "width"]], "cli_command_parser.utils.ValueSource": [[46, 3, 1, "", "CLI"], [46, 3, 1, "", "ENV"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method", "6": "py:parameter", "7": "py:exception", "8": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "titleterms": {"advanc": [0, 47, 50, 53, 65], "usag": [0, 48], "post": 0, "run": [0, 47, 53], "context": [0, 7], "access": 0, "raw": 0, "argument": 0, "valu": 0, "pars": [0, 47, 48, 66, 70], "arg": [0, 52], "dictionari": 0, "paramet": [0, 34, 48, 64, 67, 68, 69], "overridden": 0, "name": [0, 67], "mix": 0, "action": [0, 2, 52, 59, 68], "actionflag": [0, 48, 68], "api": [1, 61], "document": [1, 15, 48, 49, 65], "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "annot": 3, "command_paramet": 4, "command": [5, 19, 47, 48, 55, 65, 70], "config": 6, "convers": 8, "packag": [8, 18, 23, 34], "argparse_ast": 9, "argparse_util": 10, "command_build": 11, "util": [12, 22, 31, 46], "visitor": 13, "core": 14, "error_handl": 16, "except": [17, 26], "format": [18, 49], "param": 20, "restructured_text": 21, "input": [23, 57, 66], "base": [24, 35], "choic": [25, 66], "file": [27, 66], "numer": [28, 66], "pattern": [29, 66], "time": [30, 66], "metadata": [32, 48], "narg": 33, "choice_map": 36, "group": [37, 49, 56, 59, 64], "option_str": 38, "option": [39, 48, 68], "pass_thru": 40, "posit": [41, 68], "parse_tre": 42, "parser": [43, 65], "test": [44, 70], "type": [45, 64, 66, 67], "defin": [47, 50], "method": 47, "attribut": 47, "inherit": 47, "overrid": 47, "main": 47, "support": 47, "_sunder_": 47, "initi": 47, "us": 47, "_init_command_": 47, "_before_main_": 47, "__init__": 47, "configur": [48, 50, 65], "error": [48, 50], "handl": [48, 50], "help": [48, 49, 67], "text": [48, 49, 67], "gener": [48, 49], "restructuredtext": 49, "rst": 49, "handler": 50, "exampl": [51, 56, 64, 65], "script": 51, "With": 52, "subcommand": [53, 54, 56, 61, 62, 68, 69], "foo": [53, 54, 56, 61], "bar": [53, 54, 56, 61], "baz": [53, 61], "basic": 54, "wrapper": [55, 61], "complex": 56, "hello": [56, 60], "log": [56, 62], "updat": 56, "user": [56, 65], "custom": 57, "echo": 58, "flag": [59, 63, 68], "world": 60, "rest": 61, "show": [61, 62], "sync": 61, "find": 61, "share": [62, 69], "init": 62, "simpl": 63, "mutual": 64, "exclus": 64, "depend": 64, "combin": 64, "how": 64, "work": 64, "outer": 64, "cli": 65, "program": 65, "instal": 65, "python": 65, "version": 65, "compat": 65, "guid": 65, "build": 65, "link": 65, "indic": 65, "tabl": 65, "path": 66, "serial": 66, "rang": 66, "numrang": 66, "choicemap": 66, "enumchoic": 66, "regex": 66, "glob": 66, "date": 66, "dai": 66, "month": 66, "full": 66, "datetim": 66, "other": [66, 68], "timedelta": 66, "get": 67, "start": 67, "entri": 67, "point": 67, "triflag": 68, "counter": 68, "passthru": 68, "automat": 69, "registr": 69, "nest": 69, "explicit": 69, "common": 69, "helper": 70}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Commands Module": [[19, "module-cli_command_parser.formatting.commands"], [5, "module-cli_command_parser.commands"]], "Inputs Package": [[23, "inputs-package"]], "Formatting Package": [[18, "formatting-package"]], "Patterns Module": [[29, "module-cli_command_parser.inputs.patterns"]], "Files Module": [[27, "module-cli_command_parser.inputs.files"]], "Parameters Package": [[34, "parameters-package"]], "Params Module": [[20, "module-cli_command_parser.formatting.params"]], "Utils Module": [[22, "module-cli_command_parser.formatting.utils"], [31, "module-cli_command_parser.inputs.utils"], [12, "module-cli_command_parser.conversion.utils"], [46, "module-cli_command_parser.utils"]], "Restructured_Text Module": [[21, "module-cli_command_parser.formatting.restructured_text"]], "Exceptions Module": [[26, "module-cli_command_parser.inputs.exceptions"], [17, "module-cli_command_parser.exceptions"]], "Numeric Module": [[28, "module-cli_command_parser.inputs.numeric"]], "Nargs Module": [[33, "module-cli_command_parser.nargs"]], "Base Module": [[24, "module-cli_command_parser.inputs.base"], [35, "module-cli_command_parser.parameters.base"]], "Choices Module": [[25, "module-cli_command_parser.inputs.choices"]], "Time Module": [[30, "module-cli_command_parser.inputs.time"]], "Metadata Module": [[32, "module-cli_command_parser.metadata"]], "Argparse_Ast Module": [[9, "module-cli_command_parser.conversion.argparse_ast"]], "Actions Module": [[2, "module-cli_command_parser.actions"]], "Annotations Module": [[3, "module-cli_command_parser.annotations"]], "Context Module": [[7, "module-cli_command_parser.context"]], "Argparse_Utils Module": [[10, "module-cli_command_parser.conversion.argparse_utils"]], "Documentation Module": [[15, "module-cli_command_parser.documentation"]], "Core Module": [[14, "module-cli_command_parser.core"]], "Config Module": [[6, "module-cli_command_parser.config"]], "API Documentation": [[1, "api-documentation"]], "Command_Parameters Module": [[4, "module-cli_command_parser.command_parameters"]], "Command_Builder Module": [[11, "module-cli_command_parser.conversion.command_builder"]], "Visitor Module": [[13, "module-cli_command_parser.conversion.visitor"]], "Conversion Package": [[8, "conversion-package"]], "Error_Handling Module": [[16, "module-cli_command_parser.error_handling"]], "Advanced Usage": [[0, "advanced-usage"]], "Post-Run & Context": [[0, "post-run-context"]], "Accessing Raw Argument Values": [[0, "accessing-raw-argument-values"]], "Parsed Args as a Dictionary": [[0, "parsed-args-as-a-dictionary"]], "Parameters with Overridden Names": [[0, "parameters-with-overridden-names"]], "Mixing Actions & ActionFlags": [[0, "mixing-actions-actionflags"]], "Parameter Groups": [[64, "parameter-groups"]], "Mutually Exclusive": [[64, "mutually-exclusive"]], "Mutually Dependent": [[64, "mutually-dependent"]], "Combining Group Types": [[64, "combining-group-types"]], "How it Works": [[64, "how-it-works"]], "Mutually Exclusive Outer Group": [[64, "mutually-exclusive-outer-group"]], "Mutually Dependent Outer Group": [[64, "mutually-dependent-outer-group"]], "Examples": [[64, "examples"]], "CLI Command Parser": [[65, "cli-command-parser"]], "Example Program": [[65, "example-program"]], "Installing CLI Command Parser": [[65, "installing-cli-command-parser"]], "Python Version Compatibility": [[65, "python-version-compatibility"]], "User Guide": [[65, "user-guide"]], "Building Commands": [[65, "building-commands"]], "Configuring & Documenting Commands": [[65, "configuring-documenting-commands"]], "Advanced": [[65, "advanced"], [50, "advanced"], [47, "advanced"]], "Links": [[65, "links"]], "Indices and Tables": [[65, "indices-and-tables"]], "Getting Started": [[67, "getting-started"]], "Parameters": [[67, "parameters"], [68, "parameters"]], "Types": [[67, "types"]], "Names": [[67, "names"]], "Entry Points": [[67, "entry-points"]], "Help Text": [[67, "help-text"], [49, "help-text"]], "Command Wrapper": [[55, "command-wrapper"]], "Complex Example": [[56, "complex-example"]], "Subcommands": [[56, "subcommands"], [61, "subcommands"], [62, "subcommands"], [69, "subcommands"], [54, "subcommands"], [53, "subcommands"]], "Subcommand: hello": [[56, "subcommand-hello"]], "Subcommand: logs": [[56, "subcommand-logs"]], "Subcommand: update": [[56, "subcommand-update"]], "Subcommand: update foo": [[56, "subcommand-update-foo"]], "Subcommand: update bar": [[56, "subcommand-update-bar"]], "Subcommand: update user": [[56, "subcommand-update-user"]], "Subcommand: update group": [[56, "subcommand-update-group"]], "Grouped Action Flags": [[59, "grouped-action-flags"]], "Options": [[68, "options"]], "Option": [[68, "option"]], "Flag": [[68, "flag"]], "TriFlag": [[68, "triflag"]], "Counter": [[68, "counter"]], "Positionals": [[68, "positionals"]], "Positional": [[68, "positional"]], "SubCommand": [[68, "subcommand"]], "Action": [[68, "action"]], "Others": [[68, "others"]], "PassThru": [[68, "passthru"]], "ActionFlag": [[68, "actionflag"]], "Testing Commands": [[70, "testing-commands"]], "Testing Parsing": [[70, "testing-parsing"]], "Test Helpers": [[70, "test-helpers"]], "Echo": [[58, "echo"]], "Rest Api Wrapper": [[61, "rest-api-wrapper"]], "Subcommand: show": [[61, "subcommand-show"], [62, "subcommand-show"]], "Subcommand: sync": [[61, "subcommand-sync"]], "Subcommand: find": [[61, "subcommand-find"]], "Subcommand: find foo": [[61, "subcommand-find-foo"]], "Subcommand: find bar": [[61, "subcommand-find-bar"]], "Subcommand: find baz": [[61, "subcommand-find-baz"]], "Subcommand: find bazs": [[61, "subcommand-find-bazs"]], "Shared Logging Init": [[62, "shared-logging-init"]], "Automatic Registration": [[69, "automatic-registration"]], "Nested Subcommands": [[69, "nested-subcommands"]], "Explicit Registration": [[69, "explicit-registration"]], "Shared Common Parameters": [[69, "shared-common-parameters"]], "Hello World": [[60, "hello-world"]], "Basic Subcommand": [[54, "basic-subcommand"]], "Subcommand: foo": [[54, "subcommand-foo"], [53, "subcommand-foo"]], "Subcommand: bar": [[54, "subcommand-bar"]], "Simple Flags": [[63, "simple-flags"]], "Custom Inputs": [[57, "custom-inputs"]], "Input Types": [[66, "input-types"]], "Paths & Files": [[66, "paths-files"]], "Path": [[66, "path"]], "File": [[66, "file"]], "Serialized Files": [[66, "serialized-files"]], "Numeric Ranges": [[66, "numeric-ranges"]], "Range": [[66, "range"]], "NumRange": [[66, "numrange"]], "Choice Inputs": [[66, "choice-inputs"]], "Choices": [[66, "choices"]], "ChoiceMap": [[66, "choicemap"]], "EnumChoices": [[66, "enumchoices"]], "Regex & Glob Patterns": [[66, "regex-glob-patterns"]], "Regex": [[66, "regex"]], "Glob": [[66, "glob"]], "Date & Time": [[66, "date-time"]], "Day & Month": [[66, "day-month"]], "Day": [[66, "day"]], "Month": [[66, "month"]], "Full Date / Time Parsing": [[66, "full-date-time-parsing"]], "DateTime": [[66, "datetime"]], "Date": [[66, "date"]], "Time": [[66, "time"]], "Other Date / Time Inputs": [[66, "other-date-time-inputs"]], "TimeDelta": [[66, "timedelta"]], "Positionals Module": [[41, "module-cli_command_parser.parameters.positionals"]], "Error Handling": [[50, "error-handling"]], "Configuration": [[50, "configuration"], [48, "configuration"]], "Defining Error Handlers": [[50, "defining-error-handlers"]], "Testing Module": [[44, "module-cli_command_parser.testing"]], "Example Scripts": [[51, "example-scripts"]], "Pass_Thru Module": [[40, "module-cli_command_parser.parameters.pass_thru"]], "Options Module": [[39, "module-cli_command_parser.parameters.options"]], "Advanced Subcommand": [[53, "advanced-subcommand"]], "Subcommand: run foo": [[53, "subcommand-run-foo"]], "Subcommand: run bar": [[53, "subcommand-run-bar"]], "Subcommand: baz": [[53, "subcommand-baz"]], "Choice_Map Module": [[36, "module-cli_command_parser.parameters.choice_map"]], "Option_Strings Module": [[38, "module-cli_command_parser.parameters.option_strings"]], "Groups Module": [[37, "module-cli_command_parser.parameters.groups"]], "Parse_Tree Module": [[42, "module-cli_command_parser.parse_tree"]], "Action With Args": [[52, "action-with-args"]], "Parser Module": [[43, "module-cli_command_parser.parser"]], "Typing Module": [[45, "module-cli_command_parser.typing"]], "Command Metadata": [[48, "command-metadata"]], "Configuration Options": [[48, "configuration-options"]], "Error Handling Options": [[48, "error-handling-options"]], "Parameter Options": [[48, "parameter-options"]], "ActionFlag Options": [[48, "actionflag-options"]], "Parsing Options": [[48, "parsing-options"]], "Usage & Help Text Options": [[48, "usage-help-text-options"]], "Documentation Generation Options": [[48, "documentation-generation-options"]], "Documentation": [[49, "documentation"]], "Group Formatting": [[49, "group-formatting"]], "reStructuredText": [[49, "restructuredtext"]], "Generating RST Documentation": [[49, "generating-rst-documentation"]], "Commands": [[47, "commands"]], "Defining Commands": [[47, "defining-commands"]], "Command Methods & Attributes": [[47, "command-methods-attributes"]], "Parse & Run": [[47, "parse-run"]], "Inheritance": [[47, "inheritance"]], "Overriding Command Methods": [[47, "overriding-command-methods"]], "Overriding main": [[47, "overriding-main"]], "Supported _sunder_ Methods": [[47, "supported-sunder-methods"]], "Initialization Methods": [[47, "initialization-methods"]], "Using _init_command_": [[47, "using-init-command"]], "Using _before_main_": [[47, "using-before-main"]], "Using __init__": [[47, "using-init"]]}, "indexentries": {"cli_command_parser.actions": [[2, "module-cli_command_parser.actions"]], "help_action() (in module cli_command_parser.actions)": [[2, "cli_command_parser.actions.help_action"]], "module": [[2, "module-cli_command_parser.actions"], [3, "module-cli_command_parser.annotations"], [4, "module-cli_command_parser.command_parameters"], [5, "module-cli_command_parser.commands"], [6, "module-cli_command_parser.config"], [7, "module-cli_command_parser.context"], [9, "module-cli_command_parser.conversion.argparse_ast"], [10, "module-cli_command_parser.conversion.argparse_utils"], [11, "module-cli_command_parser.conversion.command_builder"], [12, "module-cli_command_parser.conversion.utils"], [13, "module-cli_command_parser.conversion.visitor"], [14, "module-cli_command_parser.core"], [15, "module-cli_command_parser.documentation"], [16, "module-cli_command_parser.error_handling"], [17, "module-cli_command_parser.exceptions"], [19, "module-cli_command_parser.formatting.commands"], [20, "module-cli_command_parser.formatting.params"], [21, "module-cli_command_parser.formatting.restructured_text"], [22, "module-cli_command_parser.formatting.utils"], [24, "module-cli_command_parser.inputs.base"], [25, "module-cli_command_parser.inputs.choices"], [26, "module-cli_command_parser.inputs.exceptions"], [27, "module-cli_command_parser.inputs.files"], [28, "module-cli_command_parser.inputs.numeric"], [29, "module-cli_command_parser.inputs.patterns"], [30, "module-cli_command_parser.inputs.time"], [31, "module-cli_command_parser.inputs.utils"], [32, "module-cli_command_parser.metadata"], [33, "module-cli_command_parser.nargs"], [35, "module-cli_command_parser.parameters.base"], [36, "module-cli_command_parser.parameters.choice_map"], [37, "module-cli_command_parser.parameters.groups"], [38, "module-cli_command_parser.parameters.option_strings"], [39, "module-cli_command_parser.parameters.options"], [40, "module-cli_command_parser.parameters.pass_thru"], [41, "module-cli_command_parser.parameters.positionals"], [42, "module-cli_command_parser.parse_tree"], [43, "module-cli_command_parser.parser"], [44, "module-cli_command_parser.testing"], [45, "module-cli_command_parser.typing"], [46, "module-cli_command_parser.utils"]], "cli_command_parser.annotations": [[3, "module-cli_command_parser.annotations"]], "get_annotation_value_type() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_annotation_value_type"]], "get_args() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_args"]], "get_descriptor_value_type() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_descriptor_value_type"]], "commandparameters (class in cli_command_parser.command_parameters)": [[4, "cli_command_parser.command_parameters.CommandParameters"]], "action (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action"]], "action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action_flags"]], "all_positionals (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.all_positionals"]], "always_available_action_flags (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.always_available_action_flags"]], "cli_command_parser.command_parameters": [[4, "module-cli_command_parser.command_parameters"]], "combo_option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.combo_option_map"]], "command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command"]], "command_parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command_parent"]], "find_nested_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_option_that_accepts_values"]], "find_nested_pass_thru() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_pass_thru"]], "find_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_option_that_accepts_values"]], "formatter (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.formatter"]], "get_option_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.get_option_param_value_pairs"]], "get_positionals_to_parse() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.get_positionals_to_parse"]], "groups (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.groups"]], "long_option_to_param_value_pair() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.long_option_to_param_value_pair"]], "option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.option_map"]], "options (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.options"]], "parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.parent"]], "pass_thru (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.pass_thru"]], "positionals (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.positionals"]], "required_check_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.required_check_params"]], "short_option_to_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.short_option_to_param_value_pairs"]], "split_action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.split_action_flags"]], "sub_command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.sub_command"]], "try_env_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.try_env_params"]], "validate_groups() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.validate_groups"]], "command (class in cli_command_parser.commands)": [[5, "cli_command_parser.commands.Command"]], "__call__() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.__call__"]], "_after_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._after_main_"]], "_before_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._before_main_"]], "_init_command_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._init_command_"]], "_pre_init_actions_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._pre_init_actions_"]], "cli_command_parser.commands": [[5, "module-cli_command_parser.commands"]], "ctx (cli_command_parser.commands.command attribute)": [[5, "cli_command_parser.commands.Command.ctx"]], "main() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.main"]], "main() (in module cli_command_parser.commands)": [[5, "cli_command_parser.commands.main"]], "parse() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse"]], "parse_and_run() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse_and_run"]], "alias (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.ALIAS"]], "always (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.ALWAYS"]], "any (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.ANY"]], "allowleadingdash (class in cli_command_parser.config)": [[6, "cli_command_parser.config.AllowLeadingDash"]], "ambiguouscombomode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.AmbiguousComboMode"]], "both (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH"]], "both_dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_DASH"]], "both_underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_UNDERSCORE"]], "combine (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.COMBINE"]], "commandconfig (class in cli_command_parser.config)": [[6, "cli_command_parser.config.CommandConfig"]], "configitem (class in cli_command_parser.config)": [[6, "cli_command_parser.config.ConfigItem"]], "dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.DASH"]], "dynamicconfigitem (class in cli_command_parser.config)": [[6, "cli_command_parser.config.DynamicConfigItem"]], "fields (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.FIELDS"]], "ignore (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.IGNORE"]], "missing (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.MISSING"]], "never (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.NEVER"]], "never (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NEVER"]], "none (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.NONE"]], "non_empty (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NON_EMPTY"]], "numeric (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.NUMERIC"]], "optionnamemode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.OptionNameMode"]], "permissive (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.PERMISSIVE"]], "repeat (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.REPEAT"]], "strict (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.STRICT"]], "showdefaults (class in cli_command_parser.config)": [[6, "cli_command_parser.config.ShowDefaults"]], "subcommandaliashelpmode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode"]], "truthy (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.TRUTHY"]], "underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.UNDERSCORE"]], "action_after_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.action_after_action_flags"]], "add_help (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.add_help"]], "allow_annotation_type (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_annotation_type"]], "allow_backtrack (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_backtrack"]], "allow_missing (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_missing"]], "always_run_after_main (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.always_run_after_main"]], "ambiguous_short_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ambiguous_short_combos"]], "as_dict() (cli_command_parser.config.commandconfig method)": [[6, "cli_command_parser.config.CommandConfig.as_dict"]], "choice_delim (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.choice_delim"]], "cli_command_parser.config": [[6, "module-cli_command_parser.config"]], "cmd_alias_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.cmd_alias_mode"]], "command_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.command_formatter"]], "config_item() (in module cli_command_parser.config)": [[6, "cli_command_parser.config.config_item"]], "default (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.default"]], "error_handler (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.error_handler"]], "extended_epilog (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.extended_epilog"]], "ignore_unknown (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ignore_unknown"]], "min_usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.min_usage_column_width"]], "multiple_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.multiple_action_flags"]], "name (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.name"]], "option_name_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.option_name_mode"]], "param_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.param_formatter"]], "reject_ambiguous_pos_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.reject_ambiguous_pos_combos"]], "show_defaults (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_defaults"]], "show_docstring (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_docstring"]], "show_group_tree (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_tree"]], "show_group_type (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_type"]], "show_inherited_descriptions (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_inherited_descriptions"]], "sort_choices (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.sort_choices"]], "sub_cmd_doc_depth (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.sub_cmd_doc_depth"]], "type (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.type"]], "usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.usage_column_width"]], "use_type_metavar (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.use_type_metavar"]], "wrap_usage_str (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.wrap_usage_str"]], "after_main (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.AFTER_MAIN"]], "actionphase (class in cli_command_parser.context)": [[7, "cli_command_parser.context.ActionPhase"]], "before_main (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.BEFORE_MAIN"]], "context (class in cli_command_parser.context)": [[7, "cli_command_parser.context.Context"]], "contextproxy (class in cli_command_parser.context)": [[7, "cli_command_parser.context.ContextProxy"]], "pre_init (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.PRE_INIT"]], "action_flag_count (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.action_flag_count"]], "all_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.all_action_flags"]], "allow_argv_prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.allow_argv_prog"]], "categorized_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.categorized_action_flags"]], "cli_command_parser.context": [[7, "module-cli_command_parser.context"]], "config (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.config"]], "config (cli_command_parser.context.contextproxy property)": [[7, "cli_command_parser.context.ContextProxy.config"]], "for_prog() (cli_command_parser.context.context class method)": [[7, "cli_command_parser.context.Context.for_prog"]], "get_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_context"]], "get_current_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_current_context"]], "get_error_handler() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_error_handler"]], "get_missing() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_missing"]], "get_or_create_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_or_create_context"]], "get_parsed() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed"]], "get_parsed() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_parsed"]], "get_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed_value"]], "get_raw_arg() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_raw_arg"]], "iter_action_flags() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.iter_action_flags"]], "num_provided() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.num_provided"]], "params (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.params"]], "prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.prog"]], "record_action() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.record_action"]], "set_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.set_parsed_value"]], "terminal_width (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.terminal_width"]], "terminal_width (cli_command_parser.context.contextproxy property)": [[7, "cli_command_parser.context.ContextProxy.terminal_width"]], "addvisitedchild (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild"]], "argcollection (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection"]], "arggroup (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ArgGroup"]], "astargumentparser (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser"]], "astcallable (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable"]], "mutuallyexclusivegroup (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup"]], "parserarg (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg"]], "script (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.Script"]], "subparser (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser"]], "subparsersaction (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction"]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.argcollection class method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.__init_subclass__"]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.astcallable class method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.__init_subclass__"]], "add_argument (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument"]], "add_argument_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument_group"]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_mutually_exclusive_group"]], "add_parser() (cli_command_parser.conversion.argparse_ast.script method)": [[9, "cli_command_parser.conversion.argparse_ast.Script.add_parser"]], "add_parser() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.add_parser"]], "add_subparsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.add_subparsers"]], "args (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.args"]], "child_cls (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.child_cls"]], "cli_command_parser.conversion.argparse_ast": [[9, "module-cli_command_parser.conversion.argparse_ast"]], "func (cli_command_parser.conversion.argparse_ast.visit_func attribute)": [[9, "cli_command_parser.conversion.argparse_ast.visit_func.func"]], "get_tracked_refs() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.get_tracked_refs"]], "grouped_children() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.grouped_children"]], "groups (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.groups"]], "init_call_repr() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_call_repr"]], "init_func_args (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_args"]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_kwargs"]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.subparser property)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.init_func_kwargs"]], "init_func_name (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_name"]], "init_func_raw_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_raw_kwargs"]], "list_attr (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.list_attr"]], "mod_cls_to_ast_cls_map (cli_command_parser.conversion.argparse_ast.script property)": [[9, "cli_command_parser.conversion.argparse_ast.Script.mod_cls_to_ast_cls_map"]], "parent (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.parent"]], "parent (cli_command_parser.conversion.argparse_ast.parserarg attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg.parent"]], "parent (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.parent"]], "parsers (cli_command_parser.conversion.argparse_ast.script property)": [[9, "cli_command_parser.conversion.argparse_ast.Script.parsers"]], "path (cli_command_parser.conversion.argparse_ast.script attribute)": [[9, "cli_command_parser.conversion.argparse_ast.Script.path"]], "pprint() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.pprint"]], "pprint() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.pprint"]], "register_parser() (cli_command_parser.conversion.argparse_ast.script class method)": [[9, "cli_command_parser.conversion.argparse_ast.Script.register_parser"]], "represents (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.represents"]], "represents (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.arggroup method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgGroup.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.mutuallyexclusivegroup method)": [[9, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.parserarg method)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.subparser method)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.represents"]], "signature (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.signature"]], "sp_parent (cli_command_parser.conversion.argparse_ast.subparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.sp_parent"]], "sub_parsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.sub_parsers"]], "visit_func (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.visit_func"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.visit_funcs"]], "argumentparser (class in cli_command_parser.conversion.argparse_utils)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser"]], "subparsersaction (class in cli_command_parser.conversion.argparse_utils)": [[10, "cli_command_parser.conversion.argparse_utils.SubParsersAction"]], "add_argument_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_argument_group"]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_mutually_exclusive_group"]], "add_parser() (cli_command_parser.conversion.argparse_utils.subparsersaction method)": [[10, "cli_command_parser.conversion.argparse_utils.SubParsersAction.add_parser"]], "add_subparsers() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_subparsers"]], "cli_command_parser.conversion.argparse_utils": [[10, "module-cli_command_parser.conversion.argparse_utils"]], "baseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs"]], "collectionconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter"]], "commandargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs"]], "conversionerror": [[11, "cli_command_parser.conversion.command_builder.ConversionError"]], "converter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.Converter"]], "convertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup"]], "flagargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs"]], "groupconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter"]], "optionargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs"]], "paramargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs"]], "parambaseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs"]], "paramconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter"]], "paramconvertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup"]], "parserconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter"]], "passthruargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.PassThruArgs"]], "scriptconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter"]], "__init_subclass__() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.__init_subclass__"]], "action (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.action"]], "add_help (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.add_help"]], "ast_obj (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.ast_obj"]], "attr_name (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.attr_name"]], "choice (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choice"]], "choices (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choices"]], "choices (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.choices"]], "cli_command_parser.conversion.command_builder": [[11, "module-cli_command_parser.conversion.command_builder"]], "cmd_option_strs (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.cmd_option_strs"]], "const (cli_command_parser.conversion.command_builder.flagargs attribute)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.const"]], "convert() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.convert"]], "convert_script() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.convert_script"]], "converts (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.converts"]], "converts (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.scriptconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.converts"]], "default (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.default"]], "descendant_args() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.descendant_args"]], "descendant_args() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.descendant_args"]], "description (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.description"]], "docs_url (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.docs_url"]], "email (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.email"]], "epilog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.epilog"]], "finalize() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.finalize"]], "finalize() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.finalize"]], "for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.for_ast_callable"]], "format() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format"]], "format_all() (cli_command_parser.conversion.command_builder.convertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.format_all"]], "format_all() (cli_command_parser.conversion.command_builder.paramconvertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup.format_all"]], "format_lines() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.groupconverter method)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.scriptconverter method)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.format_lines"]], "format_members() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.format_members"]], "from_kwargs() (cli_command_parser.conversion.command_builder.baseargs class method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.from_kwargs"]], "get_cls_and_kwargs() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_cls_and_kwargs"]], "get_pos_args() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_pos_args"]], "grouped_children (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.grouped_children"]], "help (cli_command_parser.conversion.command_builder.baseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.help"]], "hide (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.hide"]], "init_counter() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_counter"]], "init_flag() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_flag"]], "init_for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_for_ast_callable"]], "init_group() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_group"]], "init_group() (cli_command_parser.conversion.command_builder.paramconverter class method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.init_group"]], "init_option() (cli_command_parser.conversion.command_builder.optionargs class method)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.init_option"]], "init_positional() (cli_command_parser.conversion.command_builder.paramargs class method)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.init_positional"]], "is_option (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_option"]], "is_pass_thru (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_pass_thru"]], "is_positional (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_positional"]], "is_sub_parser (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.is_sub_parser"]], "literal_eval_or_none() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.literal_eval_or_none"]], "member_type (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.member_type"]], "members (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.members"]], "metavar (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.metavar"]], "name (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.name"]], "name (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name"]], "name_mode (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.optionargs attribute)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name_mode"]], "nargs (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.nargs"]], "newline_between_members (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.newline_between_members"]], "newline_between_members (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.newline_between_members"]], "option_name_mode (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.option_name_mode"]], "parent (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.parent"]], "parent (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.parent"]], "parent (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.parent"]], "parent (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.parent"]], "prog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.prog"]], "required (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.required"]], "sub_parser_converters (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.sub_parser_converters"]], "to_str() (cli_command_parser.conversion.command_builder.baseargs method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.to_str"]], "to_str() (cli_command_parser.conversion.command_builder.parambaseargs method)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.to_str"]], "type (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.type"]], "usage (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.usage"]], "use_auto_long_opt_str (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.use_auto_long_opt_str"]], "cli_command_parser.conversion.utils": [[12, "module-cli_command_parser.conversion.utils"]], "collection_contents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.collection_contents"]], "get_name_repr() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.get_name_repr"]], "iter_module_parents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.iter_module_parents"]], "scopedvisit (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScopedVisit"]], "scriptvisitor (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor"]], "trackedref (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.TrackedRef"]], "cli_command_parser.conversion.visitor": [[13, "module-cli_command_parser.conversion.visitor"]], "get_tracked_refs() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.get_tracked_refs"]], "imp_names() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.imp_names"]], "module (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.module"]], "name (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.name"]], "resolve_ref() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.resolve_ref"]], "scoped() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.scoped"]], "track_callable() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_callable"]], "track_refs_to() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_refs_to"]], "visit_assign() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Assign"]], "visit_asyncfor() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFor"]], "visit_asyncfunctiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFunctionDef"]], "visit_call() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Call"]], "visit_classdef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ClassDef"]], "visit_for() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_For"]], "visit_functiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_FunctionDef"]], "visit_import() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Import"]], "visit_importfrom() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ImportFrom"]], "visit_lambda (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Lambda"]], "visit_while (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_While"]], "visit_withitem() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_withitem"]], "commandmeta (class in cli_command_parser.core)": [[14, "cli_command_parser.core.CommandMeta"]], "cli_command_parser.core": [[14, "module-cli_command_parser.core"]], "config() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.config"]], "get_config() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_config"]], "get_metadata() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_metadata"]], "get_params() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_params"]], "get_parent() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_parent"]], "get_top_level_commands() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_top_level_commands"]], "meta() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.meta"]], "params() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.params"]], "parent() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.parent"]], "rstwriter (class in cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.RstWriter"]], "cli_command_parser.documentation": [[15, "module-cli_command_parser.documentation"]], "document_module() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_module"]], "document_package() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_package"]], "document_script() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_script"]], "document_scripts() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_scripts"]], "filtered_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.filtered_commands"]], "import_module() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.import_module"]], "load_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.load_commands"]], "render_command_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_command_rst"]], "render_script_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_script_rst"]], "top_level_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.top_level_commands"]], "write_index() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_index"]], "write_rst() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_rst"]], "errorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.ErrorHandler"]], "handler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.Handler"]], "nullerrorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.NullErrorHandler"]], "__call__() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.__call__"]], "cli_command_parser.error_handling": [[16, "module-cli_command_parser.error_handling"]], "cls_handler() (cli_command_parser.error_handling.errorhandler class method)": [[16, "cli_command_parser.error_handling.ErrorHandler.cls_handler"]], "copy() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.copy"]], "error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.error_handler"]], "exc_cls (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.exc_cls"]], "exc_handler_map (cli_command_parser.error_handling.errorhandler attribute)": [[16, "cli_command_parser.error_handling.ErrorHandler.exc_handler_map"]], "extended_error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.extended_error_handler"]], "handle_kb_interrupt() (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.handle_kb_interrupt"]], "handler (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.handler"]], "iter_handlers() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.iter_handlers"]], "no_exit_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.no_exit_handler"]], "register() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.register"]], "unregister() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.unregister"]], "ambiguouscombo": [[17, "cli_command_parser.exceptions.AmbiguousCombo"]], "ambiguousparsetree": [[17, "cli_command_parser.exceptions.AmbiguousParseTree"]], "ambiguousshortform": [[17, "cli_command_parser.exceptions.AmbiguousShortForm"]], "backtrack": [[17, "cli_command_parser.exceptions.Backtrack"]], "badargument": [[17, "cli_command_parser.exceptions.BadArgument"]], "commanddefinitionerror": [[17, "cli_command_parser.exceptions.CommandDefinitionError"]], "commandparserexception": [[17, "cli_command_parser.exceptions.CommandParserException"]], "invalidchoice": [[17, "cli_command_parser.exceptions.InvalidChoice"]], "missingargument": [[17, "cli_command_parser.exceptions.MissingArgument"]], "multiparamusageerror": [[17, "cli_command_parser.exceptions.MultiParamUsageError"]], "nextcommand": [[17, "cli_command_parser.exceptions.NextCommand"]], "noactivecontext": [[17, "cli_command_parser.exceptions.NoActiveContext"]], "nosuchoption": [[17, "cli_command_parser.exceptions.NoSuchOption"]], "paramconflict": [[17, "cli_command_parser.exceptions.ParamConflict"]], "paramusageerror": [[17, "cli_command_parser.exceptions.ParamUsageError"]], "parameterdefinitionerror": [[17, "cli_command_parser.exceptions.ParameterDefinitionError"]], "paramsmissing": [[17, "cli_command_parser.exceptions.ParamsMissing"]], "parserexit": [[17, "cli_command_parser.exceptions.ParserExit"]], "unsupportedaction": [[17, "cli_command_parser.exceptions.UnsupportedAction"]], "usageerror": [[17, "cli_command_parser.exceptions.UsageError"]], "cli_command_parser.exceptions": [[17, "module-cli_command_parser.exceptions"]], "code (cli_command_parser.exceptions.commandparserexception attribute)": [[17, "cli_command_parser.exceptions.CommandParserException.code"]], "exit() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.exit"]], "message (cli_command_parser.exceptions.missingargument attribute)": [[17, "cli_command_parser.exceptions.MissingArgument.message"]], "message (cli_command_parser.exceptions.usageerror attribute)": [[17, "cli_command_parser.exceptions.UsageError.message"]], "show() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.show"]], "commandhelpformatter (class in cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter"]], "cli_command_parser.formatting.commands": [[19, "module-cli_command_parser.formatting.commands"]], "format_help() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_help"]], "format_rst() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_rst"]], "format_usage() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_usage"]], "get_formatter() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_formatter"]], "get_usage_sub_cmds() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_usage_sub_cmds"]], "maybe_add_groups() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_groups"]], "maybe_add_option() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_option"]], "maybe_add_options() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_options"]], "maybe_add_positionals() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_positionals"]], "choicegroup (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceGroup"]], "choicemaphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter"]], "grouphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter"]], "optionhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter"]], "paramhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter"]], "passthruhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter"]], "positionalhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter"]], "triflaghelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter"]], "__init_subclass__() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.__init_subclass__"]], "add() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.add"]], "choice_groups (cli_command_parser.formatting.params.choicemaphelpformatter property)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.choice_groups"]], "choice_strs (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choice_strs"]], "choices (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choices"]], "cli_command_parser.formatting.params": [[20, "module-cli_command_parser.formatting.params"]], "for_param_cls() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.for_param_cls"]], "format() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.format"]], "format_basic_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_basic_usage"]], "format_description() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_description"]], "format_help() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_help"]], "format_metavar() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_metavar"]], "format_metavar() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_metavar"]], "format_usage() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.positionalhelpformatter method)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_usage"]], "group_choices() (cli_command_parser.formatting.params.choicegroup class method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.group_choices"]], "iter_usage_parts() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.iter_usage_parts"]], "iter_usage_parts() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.iter_usage_parts"]], "maybe_wrap_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.maybe_wrap_usage"]], "param (cli_command_parser.formatting.params.choicemaphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.param"]], "param (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.param"]], "param (cli_command_parser.formatting.params.optionhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.param"]], "param (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.param"]], "param (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.param"]], "param (cli_command_parser.formatting.params.positionalhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.param"]], "param (cli_command_parser.formatting.params.triflaghelpformatter attribute)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.param"]], "prepare() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare"]], "prepare_aliases() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases"]], "prepare_combined() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_combined"]], "prepare_repeated() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_repeated"]], "required_formatter_map (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.required_formatter_map"]], "rst_row() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_row"]], "rst_rows() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_rows"]], "rst_rows() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.rst_rows"]], "rst_table() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.rst_table"]], "rst_table() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.rst_table"]], "rst_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.rst_usage"]], "rst_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_usage"]], "rsttable (class in cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.RstTable"]], "add_dict_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_dict_rows"]], "add_kv_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_kv_rows"]], "add_row() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_row"]], "add_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_rows"]], "bar() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.bar"]], "cli_command_parser.formatting.restructured_text": [[21, "module-cli_command_parser.formatting.restructured_text"]], "from_dict() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dict"]], "from_dicts() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dicts"]], "iter_build() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.iter_build"]], "rows (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.rows"]], "rst_bar() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_bar"]], "rst_directive() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_directive"]], "rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_header"]], "rst_list_table() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_list_table"]], "rst_toc_tree() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_toc_tree"]], "show_title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.show_title"]], "spaced_rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.spaced_rst_header"]], "subtitle (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.subtitle"]], "title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.title"]], "use_table_directive (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.use_table_directive"]], "widths (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.widths"]], "cli_command_parser.formatting.utils": [[22, "module-cli_command_parser.formatting.utils"]], "combine_and_wrap() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.combine_and_wrap"]], "format_help_entry() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.format_help_entry"]], "line_iter() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.line_iter"]], "inputtype (class in cli_command_parser.inputs.base)": [[24, "cli_command_parser.inputs.base.InputType"]], "__call__() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.__call__"]], "cli_command_parser.inputs.base": [[24, "module-cli_command_parser.inputs.base"]], "fix_default() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.fix_default"]], "format_metavar() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.format_metavar"]], "is_valid_type() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.is_valid_type"]], "choicemap (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.ChoiceMap"]], "choices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.Choices"]], "enumchoices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.EnumChoices"]], "__call__() (cli_command_parser.inputs.choices.choicemap method)": [[25, "cli_command_parser.inputs.choices.ChoiceMap.__call__"]], "__call__() (cli_command_parser.inputs.choices.choices method)": [[25, "cli_command_parser.inputs.choices.Choices.__call__"]], "__call__() (cli_command_parser.inputs.choices.enumchoices method)": [[25, "cli_command_parser.inputs.choices.EnumChoices.__call__"]], "choices (cli_command_parser.inputs.choices.choicemap attribute)": [[25, "cli_command_parser.inputs.choices.ChoiceMap.choices"]], "cli_command_parser.inputs.choices": [[25, "module-cli_command_parser.inputs.choices"]], "enum (cli_command_parser.inputs.choices.enumchoices attribute)": [[25, "cli_command_parser.inputs.choices.EnumChoices.enum"]], "inputvalidationerror": [[26, "cli_command_parser.inputs.exceptions.InputValidationError"]], "invalidchoiceerror": [[26, "cli_command_parser.inputs.exceptions.InvalidChoiceError"]], "cli_command_parser.inputs.exceptions": [[26, "module-cli_command_parser.inputs.exceptions"]], "file (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.File"]], "fileinput (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.FileInput"]], "json (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Json"]], "path (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Path"]], "pickle (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Pickle"]], "serialized (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Serialized"]], "__call__() (cli_command_parser.inputs.files.file method)": [[27, "cli_command_parser.inputs.files.File.__call__"]], "__call__() (cli_command_parser.inputs.files.path method)": [[27, "cli_command_parser.inputs.files.Path.__call__"]], "allow_dash (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.allow_dash"]], "cli_command_parser.inputs.files": [[27, "module-cli_command_parser.inputs.files"]], "converter (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.converter"]], "encoding (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.encoding"]], "errors (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.errors"]], "exists (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.exists"]], "expand (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.expand"]], "fix_default() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.fix_default"]], "lazy (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.lazy"]], "mode (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.mode"]], "parents (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.parents"]], "pass_file (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.pass_file"]], "readable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.readable"]], "resolve (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.resolve"]], "type (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.type"]], "type (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.type"]], "use_windows_fix (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.use_windows_fix"]], "validated_path() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.validated_path"]], "writable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.writable"]], "numrange (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumRange"]], "numericinput (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumericInput"]], "range (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.Range"]], "__call__() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.__call__"]], "__call__() (cli_command_parser.inputs.numeric.range method)": [[28, "cli_command_parser.inputs.numeric.Range.__call__"]], "cli_command_parser.inputs.numeric": [[28, "module-cli_command_parser.inputs.numeric"]], "fix_default() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.fix_default"]], "format_metavar() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.format_metavar"]], "handle_invalid() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.handle_invalid"]], "include_max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_max"]], "include_min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_min"]], "is_valid_type() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.is_valid_type"]], "max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.max"]], "min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.min"]], "range (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.range"]], "snap (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.snap"]], "snap (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.snap"]], "type (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.type"]], "type (cli_command_parser.inputs.numeric.numericinput attribute)": [[28, "cli_command_parser.inputs.numeric.NumericInput.type"]], "type (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.type"]], "dict (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.DICT"]], "group (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUP"]], "groups (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUPS"]], "glob (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Glob"]], "match (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.MATCH"]], "patterninput (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.PatternInput"]], "regex (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Regex"]], "regexmode (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.RegexMode"]], "string (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.STRING"]], "__call__() (cli_command_parser.inputs.patterns.glob method)": [[29, "cli_command_parser.inputs.patterns.Glob.__call__"]], "__call__() (cli_command_parser.inputs.patterns.regex method)": [[29, "cli_command_parser.inputs.patterns.Regex.__call__"]], "cli_command_parser.inputs.patterns": [[29, "module-cli_command_parser.inputs.patterns"]], "format_metavar() (cli_command_parser.inputs.patterns.patterninput method)": [[29, "cli_command_parser.inputs.patterns.PatternInput.format_metavar"]], "group (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.group"]], "groups (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.groups"]], "mode (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.mode"]], "normalize() (cli_command_parser.inputs.patterns.regexmode class method)": [[29, "cli_command_parser.inputs.patterns.RegexMode.normalize"]], "normcase (cli_command_parser.inputs.patterns.glob attribute)": [[29, "cli_command_parser.inputs.patterns.Glob.normcase"]], "patterns (cli_command_parser.inputs.patterns.patterninput attribute)": [[29, "cli_command_parser.inputs.patterns.PatternInput.patterns"]], "abbreviation (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.ABBREVIATION"]], "calendarunitinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput"]], "dtformatmode (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTFormatMode"]], "dtinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTInput"]], "date (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Date"]], "datetime (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTime"]], "datetimeinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTimeInput"]], "day (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Day"]], "full (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.FULL"]], "month (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Month"]], "numeric (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC"]], "numeric_iso (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC_ISO"]], "time (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Time"]], "timedelta (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.TimeDelta"]], "__call__() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__call__"]], "__call__() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__call__"]], "__call__() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.__call__"]], "__init_subclass__() (cli_command_parser.inputs.time.calendarunitinput class method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__init_subclass__"]], "__init_subclass__() (cli_command_parser.inputs.time.dtinput class method)": [[30, "cli_command_parser.inputs.time.DTInput.__init_subclass__"]], "__init_subclass__() (cli_command_parser.inputs.time.datetimeinput class method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__init_subclass__"]], "abbreviation (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.abbreviation"]], "choice_str() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choice_str"]], "choice_str() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.choice_str"]], "choice_str() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.choice_str"]], "choices() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choices"]], "cli_command_parser.inputs.time": [[30, "module-cli_command_parser.inputs.time"]], "different_locale (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.different_locale"]], "dt_repr() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.dt_repr"]], "dt_type (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.dt_type"]], "dt_type (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.dt_type"]], "dt_type (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.dt_type"]], "dt_type (cli_command_parser.inputs.time.month attribute)": [[30, "cli_command_parser.inputs.time.Month.dt_type"]], "dt_type (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.dt_type"]], "earliest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.earliest"]], "fix_default() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.fix_default"]], "fix_default() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.fix_default"]], "format_metavar() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.format_metavar"]], "format_metavar() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.format_metavar"]], "format_metavar() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.format_metavar"]], "formats (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.formats"]], "full (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.full"]], "iso (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.iso"]], "latest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.latest"]], "locale (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.locale"]], "locale (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.locale"]], "locale (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.locale"]], "locale (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.locale"]], "locale (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.locale"]], "locale (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.locale"]], "normalize_dt() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.normalize_dt"]], "numeric (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.numeric"]], "original (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.original"]], "out_format (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_format"]], "out_locale (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_locale"]], "parse() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse"]], "parse() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse"]], "parse_dt() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse_dt"]], "parse_numeric() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse_numeric"]], "parse_numeric() (cli_command_parser.inputs.time.day method)": [[30, "cli_command_parser.inputs.time.Day.parse_numeric"]], "parse_numeric() (cli_command_parser.inputs.time.month method)": [[30, "cli_command_parser.inputs.time.Month.parse_numeric"]], "unit (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.unit"]], "any (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.ANY"]], "block (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.BLOCK"]], "character (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.CHARACTER"]], "dir (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.DIR"]], "fifo (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FIFO"]], "file (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FILE"]], "filewrapper (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.FileWrapper"]], "inputparam (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.InputParam"]], "link (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.LINK"]], "socket (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.SOCKET"]], "statmode (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.StatMode"]], "allows_write() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.allows_write"]], "cli_command_parser.inputs.utils": [[31, "module-cli_command_parser.inputs.utils"]], "close() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.close"]], "default (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.default"]], "fix_windows_path() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.fix_windows_path"]], "matches() (cli_command_parser.inputs.utils.statmode method)": [[31, "cli_command_parser.inputs.utils.StatMode.matches"]], "name (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.name"]], "read() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.read"]], "write() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.write"]], "dynamicmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.DynamicMetadata"]], "metadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.Metadata"]], "metadatabase (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.MetadataBase"]], "progfinder (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgFinder"]], "programmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgramMetadata"]], "cache_result (cli_command_parser.metadata.dynamicmetadata attribute)": [[32, "cli_command_parser.metadata.DynamicMetadata.cache_result"]], "cli_command_parser.metadata": [[32, "module-cli_command_parser.metadata"]], "cmd_module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.cmd_module"]], "command (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.command"]], "default (cli_command_parser.metadata.metadata attribute)": [[32, "cli_command_parser.metadata.Metadata.default"]], "description (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.description"]], "doc_name (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_name"]], "doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_str"]], "docs_url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.docs_url"]], "dynamic_metadata() (in module cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.dynamic_metadata"]], "email (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.email"]], "epilog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.epilog"]], "for_command() (cli_command_parser.metadata.programmetadata class method)": [[32, "cli_command_parser.metadata.ProgramMetadata.for_command"]], "format_epilog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.format_epilog"]], "func (cli_command_parser.metadata.dynamicmetadata attribute)": [[32, "cli_command_parser.metadata.DynamicMetadata.func"]], "get_description() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_description"]], "get_doc_str() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_doc_str"]], "get_prog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_prog"]], "get_value() (cli_command_parser.metadata.dynamicmetadata method)": [[32, "cli_command_parser.metadata.DynamicMetadata.get_value"]], "get_value() (cli_command_parser.metadata.metadata method)": [[32, "cli_command_parser.metadata.Metadata.get_value"]], "get_value() (cli_command_parser.metadata.metadatabase method)": [[32, "cli_command_parser.metadata.MetadataBase.get_value"]], "inheritable (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.inheritable"]], "mod_obj_prog_map (cli_command_parser.metadata.progfinder property)": [[32, "cli_command_parser.metadata.ProgFinder.mod_obj_prog_map"]], "module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.module"]], "name (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.name"]], "normalize() (cli_command_parser.metadata.progfinder method)": [[32, "cli_command_parser.metadata.ProgFinder.normalize"]], "package (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.package"]], "parent (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.parent"]], "path (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.path"]], "pkg_doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.pkg_doc_str"]], "prog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.prog"]], "url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.url"]], "usage (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.usage"]], "version (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.version"]], "nargs (class in cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.Nargs"]], "allowed (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.allowed"]], "cli_command_parser.nargs": [[33, "module-cli_command_parser.nargs"]], "has_upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.has_upper_bound"]], "max (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.max"]], "min (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.min"]], "nargs_max_sum() (in module cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.nargs_max_sum"]], "nargs_min_sum() (in module cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.nargs_min_sum"]], "range (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.range"]], "satisfied() (cli_command_parser.nargs.nargs method)": [[33, "cli_command_parser.nargs.Nargs.satisfied"]], "upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.upper_bound"]], "variable (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.variable"]], "baseoption (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.BaseOption"]], "basepositional (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.BasePositional"]], "basicactionmixin (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.BasicActionMixin"]], "parambase (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.ParamBase"]], "parameter (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.Parameter"]], "__call__() (cli_command_parser.parameters.base.parameter_action method)": [[35, "cli_command_parser.parameters.base.parameter_action.__call__"]], "__init_subclass__() (cli_command_parser.parameters.base.basepositional class method)": [[35, "cli_command_parser.parameters.base.BasePositional.__init_subclass__"]], "__init_subclass__() (cli_command_parser.parameters.base.parameter class method)": [[35, "cli_command_parser.parameters.base.Parameter.__init_subclass__"]], "accepts_none (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.accepts_none"]], "accepts_values (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.accepts_values"]], "action (cli_command_parser.parameters.base.basicactionmixin attribute)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.action"]], "allow_leading_dash (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.allow_leading_dash"]], "append() (cli_command_parser.parameters.base.basicactionmixin method)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.append"]], "can_pop_counts() (cli_command_parser.parameters.base.basicactionmixin method)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.can_pop_counts"]], "can_pop_counts() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.can_pop_counts"]], "cli_command_parser.parameters.base": [[35, "module-cli_command_parser.parameters.base"]], "command (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.command"]], "env_var (cli_command_parser.parameters.base.baseoption attribute)": [[35, "cli_command_parser.parameters.base.BaseOption.env_var"]], "env_vars() (cli_command_parser.parameters.base.baseoption method)": [[35, "cli_command_parser.parameters.base.BaseOption.env_vars"]], "format_help() (cli_command_parser.parameters.base.parambase method)": [[35, "cli_command_parser.parameters.base.ParamBase.format_help"]], "format_usage() (cli_command_parser.parameters.base.parambase method)": [[35, "cli_command_parser.parameters.base.ParamBase.format_usage"]], "formatter (cli_command_parser.parameters.base.parambase property)": [[35, "cli_command_parser.parameters.base.ParamBase.formatter"]], "get_active_param_group() (in module cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.get_active_param_group"]], "group (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.group"]], "has_choices (cli_command_parser.parameters.base.parameter property)": [[35, "cli_command_parser.parameters.base.Parameter.has_choices"]], "help (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.help"]], "hide (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.hide"]], "is_valid_arg() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.is_valid_arg"]], "metavar (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.metavar"]], "missing_hint (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.missing_hint"]], "name (cli_command_parser.parameters.base.parambase property)": [[35, "cli_command_parser.parameters.base.ParamBase.name"]], "nargs (cli_command_parser.parameters.base.basicactionmixin attribute)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.nargs"]], "nargs (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.nargs"]], "option_strs (cli_command_parser.parameters.base.baseoption attribute)": [[35, "cli_command_parser.parameters.base.BaseOption.option_strs"]], "parameter_action (class in cli_command_parser.parameters.base)": [[35, "cli_command_parser.parameters.base.parameter_action"]], "pop_last() (cli_command_parser.parameters.base.basicactionmixin method)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.pop_last"]], "pop_last() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.pop_last"]], "prepare_and_validate() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.prepare_and_validate"]], "prepare_value() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.prepare_value"]], "required (cli_command_parser.parameters.base.parambase attribute)": [[35, "cli_command_parser.parameters.base.ParamBase.required"]], "result() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.result"]], "result_value() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.result_value"]], "show_default (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.show_default"]], "show_in_help (cli_command_parser.parameters.base.parambase property)": [[35, "cli_command_parser.parameters.base.ParamBase.show_in_help"]], "show_in_help (cli_command_parser.parameters.base.parameter property)": [[35, "cli_command_parser.parameters.base.Parameter.show_in_help"]], "store() (cli_command_parser.parameters.base.basicactionmixin method)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.store"]], "take_action() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.take_action"]], "type (cli_command_parser.parameters.base.basicactionmixin attribute)": [[35, "cli_command_parser.parameters.base.BasicActionMixin.type"]], "type (cli_command_parser.parameters.base.parameter attribute)": [[35, "cli_command_parser.parameters.base.Parameter.type"]], "validate() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.validate"]], "would_accept() (cli_command_parser.parameters.base.parameter method)": [[35, "cli_command_parser.parameters.base.Parameter.would_accept"]], "action (class in cli_command_parser.parameters.choice_map)": [[36, "cli_command_parser.parameters.choice_map.Action"]], "choice (class in cli_command_parser.parameters.choice_map)": [[36, "cli_command_parser.parameters.choice_map.Choice"]], "choicemap (class in cli_command_parser.parameters.choice_map)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap"]], "subcommand (class in cli_command_parser.parameters.choice_map)": [[36, "cli_command_parser.parameters.choice_map.SubCommand"]], "__call__() (cli_command_parser.parameters.choice_map.action method)": [[36, "cli_command_parser.parameters.choice_map.Action.__call__"]], "__init_subclass__() (cli_command_parser.parameters.choice_map.choicemap class method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__"]], "append() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.append"]], "choice (cli_command_parser.parameters.choice_map.choice attribute)": [[36, "cli_command_parser.parameters.choice_map.Choice.choice"]], "choices (cli_command_parser.parameters.choice_map.choicemap attribute)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.choices"]], "cli_command_parser.parameters.choice_map": [[36, "module-cli_command_parser.parameters.choice_map"]], "description (cli_command_parser.parameters.choice_map.choicemap attribute)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.description"]], "format_help() (cli_command_parser.parameters.choice_map.choice method)": [[36, "cli_command_parser.parameters.choice_map.Choice.format_help"]], "format_usage() (cli_command_parser.parameters.choice_map.choice method)": [[36, "cli_command_parser.parameters.choice_map.Choice.format_usage"]], "has_choices (cli_command_parser.parameters.choice_map.choicemap property)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.has_choices"]], "has_local_choices (cli_command_parser.parameters.choice_map.subcommand property)": [[36, "cli_command_parser.parameters.choice_map.SubCommand.has_local_choices"]], "help (cli_command_parser.parameters.choice_map.choice attribute)": [[36, "cli_command_parser.parameters.choice_map.Choice.help"]], "local (cli_command_parser.parameters.choice_map.choice attribute)": [[36, "cli_command_parser.parameters.choice_map.Choice.local"]], "nargs (cli_command_parser.parameters.choice_map.choicemap attribute)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.nargs"]], "register() (cli_command_parser.parameters.choice_map.action method)": [[36, "cli_command_parser.parameters.choice_map.Action.register"]], "register() (cli_command_parser.parameters.choice_map.subcommand method)": [[36, "cli_command_parser.parameters.choice_map.SubCommand.register"]], "register_action() (cli_command_parser.parameters.choice_map.action method)": [[36, "cli_command_parser.parameters.choice_map.Action.register_action"]], "register_choice() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.register_choice"]], "register_command() (cli_command_parser.parameters.choice_map.subcommand method)": [[36, "cli_command_parser.parameters.choice_map.SubCommand.register_command"]], "result() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.result"]], "result_value() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.result_value"]], "show_in_help (cli_command_parser.parameters.choice_map.choicemap property)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.show_in_help"]], "target (cli_command_parser.parameters.choice_map.choice attribute)": [[36, "cli_command_parser.parameters.choice_map.Choice.target"]], "target() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.target"]], "title (cli_command_parser.parameters.choice_map.choicemap attribute)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.title"]], "validate() (cli_command_parser.parameters.choice_map.choicemap method)": [[36, "cli_command_parser.parameters.choice_map.ChoiceMap.validate"]], "paramgroup (class in cli_command_parser.parameters.groups)": [[37, "cli_command_parser.parameters.groups.ParamGroup"]], "add() (cli_command_parser.parameters.groups.paramgroup method)": [[37, "cli_command_parser.parameters.groups.ParamGroup.add"]], "cli_command_parser.parameters.groups": [[37, "module-cli_command_parser.parameters.groups"]], "contains_positional (cli_command_parser.parameters.groups.paramgroup property)": [[37, "cli_command_parser.parameters.groups.ParamGroup.contains_positional"]], "contains_required (cli_command_parser.parameters.groups.paramgroup property)": [[37, "cli_command_parser.parameters.groups.ParamGroup.contains_required"]], "description (cli_command_parser.parameters.groups.paramgroup attribute)": [[37, "cli_command_parser.parameters.groups.ParamGroup.description"]], "extend() (cli_command_parser.parameters.groups.paramgroup method)": [[37, "cli_command_parser.parameters.groups.ParamGroup.extend"]], "in_mutually_exclusive_group (cli_command_parser.parameters.groups.paramgroup property)": [[37, "cli_command_parser.parameters.groups.ParamGroup.in_mutually_exclusive_group"]], "members (cli_command_parser.parameters.groups.paramgroup attribute)": [[37, "cli_command_parser.parameters.groups.ParamGroup.members"]], "mutually_dependent (cli_command_parser.parameters.groups.paramgroup attribute)": [[37, "cli_command_parser.parameters.groups.ParamGroup.mutually_dependent"]], "mutually_exclusive (cli_command_parser.parameters.groups.paramgroup attribute)": [[37, "cli_command_parser.parameters.groups.ParamGroup.mutually_exclusive"]], "register() (cli_command_parser.parameters.groups.paramgroup method)": [[37, "cli_command_parser.parameters.groups.ParamGroup.register"]], "register_all() (cli_command_parser.parameters.groups.paramgroup method)": [[37, "cli_command_parser.parameters.groups.ParamGroup.register_all"]], "show_in_help (cli_command_parser.parameters.groups.paramgroup property)": [[37, "cli_command_parser.parameters.groups.ParamGroup.show_in_help"]], "validate() (cli_command_parser.parameters.groups.paramgroup method)": [[37, "cli_command_parser.parameters.groups.ParamGroup.validate"]], "optionstrings (class in cli_command_parser.parameters.option_strings)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings"]], "triflagoptionstrings (class in cli_command_parser.parameters.option_strings)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings"]], "add_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.add_alts"]], "all_option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.all_option_strs"]], "all_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.all_option_strs"]], "alt_allowed (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_allowed"]], "alt_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_option_strs"]], "cli_command_parser.parameters.option_strings": [[38, "module-cli_command_parser.parameters.option_strings"]], "combinable (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.combinable"]], "display_long (cli_command_parser.parameters.option_strings.optionstrings property)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.display_long"]], "display_long_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_alt"]], "display_long_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_primary"]], "get_usage_opt() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.get_usage_opt"]], "get_usage_opt() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.get_usage_opt"]], "has_long() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.has_long"]], "has_long() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_long"]], "has_min_opts() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.has_min_opts"]], "has_min_opts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_min_opts"]], "long (cli_command_parser.parameters.option_strings.optionstrings property)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.long"]], "name_mode (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.name_mode"]], "option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.option_strs"]], "option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.option_strs"]], "primary_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.primary_option_strs"]], "short (cli_command_parser.parameters.option_strings.optionstrings property)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.short"]], "short_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_alt"]], "short_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_primary"]], "update() (cli_command_parser.parameters.option_strings.optionstrings method)": [[38, "cli_command_parser.parameters.option_strings.OptionStrings.update"]], "update_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[38, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.update_alts"]], "actionflag (class in cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.ActionFlag"]], "counter (class in cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.Counter"]], "flag (class in cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.Flag"]], "option (class in cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.Option"]], "triflag (class in cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.TriFlag"]], "__call__() (cli_command_parser.parameters.options.actionflag method)": [[39, "cli_command_parser.parameters.options.ActionFlag.__call__"]], "accepts_none (cli_command_parser.parameters.options.counter attribute)": [[39, "cli_command_parser.parameters.options.Counter.accepts_none"]], "accepts_none (cli_command_parser.parameters.options.flag attribute)": [[39, "cli_command_parser.parameters.options.Flag.accepts_none"]], "accepts_none (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.accepts_none"]], "accepts_values (cli_command_parser.parameters.options.counter attribute)": [[39, "cli_command_parser.parameters.options.Counter.accepts_values"]], "accepts_values (cli_command_parser.parameters.options.flag attribute)": [[39, "cli_command_parser.parameters.options.Flag.accepts_values"]], "accepts_values (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.accepts_values"]], "action_flag (in module cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.action_flag"]], "after_main() (in module cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.after_main"]], "alt_help (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.alt_help"]], "append() (cli_command_parser.parameters.options.counter method)": [[39, "cli_command_parser.parameters.options.Counter.append"]], "append_const() (cli_command_parser.parameters.options.flag method)": [[39, "cli_command_parser.parameters.options.Flag.append_const"]], "before_main() (in module cli_command_parser.parameters.options)": [[39, "cli_command_parser.parameters.options.before_main"]], "cli_command_parser.parameters.options": [[39, "module-cli_command_parser.parameters.options"]], "const (cli_command_parser.parameters.options.flag attribute)": [[39, "cli_command_parser.parameters.options.Flag.const"]], "consts (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.consts"]], "default (cli_command_parser.parameters.options.flag attribute)": [[39, "cli_command_parser.parameters.options.Flag.default"]], "default (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.default"]], "func (cli_command_parser.parameters.options.actionflag property)": [[39, "cli_command_parser.parameters.options.ActionFlag.func"]], "nargs (cli_command_parser.parameters.options.counter attribute)": [[39, "cli_command_parser.parameters.options.Counter.nargs"]], "option_strs (cli_command_parser.parameters.options.triflag attribute)": [[39, "cli_command_parser.parameters.options.TriFlag.option_strs"]], "prepare_value() (cli_command_parser.parameters.options.counter method)": [[39, "cli_command_parser.parameters.options.Counter.prepare_value"]], "result() (cli_command_parser.parameters.options.actionflag method)": [[39, "cli_command_parser.parameters.options.ActionFlag.result"]], "result() (cli_command_parser.parameters.options.counter method)": [[39, "cli_command_parser.parameters.options.Counter.result"]], "result_value() (cli_command_parser.parameters.options.counter method)": [[39, "cli_command_parser.parameters.options.Counter.result_value"]], "store_const() (cli_command_parser.parameters.options.flag method)": [[39, "cli_command_parser.parameters.options.Flag.store_const"]], "store_const() (cli_command_parser.parameters.options.triflag method)": [[39, "cli_command_parser.parameters.options.TriFlag.store_const"]], "take_action() (cli_command_parser.parameters.options.triflag method)": [[39, "cli_command_parser.parameters.options.TriFlag.take_action"]], "take_env_var_action() (cli_command_parser.parameters.options.flag method)": [[39, "cli_command_parser.parameters.options.Flag.take_env_var_action"]], "take_env_var_action() (cli_command_parser.parameters.options.triflag method)": [[39, "cli_command_parser.parameters.options.TriFlag.take_env_var_action"]], "type (cli_command_parser.parameters.options.counter attribute)": [[39, "cli_command_parser.parameters.options.Counter.type"]], "validate() (cli_command_parser.parameters.options.counter method)": [[39, "cli_command_parser.parameters.options.Counter.validate"]], "passthru (class in cli_command_parser.parameters.pass_thru)": [[40, "cli_command_parser.parameters.pass_thru.PassThru"]], "cli_command_parser.parameters.pass_thru": [[40, "module-cli_command_parser.parameters.pass_thru"]], "missing_hint (cli_command_parser.parameters.pass_thru.passthru attribute)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.missing_hint"]], "nargs (cli_command_parser.parameters.pass_thru.passthru attribute)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.nargs"]], "result() (cli_command_parser.parameters.pass_thru.passthru method)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.result"]], "result_value() (cli_command_parser.parameters.pass_thru.passthru method)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.result_value"]], "store_all() (cli_command_parser.parameters.pass_thru.passthru method)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.store_all"]], "take_action() (cli_command_parser.parameters.pass_thru.passthru method)": [[40, "cli_command_parser.parameters.pass_thru.PassThru.take_action"]], "positional (class in cli_command_parser.parameters.positionals)": [[41, "cli_command_parser.parameters.positionals.Positional"]], "cli_command_parser.parameters.positionals": [[41, "module-cli_command_parser.parameters.positionals"]], "anyword (class in cli_command_parser.parse_tree)": [[42, "cli_command_parser.parse_tree.AnyWord"]], "posnode (class in cli_command_parser.parse_tree)": [[42, "cli_command_parser.parse_tree.PosNode"]], "any_node (cli_command_parser.parse_tree.posnode property)": [[42, "cli_command_parser.parse_tree.PosNode.any_node"]], "any_word (cli_command_parser.parse_tree.posnode property)": [[42, "cli_command_parser.parse_tree.PosNode.any_word"]], "build_tree() (cli_command_parser.parse_tree.posnode class method)": [[42, "cli_command_parser.parse_tree.PosNode.build_tree"]], "cli_command_parser.parse_tree": [[42, "module-cli_command_parser.parse_tree"]], "has_any() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.has_any"]], "link_params() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.link_params"]], "links (cli_command_parser.parse_tree.posnode attribute)": [[42, "cli_command_parser.parse_tree.PosNode.links"]], "n (cli_command_parser.parse_tree.anyword attribute)": [[42, "cli_command_parser.parse_tree.AnyWord.n"]], "nargs (cli_command_parser.parse_tree.anyword attribute)": [[42, "cli_command_parser.parse_tree.AnyWord.nargs"]], "nargs_max() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.nargs_max"]], "nargs_min() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.nargs_min"]], "param (cli_command_parser.parse_tree.posnode attribute)": [[42, "cli_command_parser.parse_tree.PosNode.param"]], "parent (cli_command_parser.parse_tree.posnode attribute)": [[42, "cli_command_parser.parse_tree.PosNode.parent"]], "path_repr() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.path_repr"]], "print_tree() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.print_tree"]], "process_param() (in module cli_command_parser.parse_tree)": [[42, "cli_command_parser.parse_tree.process_param"]], "process_params() (in module cli_command_parser.parse_tree)": [[42, "cli_command_parser.parse_tree.process_params"]], "raw_path (cli_command_parser.parse_tree.posnode property)": [[42, "cli_command_parser.parse_tree.PosNode.raw_path"]], "remaining (cli_command_parser.parse_tree.anyword attribute)": [[42, "cli_command_parser.parse_tree.AnyWord.remaining"]], "target (cli_command_parser.parse_tree.posnode attribute)": [[42, "cli_command_parser.parse_tree.PosNode.target"]], "update_node() (cli_command_parser.parse_tree.posnode method)": [[42, "cli_command_parser.parse_tree.PosNode.update_node"]], "word (cli_command_parser.parse_tree.posnode attribute)": [[42, "cli_command_parser.parse_tree.PosNode.word"]], "commandparser (class in cli_command_parser.parser)": [[43, "cli_command_parser.parser.CommandParser"]], "arg_deque (cli_command_parser.parser.commandparser attribute)": [[43, "cli_command_parser.parser.CommandParser.arg_deque"]], "cli_command_parser.parser": [[43, "module-cli_command_parser.parser"]], "config (cli_command_parser.parser.commandparser attribute)": [[43, "cli_command_parser.parser.CommandParser.config"]], "consume_values() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.consume_values"]], "deferred (cli_command_parser.parser.commandparser attribute)": [[43, "cli_command_parser.parser.CommandParser.deferred"]], "get_next_cmd() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.get_next_cmd"]], "handle_long() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.handle_long"]], "handle_pass_thru() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.handle_pass_thru"]], "handle_positional() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.handle_positional"]], "handle_remainder() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.handle_remainder"]], "handle_short() (cli_command_parser.parser.commandparser method)": [[43, "cli_command_parser.parser.CommandParser.handle_short"]], "params (cli_command_parser.parser.commandparser attribute)": [[43, "cli_command_parser.parser.CommandParser.params"]], "parse_args_and_get_next_cmd() (cli_command_parser.parser.commandparser class method)": [[43, "cli_command_parser.parser.CommandParser.parse_args_and_get_next_cmd"]], "positionals (cli_command_parser.parser.commandparser attribute)": [[43, "cli_command_parser.parser.CommandParser.positionals"]], "parsertest (class in cli_command_parser.testing)": [[44, "cli_command_parser.testing.ParserTest"]], "redirectstreams (class in cli_command_parser.testing)": [[44, "cli_command_parser.testing.RedirectStreams"]], "temporarydir (class in cli_command_parser.testing)": [[44, "cli_command_parser.testing.TemporaryDir"]], "assert_argv_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_argv_parse_fails_cases"]], "assert_call_fails() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_call_fails"]], "assert_call_fails_cases() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_call_fails_cases"]], "assert_dict_equal() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_dict_equal"]], "assert_env_parse_results() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_env_parse_results"]], "assert_env_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_env_parse_results_cases"]], "assert_parse_fails() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_parse_fails"]], "assert_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_parse_fails_cases"]], "assert_parse_results() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_parse_results"]], "assert_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_parse_results_cases"]], "assert_str_contains() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_str_contains"]], "assert_str_starts_with_line() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_str_starts_with_line"]], "assert_strings_equal() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.assert_strings_equal"]], "cli_command_parser.testing": [[44, "module-cli_command_parser.testing"]], "env_vars() (cli_command_parser.testing.parsertest method)": [[44, "cli_command_parser.testing.ParserTest.env_vars"]], "format_dict_diff() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.format_dict_diff"]], "format_diff() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.format_diff"]], "get_help_text() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.get_help_text"]], "get_rst_text() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.get_rst_text"]], "get_usage_text() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.get_usage_text"]], "load_command() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.load_command"]], "sealed_mock() (in module cli_command_parser.testing)": [[44, "cli_command_parser.testing.sealed_mock"]], "stderr (cli_command_parser.testing.redirectstreams property)": [[44, "cli_command_parser.testing.RedirectStreams.stderr"]], "stdout (cli_command_parser.testing.redirectstreams property)": [[44, "cli_command_parser.testing.RedirectStreams.stdout"]], "cli_command_parser.typing": [[45, "module-cli_command_parser.typing"]], "cli (cli_command_parser.utils.valuesource attribute)": [[46, "cli_command_parser.utils.ValueSource.CLI"]], "env (cli_command_parser.utils.valuesource attribute)": [[46, "cli_command_parser.utils.ValueSource.ENV"]], "fixedflag (class in cli_command_parser.utils)": [[46, "cli_command_parser.utils.FixedFlag"]], "fixedflagmeta (class in cli_command_parser.utils)": [[46, "cli_command_parser.utils.FixedFlagMeta"]], "missingmixin (class in cli_command_parser.utils)": [[46, "cli_command_parser.utils.MissingMixin"]], "terminal (class in cli_command_parser.utils)": [[46, "cli_command_parser.utils.Terminal"]], "valuesource (class in cli_command_parser.utils)": [[46, "cli_command_parser.utils.ValueSource"]], "camel_to_snake_case() (in module cli_command_parser.utils)": [[46, "cli_command_parser.utils.camel_to_snake_case"]], "cli_command_parser.utils": [[46, "module-cli_command_parser.utils"]], "positive_int() (in module cli_command_parser.utils)": [[46, "cli_command_parser.utils.positive_int"]], "short_repr() (in module cli_command_parser.utils)": [[46, "cli_command_parser.utils.short_repr"]], "str_to_bool() (in module cli_command_parser.utils)": [[46, "cli_command_parser.utils.str_to_bool"]], "width (cli_command_parser.utils.terminal property)": [[46, "cli_command_parser.utils.Terminal.width"]], "pep 484": [[68, "index-0"]], "python enhancement proposals": [[68, "index-0"]]}})