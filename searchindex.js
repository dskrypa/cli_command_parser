Search.setIndex({"docnames": ["advanced", "api", "api/cli_command_parser.actions", "api/cli_command_parser.annotations", "api/cli_command_parser.command_parameters", "api/cli_command_parser.commands", "api/cli_command_parser.config", "api/cli_command_parser.context", "api/cli_command_parser.conversion", "api/cli_command_parser.conversion.argparse_ast", "api/cli_command_parser.conversion.argparse_utils", "api/cli_command_parser.conversion.command_builder", "api/cli_command_parser.conversion.utils", "api/cli_command_parser.conversion.visitor", "api/cli_command_parser.core", "api/cli_command_parser.documentation", "api/cli_command_parser.error_handling", "api/cli_command_parser.exceptions", "api/cli_command_parser.formatting", "api/cli_command_parser.formatting.commands", "api/cli_command_parser.formatting.params", "api/cli_command_parser.formatting.restructured_text", "api/cli_command_parser.formatting.utils", "api/cli_command_parser.inputs", "api/cli_command_parser.inputs.base", "api/cli_command_parser.inputs.choices", "api/cli_command_parser.inputs.exceptions", "api/cli_command_parser.inputs.files", "api/cli_command_parser.inputs.numeric", "api/cli_command_parser.inputs.patterns", "api/cli_command_parser.inputs.time", "api/cli_command_parser.inputs.utils", "api/cli_command_parser.metadata", "api/cli_command_parser.nargs", "api/cli_command_parser.parameters", "api/cli_command_parser.parameters.actions", "api/cli_command_parser.parameters.base", "api/cli_command_parser.parameters.choice_map", "api/cli_command_parser.parameters.groups", "api/cli_command_parser.parameters.option_strings", "api/cli_command_parser.parameters.options", "api/cli_command_parser.parameters.pass_thru", "api/cli_command_parser.parameters.positionals", "api/cli_command_parser.parse_tree", "api/cli_command_parser.parser", "api/cli_command_parser.testing", "api/cli_command_parser.typing", "api/cli_command_parser.utils", "commands", "configuration", "documentation", "error_handlers", "examples", "examples/action_with_args", "examples/advanced_subcommand", "examples/basic_subcommand", "examples/command_wrapper", "examples/complex", "examples/custom_inputs", "examples/echo", "examples/grouped_action_flags", "examples/hello_world", "examples/rest_api_wrapper", "examples/shared_logging_init", "examples/simple_flags", "groups", "index", "inputs", "intro", "parameters", "subcommands", "testing"], "filenames": ["advanced.rst", "api.rst", "api/cli_command_parser.actions.rst", "api/cli_command_parser.annotations.rst", "api/cli_command_parser.command_parameters.rst", "api/cli_command_parser.commands.rst", "api/cli_command_parser.config.rst", "api/cli_command_parser.context.rst", "api/cli_command_parser.conversion.rst", "api/cli_command_parser.conversion.argparse_ast.rst", "api/cli_command_parser.conversion.argparse_utils.rst", "api/cli_command_parser.conversion.command_builder.rst", "api/cli_command_parser.conversion.utils.rst", "api/cli_command_parser.conversion.visitor.rst", "api/cli_command_parser.core.rst", "api/cli_command_parser.documentation.rst", "api/cli_command_parser.error_handling.rst", "api/cli_command_parser.exceptions.rst", "api/cli_command_parser.formatting.rst", "api/cli_command_parser.formatting.commands.rst", "api/cli_command_parser.formatting.params.rst", "api/cli_command_parser.formatting.restructured_text.rst", "api/cli_command_parser.formatting.utils.rst", "api/cli_command_parser.inputs.rst", "api/cli_command_parser.inputs.base.rst", "api/cli_command_parser.inputs.choices.rst", "api/cli_command_parser.inputs.exceptions.rst", "api/cli_command_parser.inputs.files.rst", "api/cli_command_parser.inputs.numeric.rst", "api/cli_command_parser.inputs.patterns.rst", "api/cli_command_parser.inputs.time.rst", "api/cli_command_parser.inputs.utils.rst", "api/cli_command_parser.metadata.rst", "api/cli_command_parser.nargs.rst", "api/cli_command_parser.parameters.rst", "api/cli_command_parser.parameters.actions.rst", "api/cli_command_parser.parameters.base.rst", "api/cli_command_parser.parameters.choice_map.rst", "api/cli_command_parser.parameters.groups.rst", "api/cli_command_parser.parameters.option_strings.rst", "api/cli_command_parser.parameters.options.rst", "api/cli_command_parser.parameters.pass_thru.rst", "api/cli_command_parser.parameters.positionals.rst", "api/cli_command_parser.parse_tree.rst", "api/cli_command_parser.parser.rst", "api/cli_command_parser.testing.rst", "api/cli_command_parser.typing.rst", "api/cli_command_parser.utils.rst", "commands.rst", "configuration.rst", "documentation.rst", "error_handlers.rst", "examples.rst", "examples/action_with_args.rst", "examples/advanced_subcommand.rst", "examples/basic_subcommand.rst", "examples/command_wrapper.rst", "examples/complex.rst", "examples/custom_inputs.rst", "examples/echo.rst", "examples/grouped_action_flags.rst", "examples/hello_world.rst", "examples/rest_api_wrapper.rst", "examples/shared_logging_init.rst", "examples/simple_flags.rst", "groups.rst", "index.rst", "inputs.rst", "intro.rst", "parameters.rst", "subcommands.rst", "testing.rst"], "titles": ["Advanced Usage", "API Documentation", "Actions Module", "Annotations Module", "Command_Parameters Module", "Commands Module", "Config Module", "Context Module", "Conversion Package", "Argparse_Ast Module", "Argparse_Utils Module", "Command_Builder Module", "Utils Module", "Visitor Module", "Core Module", "Documentation Module", "Error_Handling Module", "Exceptions Module", "Formatting Package", "Commands Module", "Params Module", "Restructured_Text Module", "Utils Module", "Inputs Package", "Base Module", "Choices Module", "Exceptions Module", "Files Module", "Numeric Module", "Patterns Module", "Time Module", "Utils Module", "Metadata Module", "Nargs Module", "Parameters Package", "Actions Module", "Base Module", "Choice_Map Module", "Groups Module", "Option_Strings Module", "Options Module", "Pass_Thru Module", "Positionals Module", "Parse_Tree Module", "Parser Module", "Testing Module", "Typing Module", "Utils Module", "Commands", "Configuration", "Documentation", "Error Handling", "Example Scripts", "Action With Args", "Advanced Subcommand", "Basic Subcommand", "Command Wrapper", "Complex Example", "Custom Inputs", "Echo", "Grouped Action Flags", "Hello World", "Rest Api Wrapper", "Shared Logging Init", "Simple Flags", "Parameter Groups", "CLI Command Parser", "Input Types", "Getting Started", "Parameters", "Subcommands", "Testing Commands"], "terms": {"while": [0, 7, 15, 17, 37, 40, 48, 66, 69, 70], "command": [0, 1, 4, 6, 7, 9, 14, 15, 16, 17, 18, 32, 34, 36, 37, 40, 42, 43, 45, 50, 51, 52, 57, 61, 65, 67, 68, 69, 70], "ar": [0, 4, 5, 6, 7, 14, 15, 20, 25, 27, 28, 29, 30, 33, 36, 37, 38, 40, 42, 48, 49, 50, 51, 57, 65, 66, 67, 68, 69, 70, 71], "intend": [0, 5, 7, 20, 38, 40, 48, 57, 69], "self": [0, 2, 16, 48, 65, 66, 67, 68, 69, 70, 71], "contain": [0, 6, 7, 9, 14, 15, 17, 20, 21, 29, 37, 39, 40, 42, 45, 49, 50, 51, 58, 65, 67, 68, 69, 70], "i": [0, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 57, 62, 65, 66, 67, 68, 69, 70, 71], "possibl": [0, 9, 14, 37, 49, 50, 65, 68, 69, 70, 71], "interact": 0, "them": [0, 15, 20, 28, 37, 41, 48, 51, 57, 62, 65, 67, 69, 70, 71], "after": [0, 4, 5, 6, 7, 16, 38, 40, 48, 49, 68, 69], "call": [0, 5, 6, 7, 9, 11, 13, 14, 15, 16, 20, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 42, 45, 48, 49, 51, 67, 68, 69, 70, 71], "parse_and_run": [0, 1, 5, 48, 70, 71], "which": [0, 5, 6, 7, 14, 15, 27, 28, 30, 35, 37, 40, 42, 45, 48, 49, 51, 56, 65, 67, 69, 70], "return": [0, 5, 6, 7, 14, 15, 20, 21, 24, 27, 28, 29, 30, 33, 35, 37, 38, 39, 40, 42, 44, 48, 49, 51, 67, 69, 70], "instanc": [0, 5, 7, 32, 49, 51], "execut": [0, 7, 35, 37, 40, 69, 70, 71], "exampl": [0, 27, 48, 50, 51, 61, 67, 68, 69, 70, 71], "class": [0, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "foo": [0, 6, 36, 40, 48, 50, 51, 52, 64, 65, 68, 69, 70], "bar": [0, 6, 18, 21, 40, 48, 52, 64, 65, 69, 70], "flag": [0, 1, 4, 6, 7, 29, 34, 35, 36, 40, 42, 47, 48, 49, 52, 65, 67, 68, 70], "b": [0, 45, 48, 60, 62, 64, 65, 67, 69, 70, 71], "default": [0, 1, 5, 6, 7, 8, 9, 11, 14, 15, 16, 20, 21, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 48, 49, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "true": [0, 5, 6, 7, 9, 10, 11, 13, 14, 15, 19, 20, 21, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 48, 49, 50, 51, 64, 65, 67, 69], "baz": [0, 48, 52, 65, 69, 70], "posit": [0, 1, 4, 5, 6, 10, 14, 34, 36, 37, 40, 44, 47, 48, 49, 53, 54, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70], "narg": [0, 1, 6, 7, 8, 11, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 65, 69, 70], "def": [0, 48, 50, 51, 65, 66, 67, 68, 69, 70, 71], "main": [0, 1, 4, 5, 6, 14, 40, 49, 57, 65, 66, 67, 68, 69, 70, 71], "print": [0, 2, 9, 16, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 65, 66, 67, 68, 69, 70, 71], "f": [0, 48, 50, 51, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71], "test": [0, 1, 14, 48, 65, 66], "one": [0, 4, 5, 6, 9, 15, 17, 20, 25, 26, 28, 29, 33, 36, 38, 40, 48, 50, 65, 67, 68, 69, 70], "fals": [0, 5, 6, 7, 9, 10, 11, 14, 15, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 65, 67, 69, 71], "__main__": [0, 48, 66, 68, 70], "0x26dfcad6e00": 0, "still": [0, 15, 24, 28, 35, 49, 71], "thei": [0, 5, 6, 7, 14, 20, 28, 33, 36, 37, 38, 48, 49, 57, 65, 67, 68, 69, 70, 71], "were": [0, 5, 6, 7, 17, 20, 35, 36, 39, 44, 48, 49, 51, 65, 66, 67, 68, 69], "from": [0, 3, 6, 7, 9, 14, 15, 20, 29, 30, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "insid": [0, 38, 51, 65, 66, 68, 69], "also": [0, 4, 33, 37, 38, 40, 48, 49, 50, 65, 67, 68, 69, 70, 71], "": [0, 4, 5, 6, 7, 14, 16, 17, 20, 26, 33, 35, 36, 37, 40, 45, 48, 49, 51, 57, 64, 65, 66, 68, 69, 70, 71], "easier": [0, 7, 10], "inspect": [0, 49], "an": [0, 4, 6, 7, 9, 14, 15, 16, 17, 20, 21, 25, 28, 30, 36, 37, 38, 40, 42, 48, 49, 50, 51, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71], "termin": [0, 1, 6, 7, 16, 20, 47, 49, 50], "ctx": [0, 1, 4, 5, 7, 44, 48], "lib": 0, "cli_command_pars": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 66, 67, 68, 70, 71], "0x26dfa94fbb0": 0, "param": [0, 1, 6, 7, 14, 15, 17, 18, 19, 34, 35, 36, 38, 39, 41, 43, 44, 49, 69, 70], "commandparamet": [0, 1, 4, 6, 7, 14, 19, 44, 49], "1": [0, 6, 7, 15, 19, 21, 28, 29, 30, 31, 35, 40, 42, 43, 47, 48, 50, 51, 58, 61, 65, 66, 67, 68, 69, 70, 71], "option": [0, 1, 4, 6, 7, 9, 14, 15, 16, 17, 21, 28, 34, 35, 36, 39, 42, 43, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "2": [0, 6, 7, 16, 22, 31, 40, 48, 49, 58, 65, 67, 69, 70, 71], "get_pars": [0, 1, 7, 71], "help": [0, 2, 4, 5, 6, 8, 9, 10, 11, 14, 15, 19, 20, 22, 32, 34, 36, 37, 38, 40, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71], "argv": [0, 5, 7, 9, 14, 45, 48, 49, 68], "The": [0, 2, 4, 5, 6, 7, 9, 11, 14, 15, 16, 20, 21, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 44, 48, 49, 50, 51, 53, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71], "object": [0, 4, 6, 7, 9, 11, 13, 14, 15, 16, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 47, 48, 49, 51, 62, 65, 67, 69, 70], "store": [0, 1, 5, 7, 24, 25, 27, 28, 34, 35, 36, 37, 38, 40, 42, 49, 67, 69, 70], "inform": [0, 68, 69], "about": [0, 16, 29, 48, 67, 68], "configur": [0, 4, 5, 6, 7, 20, 36, 40, 48, 50, 67, 69], "defin": [0, 4, 5, 6, 14, 15, 16, 17, 26, 35, 36, 37, 38, 39, 40, 42, 49, 50, 57, 65, 66, 67, 68, 69, 70, 71], "organ": [0, 48, 65, 66, 70], "input": [0, 1, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 44, 52, 66, 69, 71], "entri": [0, 5, 20, 21, 48, 51, 57, 70], "abov": [0, 5, 15, 21, 33, 40, 48, 50, 66, 67, 68, 70, 71], "automat": [0, 6, 10, 28, 29, 36, 37, 40, 48, 49, 50, 51, 66, 67, 68, 69], "ad": [0, 6, 14, 36, 40, 49, 50, 51, 65, 66, 67, 68, 69], "repres": [0, 6, 8, 9, 21, 29, 35, 36, 48, 67, 69], "action_flag": [0, 1, 4, 5, 6, 14, 34, 40, 48, 49], "store_const": [0, 35, 40, 69], "const": [0, 8, 11, 34, 35, 36, 40, 69], "requir": [0, 6, 8, 9, 10, 11, 14, 17, 20, 25, 33, 34, 36, 37, 38, 39, 40, 42, 48, 49, 65, 66, 67, 69], "show": [0, 1, 6, 15, 17, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70], "thi": [0, 4, 5, 6, 7, 9, 11, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "messag": [0, 1, 9, 14, 17, 30, 36, 38, 40, 45, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "exit": [0, 1, 2, 9, 16, 17, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71], "order": [0, 5, 21, 36, 38, 40, 48, 50, 65, 69], "inf": [0, 40, 69], "before_main": [0, 1, 4, 5, 7, 34, 40, 48, 50, 65, 69], "0": [0, 7, 9, 11, 14, 17, 20, 22, 30, 35, 37, 40, 42, 43, 44, 47, 49, 51, 54, 57, 58, 62, 63, 65, 67, 69, 70, 71], "func": [0, 1, 8, 9, 13, 32, 34, 40, 45, 47, 69], "function": [0, 5, 7, 9, 14, 15, 16, 27, 31, 37, 40, 42, 47, 48, 51, 66, 67, 68, 69, 70], "help_act": [0, 1, 2], "gener": [0, 5, 6, 9, 11, 14, 15, 19, 20, 24, 29, 36, 37, 40, 48, 66, 67, 68, 69, 70], "avoid": [0, 16, 45, 48, 65, 68, 70], "potenti": [0, 6, 17, 48, 49], "conflict": [0, 4, 9, 48, 65, 68, 70], "other": [0, 5, 6, 15, 17, 20, 28, 30, 36, 37, 38, 40, 41, 48, 50, 51, 64, 65, 68, 70, 71], "method": [0, 5, 6, 7, 9, 11, 14, 20, 30, 35, 36, 37, 38, 40, 42, 45, 49, 51, 66, 67, 68, 69, 70, 71], "It": [0, 4, 7, 9, 11, 14, 20, 35, 36, 37, 40, 49, 50, 65, 66, 69, 70, 71], "alwai": [0, 1, 4, 6, 14, 36, 40, 42, 49, 65, 69], "have": [0, 4, 5, 6, 15, 20, 28, 33, 36, 38, 39, 40, 42, 48, 51, 65, 67, 69, 70], "same": [0, 6, 16, 20, 33, 36, 37, 40, 42, 47, 48, 49, 50, 65, 67, 69, 70, 71], "number": [0, 5, 6, 7, 33, 35, 37, 39, 40, 42, 44, 48, 49, 50, 51, 57, 58, 61, 62, 66, 67, 68, 69, 70, 71], "sinc": [0, 28, 48, 49, 65, 67, 69, 70], "its": [0, 4, 5, 19, 21, 27, 48, 51, 65, 67, 68, 69, 70], "neg": [0, 40, 42, 67, 69], "infin": 0, "take": [0, 15, 17, 36, 37, 40, 41, 42, 48, 49, 50, 51, 57, 62, 65, 69, 70], "preced": [0, 35, 36, 40, 41, 42, 49, 50, 69], "over": [0, 36, 50, 69, 70], "ani": [0, 1, 4, 5, 6, 7, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 49, 50, 51, 57, 61, 65, 67, 68, 69, 70, 71], "There": [0, 48, 51, 66], "special": [0, 48, 66, 69, 71], "handl": [0, 5, 6, 7, 9, 14, 16, 22, 27, 28, 30, 31, 33, 36, 37, 40, 44, 48, 66, 67, 68, 69, 70, 71], "parser": [0, 1, 5, 7, 8, 9, 11, 17, 36, 48, 49, 61, 65, 68, 69], "specif": [0, 16, 27, 29, 33, 40, 42, 48, 51, 67, 69, 70], "allow": [0, 1, 5, 6, 7, 9, 14, 15, 21, 25, 27, 28, 30, 33, 37, 38, 40, 42, 48, 49, 65, 66, 67, 69], "process": [0, 4, 5, 16, 20, 24, 25, 27, 28, 29, 30, 35, 36, 41, 48, 67, 69, 70], "when": [0, 4, 5, 6, 7, 9, 11, 14, 15, 17, 20, 24, 26, 27, 28, 29, 31, 35, 36, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "would": [0, 6, 7, 15, 17, 22, 24, 28, 40, 48, 49, 51, 57, 62, 65, 67, 68, 69, 70, 71], "otherwis": [0, 15, 27, 28, 33, 36, 38, 40, 42, 48, 65, 67, 69], "fail": [0, 4, 26, 36, 40, 69], "A": [0, 4, 5, 6, 7, 9, 14, 15, 20, 24, 25, 28, 36, 38, 40, 42, 48, 49, 57, 65, 67, 69, 70, 71], "helper": [0, 7, 10, 15, 33, 36, 45, 50, 67, 69], "exist": [0, 7, 15, 23, 27, 31, 48, 49, 67, 69, 70], "retriev": [0, 7], "without": [0, 5, 6, 36, 37, 38, 41, 48, 51, 67, 68, 69, 70, 71], "need": [0, 5, 27, 29, 30, 37, 48, 50, 51, 65, 66, 67, 68, 69, 70, 71], "deal": 0, "attribut": [0, 4, 6, 13, 36, 49, 68, 69, 71], "like": [0, 3, 5, 6, 16, 20, 28, 29, 30, 36, 40, 49, 50, 57, 65, 67, 69], "continu": [0, 5], "work": [0, 5, 38, 47, 48, 51, 71], "even": [0, 4, 5, 6, 14, 40, 49, 62, 66, 68, 69, 70], "given": [0, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 25, 27, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 44, 45, 49, 50, 51, 56, 65, 67, 69, 70], "overrid": [0, 5, 6, 7, 14, 36, 40, 51, 69, 71], "differ": [0, 20, 33, 37, 40, 49, 50, 51, 69, 70], "us": [0, 4, 5, 6, 7, 9, 10, 14, 15, 17, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 42, 44, 47, 49, 50, 51, 57, 61, 65, 66, 67, 68, 69, 70, 71], "As": [0, 5], "conveni": [0, 5, 36, 45, 48, 49, 67, 70], "accept": [0, 6, 7, 24, 25, 27, 28, 33, 35, 37, 40, 42, 49, 65, 67, 69], "collect": [0, 4, 6, 7, 9, 13, 15, 17, 25, 26, 29, 30, 33, 36, 37, 39, 41, 67, 69, 70], "abc": [0, 5, 11, 14, 15, 24, 27, 28, 29, 30, 35, 36, 38, 40, 65, 70], "callabl": [0, 6, 7, 9, 13, 16, 20, 27, 28, 32, 35, 36, 37, 40, 42, 45, 47, 49, 67, 69], "filter": [0, 7, 15, 62, 65], "dict": [0, 6, 7, 9, 13, 14, 15, 16, 20, 21, 23, 25, 29, 32, 37, 43, 45, 49, 67, 71], "onli": [0, 5, 6, 7, 15, 17, 20, 21, 27, 28, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 49, 51, 62, 65, 67, 68, 69, 70], "kei": [0, 7, 15, 21, 25, 36, 67, 69], "match": [0, 6, 7, 17, 23, 25, 26, 27, 29, 31, 33, 40, 45, 49, 51, 62, 67, 69, 70], "signatur": [0, 7, 8, 9, 10, 48], "var_keyword": [0, 7], "e": [0, 7, 16, 29, 36, 37, 38, 40, 48, 62, 65, 67, 69, 70], "kwarg": [0, 5, 6, 7, 9, 11, 14, 15, 20, 21, 25, 27, 30, 32, 35, 36, 37, 40, 41, 42, 45, 47, 49], "exclud": [0, 4, 7], "cannot": [0, 7, 15, 25, 38, 49, 65, 67, 69], "pass": [0, 5, 7, 15, 21, 27, 28, 36, 37, 40, 41, 42, 44, 49, 51, 67, 68, 69], "keyword": [0, 5, 6, 7, 9, 10, 15, 21, 27, 36, 37, 40, 41, 42, 48, 49, 51, 69, 70], "must": [0, 5, 6, 7, 25, 27, 29, 33, 36, 37, 38, 40, 41, 42, 48, 49, 65, 67, 69, 70], "In": [0, 5, 50, 51, 65, 67, 70], "some": [0, 4, 14, 30, 31, 48, 49, 50, 66, 67, 69, 70, 71], "case": [0, 5, 14, 15, 17, 25, 29, 31, 33, 35, 37, 38, 40, 45, 48, 49, 51, 57, 65, 67, 69, 70, 71], "subcommand": [0, 1, 4, 5, 6, 14, 15, 16, 19, 20, 34, 36, 37, 38, 48, 49, 50, 52, 65, 66], "mai": [0, 5, 6, 9, 11, 14, 15, 20, 24, 28, 29, 30, 35, 36, 37, 40, 42, 48, 49, 51, 65, 67, 68, 69, 70, 71], "those": [0, 5, 7, 15, 40, 48, 67, 69, 70], "parent": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 23, 27, 31, 32, 37, 43, 48, 67, 70], "common": [0, 2, 5, 7, 48, 51, 57, 62, 65, 66, 67, 69], "occur": [0, 5, 9], "multipl": [0, 5, 6, 14, 17, 30, 36, 48, 49, 54, 57, 62, 63, 65, 67, 68, 69, 70], "level": [0, 6, 14, 15, 21, 38, 48, 49, 65, 66, 69, 70], "where": [0, 6, 9, 21, 24, 25, 28, 29, 35, 37, 38, 51, 67, 69, 70], "each": [0, 6, 14, 15, 20, 21, 48, 49, 53, 65, 66, 67, 68, 69, 70], "ha": [0, 4, 7, 16, 33, 48, 65, 67, 68, 70, 71], "sub_cmd": [0, 48, 65, 70], "sometim": [0, 71], "necessari": [0, 5, 6, 7, 14, 22, 24, 29, 36, 37, 45, 48, 49, 66, 67], "know": 0, "get_raw_arg": [0, 1, 7], "simplifi": [0, 9, 45, 57, 69, 70], "follow": [0, 5, 6, 9, 14, 20, 36, 49, 50, 57, 65, 66, 67, 68, 69, 70], "we": [0, 48, 50, 65, 67, 68, 70, 71], "can": [0, 5, 6, 7, 9, 15, 35, 37, 40, 48, 49, 50, 51, 54, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71], "see": [0, 21, 27, 29, 40, 42, 48, 49, 50, 65, 67, 68, 69, 70, 71], "directli": [0, 36, 37, 48, 51, 67, 69, 71], "result": [0, 5, 6, 7, 15, 17, 27, 29, 30, 34, 36, 37, 40, 48, 49, 50, 51, 62, 63, 65, 67, 68, 69, 70, 71], "cmd": [0, 45, 71], "both": [0, 1, 6, 14, 20, 27, 40, 42, 49, 65, 67, 69, 70, 71], "note": [0, 6, 70], "list": [0, 4, 5, 7, 9, 11, 12, 14, 15, 20, 21, 35, 36, 37, 38, 39, 40, 42, 44, 48, 67, 68, 69], "instead": [0, 5, 6, 15, 20, 25, 29, 31, 36, 37, 40, 48, 49, 51, 57, 62, 65, 67, 68, 69, 70], "string": [0, 6, 9, 15, 20, 21, 22, 23, 25, 27, 29, 30, 35, 36, 37, 39, 40, 42, 45, 47, 48, 49, 67, 68, 69], "due": [0, 15, 50, 51], "wai": [0, 6, 7, 16, 31, 33, 37, 48, 65, 67, 68, 69, 70], "space": [0, 37, 41, 69, 70], "support": [0, 6, 20, 28, 36, 37, 40, 41, 42, 49, 50, 65, 66, 67, 68, 69, 70], "within": [0, 48, 51, 67, 71], "variabl": [0, 1, 4, 6, 20, 33, 35, 36, 40, 42, 48, 49, 69], "g": [0, 36, 62, 65], "altern": [0, 5, 6, 20, 30, 39, 40, 49, 51, 67, 69], "doubl": [0, 53, 69], "underscor": [0, 1, 6, 49], "advantag": [0, 48, 70], "nativ": 0, "mangl": 0, "do": [0, 5, 14, 15, 37, 48, 65, 67, 69, 70, 71], "direct": [0, 5, 14, 15, 21, 28, 48, 65], "wa": [0, 5, 6, 7, 9, 14, 15, 16, 17, 20, 21, 26, 28, 31, 35, 36, 37, 38, 40, 42, 47, 48, 49, 51, 65, 66, 67, 68, 69], "__sub_cmd": 0, "_init_command_": [0, 1, 5], "had": [0, 15, 49], "been": [0, 5, 33, 38, 39, 49, 71], "output": [0, 6, 15, 16, 30, 49, 50, 51, 65, 67, 70, 71], "build_doc": [0, 50], "py": [0, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "script": [0, 1, 6, 8, 9, 11, 15, 49, 50, 51, 66, 68, 70, 71], "build": [0, 40, 50, 69], "document": [0, 6, 14, 20, 21, 32, 48, 68], "project": [0, 45, 50, 66], "includ": [0, 6, 7, 14, 15, 21, 29, 33, 36, 38, 40, 42, 48, 49, 51, 65, 66, 67, 68, 69, 70], "addition": [0, 33, 49, 70], "two": [0, 20, 40, 69, 70], "decor": [0, 5, 37, 38, 40, 48, 51, 69], "stack": [0, 40, 51], "so": [0, 5, 20, 29, 33, 35, 37, 38, 48, 49, 53, 57, 65, 66, 67, 69, 70, 71], "either": [0, 35, 36, 40, 48, 49, 65, 67, 69, 70], "snippet": [0, 65, 67], "builddoc": 0, "descript": [0, 1, 6, 8, 9, 10, 11, 14, 20, 22, 32, 34, 36, 37, 38, 48, 49, 57, 65, 66, 68, 69, 70, 71], "sphinx": [0, 50], "verbos": [0, 48, 51, 54, 57, 62, 63, 65, 69, 70], "counter": [0, 1, 6, 7, 11, 34, 36, 40, 48, 49, 65, 70], "v": [0, 29, 48, 54, 57, 62, 63, 65, 67, 69, 70], "increas": [0, 40, 48, 54, 57, 62, 63, 65, 69, 70], "log": [0, 5, 15, 36, 40, 48, 51, 52, 54, 62, 65, 69, 70], "specifi": [0, 4, 5, 6, 7, 14, 15, 21, 27, 29, 30, 33, 36, 37, 40, 42, 44, 48, 49, 50, 51, 54, 57, 58, 62, 63, 65, 67, 68, 69, 70], "time": [0, 1, 23, 40, 45, 48, 54, 57, 61, 62, 63, 65, 66, 68, 69, 70, 71], "dry_run": [0, 15, 65], "d": [0, 6, 9, 48, 57, 60, 62, 65, 70], "taken": [0, 5, 7, 15, 36, 40, 57, 62, 65, 69], "__init__": [0, 5, 51, 57, 70], "initi": [0, 5, 7, 9, 21, 37, 38, 40, 49, 50, 65, 66, 67, 69, 70], "etc": [0, 6, 7, 15, 20, 27, 36, 40, 42, 49, 68, 69], "sphinx_build": 0, "subprocess": [0, 69], "c": [0, 11, 58, 60, 61, 65, 66, 68, 69, 70, 71], "clean": [0, 20, 66], "doc": 0, "directori": [0, 15, 27, 45, 67, 69, 70], "befor": [0, 4, 5, 6, 15, 16, 21, 24, 25, 28, 36, 38, 40, 48, 67, 69], "up": [0, 48, 66], "dir": [0, 23, 27, 31, 45, 67], "remov": [0, 57], "old": 0, "rst": [0, 15, 19, 20, 21, 49, 63, 68], "file": [0, 1, 9, 14, 15, 23, 31, 49, 50, 51, 58, 68], "html": [0, 50], "u": [0, 66], "updat": [0, 34, 39, 48, 52, 66], "re": [0, 7, 15, 29, 51, 66, 67, 70], "api": [0, 48, 52, 66, 70], "after_main": [0, 1, 5, 7, 34, 40, 48, 65, 69], "o": [0, 9, 29, 58, 67], "open": [0, 27, 50, 67], "web": 0, "browser": 0, "backup": [0, 69], "backup_rst": 0, "auto": [0, 9, 14, 27, 31, 49, 67], "text": [0, 2, 4, 6, 9, 14, 15, 19, 20, 21, 22, 27, 32, 36, 37, 38, 40, 44, 45, 47, 48, 53, 59, 65, 66, 67, 69, 70], "appear": [0, 36, 38, 40, 42, 50, 65, 69, 70], "section": [0, 6, 21, 37, 49, 67, 69, 70], "h": [0, 2, 6, 9, 14, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70], "dry": [0, 57, 62, 65, 68], "If": [0, 5, 6, 7, 14, 15, 20, 21, 25, 27, 28, 29, 30, 36, 37, 38, 40, 42, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70], "respect": [0, 28, 67, 69], "neither": [0, 40, 65, 69], "becaus": [0, 14, 30, 65, 66, 70], "mark": [0, 37, 65, 69], "enabl": [0, 6, 36, 48, 49, 64, 67, 69], "via": [0, 5, 15, 24, 27, 35, 36, 37, 40, 42, 47, 48, 49, 66, 67, 69, 70, 71], "For": [0, 13, 15, 27, 33, 36, 48, 49, 51, 67, 69, 70], "uco": 0, "being": [0, 6, 14, 48, 49, 51, 69, 71], "higher": [0, 40, 69], "later": [0, 24, 28, 66, 67], "technic": [0, 37, 69], "noth": [0, 5, 9, 11, 20, 35, 48], "librari": [0, 30, 48, 67], "prevent": [0, 6, 14, 49, 51, 66, 69], "problemat": [0, 49], "you": [0, 5, 30, 37, 48, 50, 66, 67, 68, 69, 71], "want": [0, 37, 50, 69], "should": [0, 5, 6, 7, 9, 14, 15, 24, 25, 27, 28, 29, 30, 36, 37, 40, 42, 44, 48, 49, 51, 56, 64, 67, 69, 70], "check": [0, 4, 21, 27, 29, 36, 45, 46, 49, 67, 69, 71], "your": [0, 30, 48, 66, 67], "applic": [0, 5, 30, 48, 67], "twice": [0, 53, 69], "action": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 20, 34, 36, 37, 40, 41, 42, 48, 49, 51, 52, 57, 62, 63, 65, 66, 71], "modul": [1, 8, 18, 23, 34, 48, 50, 51, 57, 66], "annot": [1, 6, 40, 42, 48, 49, 69], "get_descriptor_value_typ": [1, 3], "get_annotation_value_typ": [1, 3], "get_arg": [1, 3], "command_paramet": 1, "sub_command": [1, 4], "split_action_flag": [1, 4], "combo_option_map": [1, 4], "group": [1, 4, 6, 8, 9, 19, 20, 23, 29, 34, 36, 41, 49, 52, 62, 66, 67, 68, 70], "option_map": [1, 4], "command_par": [1, 4], "pass_thru": [1, 4, 34], "all_posit": [1, 4], "get_positionals_to_pars": [1, 4], "always_available_action_flag": [1, 4], "formatt": [1, 4, 19, 20, 22, 34, 36], "long_option_to_param_value_pair": [1, 4], "has_matching_short_opt": [1, 4], "short_option_to_param_value_pair": [1, 4], "find_option_that_accepts_valu": [1, 4], "find_nested_option_that_accepts_valu": [1, 4], "find_nested_pass_thru": [1, 4], "validate_group": [1, 4], "try_env_param": [1, 4], "iter_param": [1, 4], "required_check_param": [1, 4], "pars": [1, 4, 5, 6, 7, 9, 17, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 44, 66, 68, 69, 70], "__call__": [1, 5, 6, 14, 16, 23, 24, 25, 27, 28, 29, 30, 34, 37, 40, 48, 49], "_pre_init_actions_": [1, 5, 48], "_before_main_": [1, 5], "_after_main_": [1, 5, 6, 14, 48, 49, 69], "config": [1, 4, 7, 14, 17, 39, 44, 49, 50], "showdefault": [1, 6, 49], "never": [1, 6, 36, 40, 42, 69, 70], "miss": [1, 6, 14, 17, 36, 41, 47, 48, 49, 65], "truthi": [1, 6, 39, 40, 51, 69], "non_empti": [1, 6], "optionnamemod": [1, 6, 36, 39, 49, 69], "dash": [1, 4, 6, 27, 40, 42, 49, 67, 69], "both_underscor": [1, 6], "both_dash": [1, 6], "none": [1, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 51, 65, 67, 69], "subcommandaliashelpmod": [1, 6, 20, 49], "repeat": [1, 6, 20, 61, 65, 66, 68, 70, 71], "combin": [1, 6, 14, 17, 20, 22, 34, 35, 37, 38, 39, 40, 49, 50, 66, 68, 69, 71], "alia": [1, 6, 9, 11, 20, 28, 40, 62], "ambiguouscombomod": [1, 6, 17, 49], "ignor": [1, 6, 14, 27, 36, 40, 49, 65, 67, 69], "permiss": [1, 6, 15, 67], "strict": [1, 6, 17, 31, 49], "allowleadingdash": [1, 6, 36, 40, 42, 69], "numer": [1, 6, 23, 30, 36, 40, 42, 69], "configitem": [1, 6], "type": [1, 3, 6, 7, 8, 9, 10, 11, 14, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 45, 47, 48, 49, 62, 66, 69, 70], "name": [1, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 23, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 49, 57, 61, 62, 65, 66, 67, 69, 70, 71], "dynamicconfigitem": [1, 6], "config_item": [1, 6], "commandconfig": [1, 4, 6, 7, 14, 20, 36, 44, 49, 51, 69], "field": [1, 6, 57], "error_handl": [1, 5, 6, 14, 49, 51], "always_run_after_main": [1, 6, 14, 48, 49, 69], "allow_annotation_typ": [1, 6, 49], "multiple_action_flag": [1, 6, 14, 49], "action_after_action_flag": [1, 6, 14, 49], "ignore_unknown": [1, 6, 14, 49], "allow_miss": [1, 6, 14, 49], "allow_backtrack": [1, 6, 49], "option_name_mod": [1, 6, 8, 11, 36, 40, 49, 69], "reject_ambiguous_pos_combo": [1, 6, 49], "ambiguous_short_combo": [1, 6, 17, 49], "add_help": [1, 6, 8, 9, 10, 11, 14, 49, 50], "use_type_metavar": [1, 6, 49], "show_default": [1, 6, 34, 36, 49, 69], "cmd_alias_mod": [1, 6, 20, 49], "sort_choic": [1, 6, 24, 28, 29, 30, 49], "choice_delim": [1, 6, 24, 28, 29, 30, 49], "show_group_tre": [1, 6, 49, 50], "show_group_typ": [1, 6, 49, 65], "command_formatt": [1, 6, 49], "param_formatt": [1, 6, 49], "extended_epilog": [1, 6, 49], "usage_column_width": [1, 6, 49], "min_usage_column_width": [1, 6, 49], "wrap_usage_str": [1, 6, 49], "show_docstr": [1, 6, 49], "show_inherited_descript": [1, 6, 49], "sub_cmd_doc_depth": [1, 6, 49], "as_dict": [1, 6], "context": [1, 4, 5, 6, 16, 17, 28, 30, 38, 44, 65, 67, 71], "prog": [1, 7, 8, 9, 10, 11, 14, 32, 49, 69], "allow_argv_prog": [1, 7], "for_prog": [1, 7], "terminal_width": [1, 7, 45], "get_error_handl": [1, 7], "has_parsed_valu": [1, 7], "get_parsed_valu": [1, 7], "set_parsed_valu": [1, 7], "pop_parsed_valu": [1, 7], "roll_back_parsed_valu": [1, 7], "record_act": [1, 7], "num_provid": [1, 7], "get_miss": [1, 7], "action_flag_count": [1, 7], "all_action_flag": [1, 7], "categorized_action_flag": [1, 7], "iter_action_flag": [1, 7], "actionphas": [1, 7], "pre_init": [1, 7], "contextproxi": [1, 7], "get_current_context": [1, 7], "get_or_create_context": [1, 7], "get_context": [1, 7], "convers": [1, 9, 10, 11, 12, 13, 24, 26, 28, 66], "packag": [1, 15, 32, 51, 57, 66], "argparse_ast": [1, 8], "visit_func": [1, 8, 9], "addvisitedchild": [1, 8, 9], "astcal": [1, 8, 9], "parserarg": [1, 8, 9, 11], "argcollect": [1, 8, 9, 11], "arggroup": [1, 8, 9, 11], "mutuallyexclusivegroup": [1, 8, 9], "subparsersact": [1, 8, 9, 10], "astargumentpars": [1, 8, 9, 11], "subpars": [1, 8, 9], "argparse_util": [1, 8], "argumentpars": [1, 8, 9, 10, 69], "command_build": [1, 8], "convert_script": [1, 8, 11], "convert": [1, 8, 11, 23, 24, 25, 27, 28, 29, 30, 31, 37, 67], "convertergroup": [1, 8, 11], "scriptconvert": [1, 8, 11], "collectionconvert": [1, 8, 11], "parserconvert": [1, 8, 11], "groupconvert": [1, 8, 11], "paramconvert": [1, 8, 11], "paramconvertergroup": [1, 8, 11], "basearg": [1, 8, 11], "commandarg": [1, 8, 11], "parambasearg": [1, 8, 11], "passthruarg": [1, 8, 11], "paramarg": [1, 8, 11], "optionarg": [1, 8, 11], "flagarg": [1, 8, 11], "literal_eval_or_non": [1, 8, 11], "conversionerror": [1, 8, 11], "util": [1, 3, 8, 14, 15, 18, 21, 23], "get_name_repr": [1, 8, 12], "iter_module_par": [1, 8, 12], "collection_cont": [1, 8, 12], "visitor": [1, 8, 9], "scope": [1, 8, 13, 50], "scopedvisit": [1, 8, 13], "scriptvisitor": [1, 8, 13], "trackedref": [1, 8, 13], "imp_nam": [1, 8, 13], "core": [1, 5], "commandmeta": [1, 14], "meta": [1, 14], "get_par": [1, 14, 32], "get_config": [1, 14], "get_metadata": [1, 14], "get_param": [1, 14], "get_top_level_command": [1, 14], "render_script_rst": [1, 15, 50], "render_command_rst": [1, 15, 50], "load_command": [1, 15, 45], "filtered_command": [1, 15], "top_level_command": [1, 15], "import_modul": [1, 15], "rstwriter": [1, 15], "document_script": [1, 15], "document_modul": [1, 15], "document_packag": [1, 15], "write_index": [1, 15], "write_rst": [1, 15], "errorhandl": [1, 5, 6, 7, 14, 16, 49, 51], "exc_handler_map": [1, 16], "regist": [1, 5, 6, 14, 16, 34, 36, 37, 38, 39, 40, 42, 49, 51, 69, 70], "unregist": [1, 16], "cls_handler": [1, 16], "iter_handl": [1, 16], "copi": [1, 9, 16, 69], "nullerrorhandl": [1, 7, 16], "handler": [1, 5, 16, 24, 25, 27, 28, 29, 30, 66, 67], "exc_cl": [1, 16], "handle_kb_interrupt": [1, 16], "no_exit_handl": [1, 16, 51], "extended_error_handl": [1, 16, 49, 51], "except": [1, 5, 6, 11, 14, 16, 23, 28, 36, 37, 38, 40, 45, 48, 49, 51, 65, 66, 69, 71], "commandparserexcept": [1, 16, 17, 26, 51], "code": [1, 5, 17, 48, 66], "parserexit": [1, 17], "commanddefinitionerror": [1, 17], "parameterdefinitionerror": [1, 17], "ambiguousshortform": [1, 17], "ambiguousparsetre": [1, 6, 17, 49], "usageerror": [1, 17, 45], "paramusageerror": [1, 17], "multiparamusageerror": [1, 17], "ambiguouscombo": [1, 17], "paramconflict": [1, 17], "paramsmiss": [1, 17], "badargu": [1, 17], "invalidchoic": [1, 17], "missingargu": [1, 7, 17], "toomanyargu": [1, 17], "nosuchopt": [1, 17], "noactivecontext": [1, 7, 17], "backtrack": [1, 6, 7, 17, 49], "nextcommand": [1, 17], "format": [1, 8, 11, 15, 19, 20, 21, 22, 23, 30, 36, 48, 49, 66, 67, 70], "commandhelpformatt": [1, 4, 6, 18, 19, 49], "get_formatt": [1, 18, 19], "get_usage_sub_cmd": [1, 18, 19], "paramhelpformatt": [1, 6, 18, 20, 36, 49], "positionalhelpformatt": [1, 18, 20], "optionhelpformatt": [1, 18, 20], "triflaghelpformatt": [1, 18, 20], "choicemaphelpformatt": [1, 18, 20], "choicegroup": [1, 18, 20], "passthruhelpformatt": [1, 18, 20], "grouphelpformatt": [1, 18, 20], "restructured_text": [1, 18], "rst_bar": [1, 18, 21], "rst_header": [1, 18, 21], "spaced_rst_head": [1, 18, 21], "rst_direct": [1, 18, 21], "rst_toc_tre": [1, 18, 21], "rst_list_tabl": [1, 18, 21], "rsttabl": [1, 18, 20, 21], "format_help_entri": [1, 18, 22], "combine_and_wrap": [1, 18, 22], "line_it": [1, 18, 22], "base": [1, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 57, 66, 67, 68, 69, 70], "inputtyp": [1, 23, 24, 26, 27, 28, 29, 30], "choic": [1, 6, 8, 11, 14, 17, 18, 20, 23, 26, 30, 34, 37, 38, 40, 42, 49, 58, 62, 65, 69, 70], "choicemap": [1, 20, 23, 25, 34, 37], "enumchoic": [1, 23, 25], "inputvalidationerror": [1, 23, 26], "invalidchoiceerror": [1, 23, 26, 30], "fileinput": [1, 23, 27], "path": [1, 8, 9, 15, 17, 23, 27, 29, 31, 32, 45, 58, 69], "serial": [1, 23, 27], "json": [1, 23, 27, 58, 67], "pickl": [1, 23, 27, 67], "numericinput": [1, 23, 28], "rang": [1, 23, 28, 33, 58, 66, 68, 69, 70, 71], "numrang": [1, 23, 28], "pattern": [1, 23, 45, 48, 62, 66, 70], "patterninput": [1, 23, 29], "regexmod": [1, 23, 29, 67], "regex": [1, 23, 29, 45], "glob": [1, 23, 29], "different_local": [1, 23, 30], "dtinput": [1, 23, 30], "dtformatmod": [1, 23, 30, 67], "calendarunitinput": [1, 23, 30], "dai": [1, 23, 30], "month": [1, 23, 30], "timedelta": [1, 23, 30], "datetimeinput": [1, 23, 30], "datetim": [1, 23, 30], "date": [1, 23, 30, 48], "dt_repr": [1, 23, 30], "normalize_dt": [1, 23, 30], "inputparam": [1, 23, 31], "statmod": [1, 23, 27, 31, 67], "filewrapp": [1, 23, 27, 31, 67], "allows_writ": [1, 23, 31], "fix_windows_path": [1, 23, 27, 31, 67], "metadata": [1, 48], "metadatabas": [1, 32], "inherit": [1, 6, 15, 32, 49, 66, 70], "get_valu": [1, 32], "dynamicmetadata": [1, 32], "dynamic_metadata": [1, 32], "programmetadata": [1, 14, 32], "cmd_modul": [1, 32], "url": [1, 6, 32, 49], "email": [1, 6, 8, 11, 32, 49], "version": [1, 6, 31, 32, 35, 37, 45, 49, 65, 69], "usag": [1, 6, 7, 8, 9, 10, 11, 14, 19, 20, 22, 32, 36, 38, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70], "epilog": [1, 6, 8, 9, 10, 11, 14, 32, 48, 49, 71], "doc_str": [1, 32], "pkg_doc_str": [1, 32], "for_command": [1, 32], "get_prog": [1, 32], "doc_nam": [1, 14, 15, 32, 49], "docs_url": [1, 8, 11, 32], "format_epilog": [1, 32], "get_doc_str": [1, 32], "get_descript": [1, 32], "progfind": [1, 32], "mod_obj_prog_map": [1, 32], "normal": [1, 21, 23, 25, 27, 28, 29, 32, 36, 40, 42, 48, 65, 67, 69, 71], "min": [1, 6, 23, 28, 33, 67], "max": [1, 23, 28, 33, 67], "satisfi": [1, 33], "max_reach": [1, 33], "has_upper_bound": [1, 33], "upper_bound": [1, 33], "nargs_min_and_max_sum": [1, 33], "paramet": [1, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 66, 67], "paramact": [1, 34, 35, 36], "valuemixin": [1, 34, 35], "constmixin": [1, 34, 35], "append": [1, 20, 21, 34, 35, 36, 37, 40, 42, 65, 69], "basicconstact": [1, 34, 35], "storeconst": [1, 34, 35], "appendconst": [1, 34, 35], "count": [1, 5, 7, 11, 33, 34, 35, 40, 61, 66, 68, 69, 71], "concaten": [1, 34, 35, 37], "storeal": [1, 34, 35], "parambas": [1, 34, 36, 38], "baseposit": [1, 4, 19, 34, 36, 37, 42, 43, 44], "baseopt": [1, 4, 17, 19, 34, 36, 39, 40], "allowleadingdashproperti": [1, 34, 36], "choice_map": [1, 34], "paramgroup": [1, 4, 6, 19, 34, 36, 38, 49, 65, 70], "option_str": [1, 9, 10, 34, 36, 40, 69], "optionstr": [1, 34, 36, 39], "triflagoptionstr": [1, 34, 39, 40], "triflag": [1, 34, 39, 40], "actionflag": [1, 4, 5, 7, 34, 40, 48, 50, 65], "passthru": [1, 4, 34, 41], "parse_tre": 1, "anyword": [1, 43], "n": [1, 15, 43, 45, 48, 57, 58, 61, 66, 67, 68, 69, 71], "remain": [1, 35, 41, 43, 66, 69], "posnod": [1, 17, 43], "link": [1, 23, 31, 43], "target": [1, 5, 6, 17, 20, 34, 37, 43, 69, 70], "word": [1, 15, 17, 37, 43, 53, 69], "link_param": [1, 43], "nargs_min_and_max": [1, 43], "any_word": [1, 43], "any_nod": [1, 43], "has_ani": [1, 43], "raw_path": [1, 43], "path_repr": [1, 43], "build_tre": [1, 43], "update_nod": [1, 43], "print_tre": [1, 43], "process_param": [1, 43], "commandpars": [1, 44], "arg_dequ": [1, 44], "defer": [1, 44], "parse_args_and_get_next_cmd": [1, 44], "get_next_cmd": [1, 44], "handle_pass_thru": [1, 44], "handle_remaind": [1, 44], "handle_posit": [1, 44], "handle_long": [1, 44], "handle_short": [1, 44], "consume_valu": [1, 44], "get_opt_prefix": [1, 44], "assertraiseswithstringcontext": [1, 45], "test_cas": [1, 45], "expected_exc": [1, 45], "expected_text": [1, 45], "msg": [1, 45], "parsertest": [1, 45], "assert_dict_equ": [1, 45], "assert_raises_contains_str": [1, 45], "assert_parse_result": [1, 45], "assert_parse_results_cas": [1, 45], "assert_env_parse_result": [1, 45], "assert_env_parse_results_cas": [1, 45], "assert_parse_fail": [1, 45], "assert_parse_fails_cas": [1, 45], "assert_argv_parse_fails_cas": [1, 45], "assert_call_fail": [1, 45], "assert_call_fails_cas": [1, 45], "assert_strings_equ": [1, 45], "assert_str_starts_with_lin": [1, 45], "assert_str_contain": [1, 45], "env_var": [1, 34, 35, 36, 40, 45, 69], "format_diff": [1, 45], "format_dict_diff": [1, 45], "redirectstream": [1, 45, 71], "stdout": [1, 27, 45, 59, 67, 71], "stderr": [1, 45, 51, 71], "get_usage_text": [1, 45], "get_help_text": [1, 45], "get_rst_text": [1, 45], "sealed_mock": [1, 45], "temporarydir": [1, 45], "camel_to_snake_cas": [1, 47], "short_repr": [1, 47], "missingmixin": [1, 6, 29, 30, 47], "fixedflagmeta": [1, 47], "fixedflag": [1, 6, 31, 47], "width": [1, 6, 7, 18, 20, 21, 47, 49], "str_to_bool": [1, 47], "positive_int": [1, 47], "author": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57], "doug": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57], "skrypa": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57], "sourc": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 66, 69], "extract": 3, "command_cl": [3, 7], "attr": [3, 9, 63], "str": [3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 67], "tupl": [3, 4, 9, 11, 13, 20, 22, 29, 30, 32, 33, 36, 39, 40, 43, 45, 67, 69], "wrapper": [3, 16, 52, 69, 70], "around": [3, 16, 47, 51, 70], "3": [3, 6, 16, 17, 20, 22, 45, 47, 48, 65, 66, 71], "7": [3, 47, 66, 67], "8": [3, 6, 15, 31, 50, 66], "compat": [3, 6], "make": [3, 10, 37, 42, 48, 50, 65, 66, 69], "behav": [3, 28, 35, 49, 67], "more": [3, 5, 15, 17, 21, 22, 27, 29, 33, 37, 40, 42, 48, 49, 50, 51, 66, 67, 68, 69, 70], "doe": [3, 5, 9, 11, 14, 16, 17, 20, 21, 26, 29, 30, 31, 35, 37, 40, 48, 49, 51, 67, 69, 70, 71], "9": [3, 66], "all": [4, 5, 6, 7, 9, 14, 15, 17, 19, 20, 25, 29, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 57, 59, 62, 65, 66, 67, 69, 70], "member": [4, 6, 8, 11, 15, 25, 29, 34, 36, 38, 47, 49, 57, 62, 65, 67, 70], "between": [4, 6, 31, 47, 48, 49, 51, 67, 69], "definit": [4, 9], "involv": 4, "commandcl": [4, 14, 15, 19, 36, 43, 45], "parent_param": 4, "split": [4, 35, 53, 69, 70], "optionmap": 4, "map": [4, 14, 15, 17, 21, 25, 37, 49, 67, 70], "short": [4, 6, 17, 34, 35, 36, 39, 40, 49, 68, 69], "opt": [4, 35], "charact": [4, 6, 7, 9, 15, 17, 21, 23, 31, 49, 50, 66, 69], "associ": [4, 5, 7, 19, 20, 37, 69], "properti": [4, 7, 9, 11, 20, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 69], "avail": [4, 37, 40, 48, 49, 67, 69, 70, 71], "bool": [4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 47, 69], "iter": [4, 7, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22, 33, 36, 38, 39, 43, 45], "yield": [4, 7, 20], "environ": [4, 35, 36, 40, 62, 65, 69, 70], "did": [4, 36, 38, 40, 48, 65], "cli": [4, 5, 6, 14, 35, 36, 40, 48, 49, 51, 61, 67, 68, 69, 70], "valu": [4, 6, 7, 9, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 51, 65, 66, 67, 69, 70], "point": [5, 20, 48, 51, 57, 70], "program": [5, 6, 9, 14, 16, 27, 30, 32, 37, 48, 49, 57, 67, 68, 69, 70, 71], "extend": [5, 9, 11, 14, 15, 16, 20, 32, 34, 35, 36, 37, 38, 40, 42, 47, 48, 67, 70], "provid": [5, 6, 7, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 48, 49, 50, 53, 59, 65, 66, 67, 68, 69, 70, 71], "here": [5, 37, 40, 42, 49, 67, 68, 69, 70], "refer": [5, 14, 15, 38, 48], "intern": [5, 7, 17, 37], "safe": [5, 48], "subclass": [5, 6, 9, 11, 14, 15, 20, 24, 25, 28, 35, 37, 38, 39, 48, 49, 67, 70], "redefin": 5, "overwrit": 5, "classmethod": [5, 7, 9, 11, 14, 16, 20, 21, 29, 30, 32, 35, 36, 37, 43, 44, 48], "sequenc": [5, 6, 7, 21, 28, 30, 33, 35, 36, 69], "commandobj": [5, 37], "primari": [5, 14, 38, 39, 40, 48, 66, 69, 70], "argument": [5, 6, 7, 9, 14, 15, 16, 17, 21, 24, 25, 27, 28, 29, 30, 36, 37, 38, 40, 41, 42, 44, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "resolv": [5, 23, 27, 31, 67], "run": [5, 6, 7, 14, 27, 49, 51, 52, 56, 57, 62, 65, 67, 68, 69, 70, 71], "dure": [5, 7, 24, 28, 29, 37, 38, 48, 49, 67, 70], "To": [5, 15, 20, 27, 29, 40, 42, 50, 51, 66, 67, 68, 69, 70, 71], "abl": [5, 48, 69, 70], "possibli": [5, 16], "mention": 5, "separ": [5, 6, 15, 37, 40, 41, 49, 51, 67, 69, 70], "sy": [5, 9, 14, 16, 48, 49, 51, 68, 71], "alreadi": [5, 6, 7, 15, 27, 44, 48, 67], "final": [5, 6, 8, 11, 37, 48, 49], "readi": 5, "arg": [5, 7, 8, 9, 10, 11, 21, 25, 36, 41, 44, 45, 47, 48, 52], "int": [5, 6, 7, 9, 11, 15, 16, 17, 19, 20, 21, 22, 28, 29, 30, 31, 33, 35, 37, 40, 43, 44, 45, 47, 48, 65, 66, 67, 68, 70, 71], "error": [5, 6, 9, 10, 14, 15, 16, 17, 23, 26, 27, 31, 48, 66, 67, 70, 71], "skip": [5, 15, 58], "total": [5, 44], "first": [5, 6, 14, 20, 21, 27, 37, 40, 68, 69], "valid": [5, 16, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 40, 42, 48, 65, 67, 69], "always_avail": [5, 40, 48, 50, 69], "super": [5, 48], "implement": [5, 9, 11, 14, 20, 35, 40, 48, 49, 61, 67, 68, 69], "placehold": [5, 36, 69], "perform": [5, 6, 15, 17, 40, 42, 49, 67, 69], "task": [5, 48, 65, 66], "resourc": 5, "intens": 5, "oper": 5, "side": [5, 28, 67], "effect": [5, 42, 69], "place": [5, 17], "recommend": [5, 48], "trigger": [5, 40, 71], "far": [5, 33], "return_command": 5, "long": [5, 6, 9, 34, 36, 39, 40, 42, 49, 57, 68, 69, 70], "present": [5, 6, 15, 40, 42, 48, 49, 50, 67, 69, 70], "detect": [5, 6, 40, 42, 49, 69], "found": [5, 14, 44, 51, 65, 68], "runtimeerror": [5, 17], "rais": [5, 6, 7, 14, 15, 16, 17, 26, 28, 36, 37, 38, 40, 45, 49, 51, 65, 69, 70], "explicitli": [5, 6, 20, 29, 37, 40, 51, 67, 68, 69], "whether": [5, 6, 7, 9, 14, 15, 20, 25, 27, 28, 29, 36, 38, 39, 40, 42, 45, 49, 64, 65, 66, 67, 69], "ran": 5, "through": [5, 37, 51, 67], "could": [5, 6, 20, 57], "behavior": [6, 7, 15, 28, 36, 47, 48, 51, 67, 69], "qualnam": [6, 7, 29, 30, 31, 47], "start": [6, 7, 28, 29, 30, 31, 38, 47, 66, 67], "boundari": [6, 7, 29, 30, 31, 47], "most": [6, 16, 37, 38, 48, 69], "rightmost": 6, "highest": 6, "alon": 6, "equival": [6, 49, 68, 69], "shown": [6, 49, 69, 70], "4": [6, 11, 15, 19, 21, 31, 37, 48, 65, 69], "treat": [6, 21, 36, 51, 67], "boolean": [6, 40, 69], "empti": [6, 15, 30, 42, 67, 69], "16": [6, 31], "regardless": [6, 14, 48, 70], "how": [6, 9, 35, 48, 49, 51, 66, 67, 68, 69, 71], "form": [6, 17, 40, 49, 68, 69], "foo_bar": [6, 70], "set": [6, 7, 9, 13, 17, 25, 27, 33, 36, 39, 43, 48, 49, 50, 57, 65, 66, 67, 69, 70], "verbatim": [6, 40, 69], "replac": [6, 15, 48, 50], "displai": [6, 14, 21, 37, 40, 49, 65, 69, 70], "purpos": [6, 48], "too": [6, 17], "clutter": 6, "No": 6, "At": [6, 67], "least": [6, 30, 38, 65, 67], "NOT": [6, 14, 40, 51, 69], "name_mod": [6, 8, 11, 34, 36, 39, 40, 49, 69], "creation": 6, "mode": [6, 20, 23, 27, 29, 31, 67], "_": [6, 47, 66, 68, 71], "15": 6, "23": 6, "32": [6, 31], "enum": [6, 7, 25, 29, 30, 47, 48, 49, 67], "alias": [6, 9, 10, 20, 46, 49, 70], "anoth": [6, 49, 50, 67, 70], "line": [6, 7, 9, 16, 20, 22, 53, 67, 69, 70], "similar": [6, 7, 25, 37, 40, 48, 49, 51, 65, 67, 69, 70], "subsequ": [6, 20], "ambigu": [6, 17, 49], "entir": [6, 49, 65, 67], "best": [6, 49], "effort": [6, 49], "multi": [6, 30, 37, 67], "char": [6, 21, 35], "overlap": 6, "singl": [6, 7, 14, 15, 20, 21, 25, 40, 42, 44, 50, 67, 68, 69], "exact": 6, "reject": [6, 24, 28, 40, 42, 49, 69], "user": [6, 7, 17, 36, 37, 38, 40, 42, 48, 51, 52, 62, 65, 67, 69, 70], "interpret": [6, 37, 51], "lead": [6, 15, 30, 67], "5": [6, 71], "dv": 6, "cv": 6, "read_onli": 6, "block": [6, 23, 31, 38, 49, 65], "infer": [6, 14, 49, 68, 69], "invoc": [6, 14, 49], "unknown": [6, 14, 49], "encount": [6, 14, 15, 49], "metavar": [6, 8, 9, 10, 11, 34, 36, 49, 65, 69], "relat": [6, 29, 31, 49, 51, 62, 65, 67, 70], "sort": [6, 16, 30, 49], "delimit": [6, 22, 49], "visual": [6, 49, 50], "indic": [6, 7, 9, 27, 37, 49, 50, 51, 65, 67, 69], "mutual": [6, 17, 38, 49, 57, 58, 60, 62, 68], "exclus": [6, 17, 28, 38, 49, 57, 58, 60, 62, 67, 68], "depend": [6, 14, 28, 37, 38, 48, 49, 60, 64, 66, 67, 68, 69], "fact": [6, 49, 51], "commandtyp": [6, 7, 19, 32, 37, 44], "paramorgroup": [6, 7, 17, 20, 38], "successfulli": [6, 49], "column": [6, 21, 22, 49], "adjust": [6, 28, 48, 49, 67], "indent": [6, 9, 11, 21, 43, 49], "wrap": [6, 14, 20, 22, 28, 37, 49, 67], "basic": [6, 49, 52, 65, 66, 68, 70], "size": [6, 49], "top": [6, 14, 15, 48, 49, 69, 70], "docstr": [6, 49, 69], "maximum": [6, 15, 21, 28, 33, 49, 67], "depth": [6, 15, 21, 49], "full": [6, 20, 23, 29, 30, 51, 70], "track": 7, "anyconfig": [7, 14], "abstractcontextmanag": [7, 45], "hold": [7, 40, 42, 69], "hierarchi": 7, "affect": [7, 21, 48, 49], "optstr": [7, 11, 20, 21, 22, 32, 36, 37, 40, 44, 45], "pathlik": [7, 9, 15], "current": [7, 31, 66, 70], "fit": 7, "recurs": [7, 43], "dictionari": [7, 29, 49], "access": [7, 71], "gather": [7, 71], "attempt": [7, 15, 17, 24, 28, 31, 67], "obtain": 7, "assign": [7, 13, 36, 39, 40, 69], "categor": 7, "Not": [7, 24, 28, 30, 48, 67, 69, 70], "part": [7, 22, 30, 67], "val_count": 7, "phase": 7, "increment": [7, 40, 69], "proxi": 7, "activ": [7, 17, 44], "request": 7, "flask": 7, "instanti": [7, 37], "silent": 7, "get": [7, 19, 66], "creat": [7, 15, 27, 67, 69], "new": [7, 21, 22, 35, 53, 57, 69], "to_cal": 7, "particular": [7, 69, 71], "ones": [7, 15], "That": [7, 48, 69], "positional_onli": 7, "var_posit": 7, "raw": 7, "mod_cls_to_ast_cls_map": [8, 9], "register_pars": [8, 9], "add_pars": [8, 9, 10], "child_cl": [8, 9], "list_attr": [8, 9], "__init_subclass__": [8, 9, 11, 18, 20, 23, 30, 34, 35, 36, 37], "get_tracked_ref": [8, 9, 13], "init_func_nam": [8, 9], "init_func_arg": [8, 9], "init_func_raw_kwarg": [8, 9], "init_func_kwarg": [8, 9], "init_call_repr": [8, 9], "pprint": [8, 9], "add_argu": [8, 9, 68, 69], "add_mutually_exclusive_group": [8, 9, 10, 65], "add_argument_group": [8, 9, 10], "grouped_children": [8, 9, 11], "add_subpars": [8, 9, 10], "sub_pars": [8, 9], "sp_parent": [8, 9], "newline_between_memb": [8, 11], "for_ast_cal": [8, 11], "init_for_ast_cal": [8, 11], "init_group": [8, 11], "format_lin": [8, 11], "member_typ": [8, 11], "format_al": [8, 11], "ast_obj": [8, 11], "descendant_arg": [8, 11], "format_memb": [8, 11], "sub_parser_convert": [8, 11], "is_sub_pars": [8, 11], "attr_nam": [8, 11], "cmd_option_str": [8, 11], "use_auto_long_opt_str": [8, 11], "get_pos_arg": [8, 11], "get_cls_and_kwarg": [8, 11], "is_pass_thru": [8, 11], "is_posit": [8, 11], "is_opt": [8, 11], "to_str": [8, 11], "from_kwarg": [8, 11], "hide": [8, 11, 34, 36, 38, 65, 69], "init_posit": [8, 11], "init_opt": [8, 11], "init_flag": [8, 11], "init_count": [8, 11], "visit_functiondef": [8, 13], "visit_asyncfunctiondef": [8, 13], "visit_lambda": [8, 13], "visit_classdef": [8, 13], "visit_whil": [8, 13], "track_cal": [8, 13], "track_refs_to": [8, 13], "visit_import": [8, 13], "visit_importfrom": [8, 13], "visit_for": [8, 13], "visit_asyncfor": [8, 13], "resolve_ref": [8, 13], "visit_withitem": [8, 13], "visit_assign": [8, 13], "visit_cal": [8, 13], "src_text": 9, "smart_loop_handl": [9, 13], "ast_cl": 9, "parsercl": 9, "node": [9, 12, 13, 17, 43], "initnod": 9, "optcal": 9, "tracked_ref": 9, "trackedrefmap": 9, "parserobj": 9, "ast": [9, 12, 13, 66], "ac": [9, 11], "add_child": 9, "representedcal": 9, "overridden": [9, 11, 15, 20, 24, 28, 35, 48, 49, 67], "dest": [9, 10], "children": 9, "titl": [9, 10, 15, 18, 21, 34, 37, 49, 69, 70], "prefix_char": [9, 10], "argument_default": [9, 10], "conflict_handl": [9, 10], "python": [9, 15, 30, 31, 48, 67], "basenam": 9, "what": [9, 14, 22, 25, 37, 48, 49, 67, 70], "whose": 9, "formatter_class": [9, 10], "helpformatt": [9, 10], "prefix": [9, 11, 20, 21, 22, 36, 37, 39, 40, 45, 65, 69, 70], "fromfile_prefix_char": [9, 10], "addit": [9, 15, 27, 36, 37, 40, 41, 42, 48, 51, 57, 66, 67, 69, 70, 71], "add": [9, 18, 20, 21, 34, 38, 39, 40, 50, 57, 69], "allow_abbrev": [9, 10], "abbrevi": [9, 23, 30, 67, 69], "unambigu": 9, "exit_on_error": [9, 10], "determin": [9, 24, 28, 36, 37, 40, 69, 70], "info": [9, 21, 27, 29, 40, 42, 48, 49, 65, 67, 69, 70], "from_cal": 10, "argpars": [10, 33, 49, 65, 66, 68, 69], "parser_class": 10, "suppress": [10, 69], "_subparsersact": 10, "add_method": 11, "abstract": [11, 24, 30, 35, 36], "had_memb": 11, "num": 11, "expr": [11, 12, 13], "track_ref": 13, "nodevisitor": 13, "cb": 13, "ref": 13, "import": [13, 15, 48, 50, 51, 57, 66, 67, 68, 70, 71], "importfrom": 13, "item": [13, 57, 67, 70], "imp": 13, "metaclass": [14, 47], "find": [14, 48, 52, 65, 70], "namespac": [14, 69], "abcmeta": 14, "custom": [14, 24, 25, 26, 27, 28, 29, 30, 36, 40, 42, 49, 51, 52, 66, 67], "stem": [14, 15], "disabl": [14, 49, 50, 51, 69, 71], "cl": 14, "commandani": [14, 19], "t": [14, 21, 24, 25, 27, 29, 30, 37, 45, 48, 66, 67, 70], "include_abc": [14, 15], "mro": 14, "__subclasses__": 14, "releas": [14, 66], "dead": 14, "quickli": [14, 66], "enough": [14, 49], "top_onli": 15, "fix_nam": [15, 19], "fix_name_func": [15, 19], "namefunc": [15, 19], "load": [15, 27, 50, 67], "camelcas": [15, 37], "snake_cas": [15, 37, 70], "oserror": [15, 51], "thereof": [15, 39, 48], "propag": [15, 51, 71], "importerror": 15, "obj_map": 15, "output_dir": 15, "encod": [15, 23, 27, 30, 31, 67], "utf": [15, 50], "newlin": 15, "ext": 15, "module_templ": 15, "header": [15, 21, 65], "currentmodul": 15, "automodul": 15, "undoc": 15, "skip_modul": 15, "written": [15, 21, 27], "extens": [15, 69], "suffix": [15, 20, 45], "notat": 15, "subdir": 15, "write": [15, 23, 27, 29, 31, 48, 50, 58, 59, 67, 71], "subdirectori": 15, "rel": [15, 40, 69, 70], "page": [15, 66], "preserv": 15, "simpl": [15, 48, 52, 58, 61, 66, 68, 69, 71], "appli": [15, 50, 65], "content": [15, 19, 21, 50, 67], "save": [15, 68], "pair": [15, 21, 25, 40, 67, 69], "rst_str": 15, "discov": [15, 20, 35, 44, 48], "index_nam": 15, "index_head": 15, "index_subdir": 15, "caption": 15, "pkg_name": 15, "pkg_path": 15, "index": [15, 21, 35, 66], "max_depth": [15, 21], "tabl": [15, 21], "tree": [15, 21, 66], "unlimit": [15, 21], "content_subdir": 15, "toctre": [15, 21], "referenc": 15, "expect": [16, 25, 27, 38, 40, 42, 45, 47, 48, 57, 67, 69, 70, 71], "unexpect": [16, 30, 67], "catch": [16, 51], "keyboardinterrupt": [16, 51], "gracefulli": 16, "brokenpipeerror": [16, 51], "often": [16, 69], "caus": [16, 17, 27, 30, 67, 70], "pipe": [16, 51], "tool": [16, 48, 50, 66], "tail": 16, "invalid": [16, 17, 26, 36, 40, 48, 69], "transfer": 16, "control": [16, 36, 48, 49, 50, 70], "baseexcept": [16, 45], "exc_typ": 16, "exc": [16, 45, 51], "facilit": [16, 67], "select": [16, 48, 70], "end": [16, 29, 66, 67, 69], "next": [16, 17, 70], "prompt": 16, "last": [16, 42, 66, 69], "incomplet": 16, "statu": 17, "param_conflicts_map": 17, "correctli": [17, 66], "combo": [17, 35, 49, 65, 69], "partial": [17, 37], "pre": [17, 26, 29, 67], "mani": [17, 50, 51, 69], "took": 17, "advanc": [17, 33, 52, 68], "certain": 17, "format_help": [18, 19, 20, 34, 36, 37], "format_rst": [18, 19], "format_usag": [18, 19, 20, 34, 36, 37], "maybe_add_group": [18, 19], "maybe_add_opt": [18, 19], "maybe_add_posit": [18, 19], "required_formatter_map": [18, 20], "for_param_cl": [18, 20], "maybe_wrap_usag": [18, 20], "format_metavar": [18, 20, 23, 24, 28, 29, 30], "format_basic_usag": [18, 20], "iter_usage_part": [18, 20], "format_descript": [18, 20], "rst_usag": [18, 20], "rst_row": [18, 20], "choice_group": [18, 20], "rst_tabl": [18, 20], "choice_str": [18, 20, 23, 30], "group_choic": [18, 20], "prepar": [18, 20], "prepare_combin": [18, 20], "prepare_alias": [18, 20], "prepare_rep": [18, 20], "subtitl": [18, 21], "show_titl": [18, 21], "use_table_direct": [18, 21], "row": [18, 21], "from_dict": [18, 21], "add_dict_row": [18, 21], "add_kv_row": [18, 21], "add_row": [18, 21], "iter_build": [18, 21], "allow_sys_argv": [19, 32], "init_level": 19, "delim": [19, 20, 22, 47], "sub_cmd_choic": 19, "cont_ind": [19, 22], "built": [20, 47], "param_cl": 20, "parenthes": 20, "bracket": 20, "include_meta": 20, "tw_offset": [20, 22, 37], "alt": [20, 39], "consid": [20, 51], "canon": 20, "togeth": [20, 69], "default_mod": 20, "offset": 20, "calcul": [20, 28, 37, 69, 70], "everi": [20, 40, 42], "primarili": 20, "nest": [20, 38, 48, 65], "inclus": [20, 28, 67], "format_str": 20, "origin": [20, 23, 29, 30, 37, 48, 67], "modif": [20, 67], "simpli": [20, 65], "omit": 20, "data": [21, 27, 31, 67], "markup": 21, "overlin": 21, "content_fmt": 21, "value_pad": 21, "20": [21, 49], "emit": 21, "rubric": 21, "begin": [21, 29, 31, 40, 42, 67, 69], "bodi": 21, "rowmap": 21, "auto_head": 21, "popul": [21, 70], "add_head": 21, "second": [21, 30, 65, 67], "insert": 21, "By": [21, 27, 28, 40, 42, 48, 65, 67, 68, 69, 70], "below": [21, 33, 49, 65], "grid": 21, "usage_part": 22, "lpad": [22, 37], "usage_delim": 22, "max_width": 22, "complic": 22, "than": [22, 45, 49, 50, 51, 67, 68, 69], "just": [22, 51, 65, 69], "scale": [22, 66], "is_valid_typ": [23, 24, 28], "fix_default": [23, 24, 27, 28, 29, 30], "expand": [23, 27, 67], "readabl": [23, 27, 66, 67], "writabl": [23, 27, 67], "allow_dash": [23, 27, 67], "use_windows_fix": [23, 27, 67], "validated_path": [23, 27], "lazi": [23, 27, 67], "pass_fil": [23, 27, 31, 67], "snap": [23, 28, 67], "include_min": [23, 28, 67], "include_max": [23, 28, 67], "handle_invalid": [23, 28], "normcas": [23, 29, 67], "local": [23, 30, 34, 37, 67], "dt_type": [23, 30], "numeric_iso": [23, 30], "out_format": [23, 30, 67], "out_local": [23, 30, 67], "parse_numer": [23, 30], "iso": [23, 30, 67], "unit": [23, 30, 45, 66, 67, 71], "earliest": [23, 30, 67], "latest": [23, 30, 67], "parse_dt": [23, 30], "fifo": [23, 31], "socket": [23, 31], "read": [23, 27, 31, 58, 67], "close": [23, 31, 67], "desir": [24, 25, 27, 28, 29, 30, 48, 50, 51, 67, 69, 70], "would_accept": [24, 28, 34, 35], "actual": [24, 45, 71], "take_act": 24, "happen": [24, 48], "restrict": [25, 27, 67, 69], "typefunc": 25, "case_sensit": [25, 67], "_choicesbas": 25, "evalu": [25, 38, 67, 69], "sensit": [25, 29, 67], "enumt": 25, "valueerror": [26, 28, 30], "type_str": 26, "fix": [27, 49, 67], "conform": 27, "tild": [27, 67], "fulli": [27, 67], "absolut": [27, 67], "symlink": [27, 67], "regular": [27, 29, 67], "stdin": [27, 45, 67, 71], "window": [27, 30, 50, 51, 67], "issu": [27, 31, 48, 49, 61, 66, 67, 71], "complet": [27, 31, 48, 67], "git": [27, 31, 67], "bash": [27, 31, 67], "r": [27, 31, 57, 58, 62, 65, 67, 69, 70], "union": [27, 30, 36, 37, 40, 43], "byte": [27, 45], "immedi": [27, 67, 69], "upon": [27, 67], "impli": [27, 67, 69], "textio": 27, "binaryio": 27, "de": [27, 67], "dump": [27, 67], "rb": [27, 67], "nt": 28, "float": [28, 30, 33, 40, 43, 47, 58, 67, 69], "integ": [28, 33, 40, 47, 67, 69], "builtin": [28, 48, 67], "outsid": [28, 65, 67], "nearest": [28, 67], "bound": [28, 67, 69], "necessarili": [28, 67, 71], "stop": [28, 67], "closer": 28, "obvious": [28, 67], "correct": [28, 50, 67], "minimum": [28, 33, 39, 49, 67, 69], "lower": [28, 37, 40, 49, 50, 66, 67, 69, 70], "upper": [28, 67], "snap_dir": 28, "violat": 28, "govern": 29, "captur": [29, 67], "regexresult": 29, "compil": [29, 67], "ignorecas": [29, 67], "search": [29, 36, 66, 67, 69], "anchor": [29, 67], "appropri": [29, 67], "express": [29, 67], "One": [29, 48, 51, 65, 67, 69], "identifi": [29, 67], "pick": [29, 40, 42, 48, 67, 69], "match_cas": [29, 67], "fnmatch": [29, 67, 70], "setlocal": [30, 67], "problem": [30, 49, 67], "system": [30, 67], "manner": [30, 66, 67], "thread": [30, 67], "leav": [30, 67], "proper": [30, 67], "i18n": [30, 67], "babel": [30, 67], "manag": [30, 38, 65, 71], "temporari": 30, "calendar": 30, "incorrect": [30, 49, 67], "represent": 30, "min_index": 30, "strptime": 30, "accur": 30, "standalon": 30, "weekdai": [30, 67], "week": [30, 67], "liter": [30, 40, 41, 42], "microsecond": [30, 67], "millisecond": [30, 67], "minut": [30, 67], "hour": [30, 67], "dt": 30, "use_repr": 30, "now": 30, "64": 31, "127": 31, "inconsist": 31, "distribut": 31, "situat": [31, 48, 70], "drive": [31, 67], "introspect": 32, "strip": 32, "allow_inherit": 32, "cmd_path": 32, "cmd_name": [32, 45], "frozenset": 33, "remaind": [33, 35, 41, 69], "unifi": 33, "mean": 33, "exceed": [33, 67], "parsed_valu": 33, "length": 33, "meet": 33, "exce": 33, "nargs_object": 33, "accepts_valu": [34, 35], "accepts_const": [34, 35], "default_narg": [34, 35], "add_valu": [34, 35], "add_const": [34, 35], "add_env_valu": [34, 35], "get_maybe_poppable_count": [34, 35], "can_reset": [34, 35], "get_default": [34, 35], "finalize_default": [34, 35], "finalize_valu": [34, 35], "set_valu": [34, 35], "append_valu": [34, 35], "set_const": [34, 35], "append_const": [34, 35, 40, 69], "missing_hint": [34, 36, 41], "show_in_help": [34, 36, 37, 38], "allow_leading_dash": [34, 36, 40, 42, 69], "strict_default": [34, 36], "has_choic": [34, 36, 37], "get_const": [34, 36, 40], "get_env_const": [34, 36, 40], "prepare_valu": [34, 36, 40], "is_valid_arg": [34, 36], "result_valu": [34, 36, 37], "strict_env": [34, 36, 40, 69], "use_env_valu": [34, 36, 40, 69], "register_choic": [34, 37], "has_local_choic": [34, 37], "register_command": [34, 37], "register_act": [34, 37], "mutually_exclus": [34, 38, 65], "mutually_depend": [34, 38, 65], "register_al": [34, 38], "in_mutually_exclusive_group": [34, 38], "contains_posit": [34, 38], "contains_requir": [34, 38], "has_long": [34, 39], "has_min_opt": [34, 39], "get_set": [34, 39], "display_long": [34, 39], "get_usage_opt": [34, 39], "all_option_str": [34, 39], "add_alt": [34, 39], "update_alt": [34, 39], "alt_allow": [34, 39], "display_long_primari": [34, 39], "short_primari": [34, 39], "display_long_alt": [34, 39], "short_alt": [34, 39], "primary_option_str": [34, 39], "alt_option_str": [34, 39], "alt_help": [34, 40, 69], "init": [34, 40, 52], "td": [35, 36, 37, 40], "noreturn": 35, "constant": [35, 36, 40, 69], "real": 35, "missing_default": [35, 36, 37], "basic_const_act": 35, "store_al": [35, 41], "brief": [36, 38, 69], "hint": [36, 41], "hidden": 36, "t_co": [36, 40], "meant": [36, 37], "individu": [36, 37, 40, 41, 42, 69], "parameter_act": [36, 37, 40, 42], "repr_attr": 36, "repr": [36, 47], "opt_str": [36, 40], "short_combo": [36, 40], "pre_act": [36, 40], "position": [36, 42, 69], "default_ok": 36, "env": [36, 45, 62, 65, 69, 70], "var": [36, 69], "warn": [36, 40, 69], "escap": [37, 70], "quot": [37, 70], "natur": 37, "jump": 37, "hoop": 37, "maintain": [37, 47, 48, 66, 69, 70], "distinct": [37, 68, 69, 70], "choice_validation_exc": 37, "default_help": 37, "local_choic": [37, 70], "deleg": 37, "sub": [37, 51, 69], "command_or_choic": 37, "further": [37, 48, 51, 70], "chosen": 37, "better": [37, 48, 69], "suit": [37, 69], "sens": [37, 48, 69], "method_or_choic": 37, "explicit": [37, 40, 49, 68, 69], "unchang": 37, "arbitrari": [38, 65, 69], "vice": [38, 65], "versa": [38, 65], "back": [38, 49], "virtual": 38, "inner": [38, 65], "outward": 38, "non": [39, 67], "__set_name__": 39, "nargsvalu": [40, 42], "inputtypefunc": [40, 42], "choicestyp": [40, 42], "leadingdash": [40, 42], "transform": [40, 42, 67, 69], "tc": 40, "typic": [40, 69], "falsei": [40, 51, 69], "ye": [40, 69], "static": 40, "ta": 40, "alt_prefix": [40, 69], "alt_long": [40, 69], "alt_short": [40, 69], "trinari": [40, 69], "ternari": [40, 69], "along": [40, 69, 70], "prioriti": [40, 69], "amount": [40, 66, 69], "unless": [40, 49, 65, 69], "whenev": [40, 69], "multipli": [40, 69], "thru": 41, "unbound": [42, 69], "mutablemap": 43, "state": [44, 69], "dequ": 44, "consum": 44, "receiv": [44, 67], "testcas": [45, 71], "stdlib": [45, 66], "_assertraisescontext": 45, "rather": [45, 68], "against": [45, 67], "overhead": [45, 48], "isn": 45, "major": [45, 48, 69], "methodnam": 45, "runtest": 45, "d1": 45, "d2": 45, "cmd_cl": 45, "envcas": 45, "exctyp": 45, "expected_pattern": 45, "exccas": 45, "expected_exc_msg": 45, "diff_lin": 45, "trim": 45, "sub_text": 45, "name_a": 45, "name_b": 45, "io": [45, 66], "199": 45, "contextmanag": 45, "ignore_cleanup_error": 45, "temporarydirectori": 45, "obj": [47, 70], "max_len": 47, "100": [47, 48], "sep": 47, "enumtyp": 47, "pseudo": 47, "10": [47, 62, 70], "11": 47, "parameter": 47, "break": 47, "chang": [47, 48, 69], "cache_tim": 47, "min_val": 47, "intuit": 48, "orient": 48, "develop": 48, "experi": 48, "id": [48, 57, 62, 65], "renam": 48, "hunt": 48, "keep": 48, "standard": 48, "share": [48, 52, 69], "step": [48, 58, 67], "minim": 48, "extra": [48, 66], "helloworld": [48, 71], "greet": [48, 61, 66, 68, 71], "contact": [48, 61, 71], "fake": [48, 61, 70, 71], "org": [48, 61, 66, 71], "world": [48, 52, 57, 66, 68, 69, 71], "person": [48, 57, 61, 66, 68, 71], "sai": [48, 57, 61, 66, 68, 69, 71], "hello": [48, 52, 63, 66, 68, 69, 71], "don": [48, 66, 70], "anyth": [48, 71], "els": [48, 65, 67, 70], "echo": [48, 52, 53, 67, 69], "join": [48, 69], "__name__": [48, 66, 67, 68, 70], "drop": 48, "modifi": [48, 67], "let": 48, "approach": [48, 51], "__dunder__": 48, "almost": 48, "known": 48, "benefit": 48, "prefer": 48, "anywher": 48, "awar": [48, 57, 70], "logger": 48, "onc": [48, 66, 70, 71], "intermedi": 48, "intention": 48, "low": 48, "freedom": 48, "whatev": 48, "vast": 48, "howev": [48, 70], "presenc": [48, 57], "analog": 48, "claus": 48, "basecommand": 48, "log_fmt": [48, 70], "asctim": [48, 70], "levelnam": [48, 70], "lineno": [48, 70], "debug": [48, 70], "basicconfig": [48, 70], "reason": 48, "improv": 48, "incur": 48, "look": 48, "veri": [48, 66, 67], "perceptibli": 48, "slower": 48, "respons": 48, "longer": [48, 70], "sure": [48, 50], "mind": 48, "rest": [48, 52, 70], "why": 48, "mostli": 48, "camel": 49, "registr": [49, 69], "entry_point": 49, "detail": 49, "usual": [49, 51, 68, 69], "fulfil": 49, "per": 49, "basi": 49, "experiment": 49, "pleas": 49, "report": 49, "tracker": [49, 66], "entireti": 49, "well": [49, 66, 68, 69, 70], "30": [49, 66], "grouped_action_flag": [50, 60, 65], "garbl": 50, "compar": 50, "lack": 50, "putti": 50, "remot": 50, "translat": 50, "categori": [50, 69], "easili": [50, 51, 66, 67], "someth": 50, "save_command_rst": 50, "script_path": 50, "rst_path": 50, "w": [50, 60, 65, 67], "fine": 50, "grain": 50, "out": [50, 58], "guid": 50, "caught": [51, 66], "three": 51, "trace": 51, "everyth": 51, "bug": 51, "broken": 51, "handle_win_os_pipe_error": 51, "mycommand": [51, 69], "__exit__": 51, "less": [51, 67, 69], "tri": 51, "traceback": 51, "myexcept": 51, "handle_my_except": 51, "unabl": 51, "proce": 51, "repo": 51, "face": 51, "With": 52, "complex": [52, 66, 68], "sync": [52, 65, 70], "action_with_arg": [53, 69], "revers": [53, 69], "advanced_subcommand": [54, 70], "basic_subcommand": [55, 70], "command_wrapp": [56, 69], "host": [56, 69], "across": 57, "complex_exampl": 57, "made": 57, "locat": 57, "role": [57, 62, 65], "admin": [57, 62, 65], "l": [57, 62, 70], "custom_input": [58, 67, 71], "in_fil": [58, 67], "out_fil": [58, 67], "49": 58, "29": 58, "19": 58, "p": [58, 62, 67, 70], "j": [58, 67, 71], "choos": [58, 70], "k": 58, "x": [60, 65, 70], "y": [60, 65], "z": [60, 65], "hello_world": [61, 66, 68, 71], "rest_api_wrapp": [62, 65, 70], "dev": [62, 65, 70], "qa": [62, 65, 70], "uat": [62, 65, 70], "prod": [62, 65, 70], "connect": [62, 65, 70], "limit": [62, 70], "queri": [62, 70], "shared_logging_init": 63, "log_test": 63, "simple_flag": [64, 69], "spam": 64, "factor": 64, "apiwrapp": [65, 70], "wait": 65, "no_wait": 65, "taskrunn": 65, "indefinit": 65, "unlik": 65, "ensur": [65, 71], "findbaz": [65, 70], "find_object": [65, 70], "42": 65, "And": 65, "enforc": [65, 66], "itself": 65, "similarli": 65, "refactor": 65, "deep": 65, "rule": 65, "demonstr": 65, "correspond": 65, "letter": 65, "groupedflag": 65, "action_a": 65, "action_b": 65, "action_c": 65, "action_d": 65, "action_w": 65, "action_x": 65, "action_i": 65, "action_z": 65, "ab": 65, "cd": 65, "wx": 65, "wxy": 65, "wxyz": 65, "descriptor": 66, "larg": 66, "easi": 66, "goal": 66, "reduc": 66, "boilerpl": 66, "bob": [66, 71], "pip": 66, "wide": 66, "wcwidth": 66, "2023": 66, "04": 66, "offici": 66, "06": 66, "27": 66, "backport": 66, "astunpars": 66, "relev": [66, 70], "unsur": 66, "introduct": 66, "explan": 66, "introduc": 66, "http": 66, "dskrypa": 66, "github": 66, "com": 66, "pypi": 66, "done": 67, "pathlib": 67, "doesn": 67, "understand": 67, "truncat": 67, "inputsexampl": [67, 71], "bad": 67, "example_out": 67, "txt": 67, "cat": 67, "eagerli": 67, "seen": 67, "plain": 67, "binari": 67, "deseri": 67, "iter_data": 67, "isinst": 67, "enumer": 67, "featur": 67, "redund": 67, "_missing_": 67, "myenum": 67, "flexibl": [67, 69], "8601": 67, "6": [67, 69], "independ": 67, "decim": 67, "mondai": 67, "sundai": 67, "fall": 67, "equal": 67, "earlier": 67, "variat": 68, "john": 68, "own": [68, 70], "principl": 68, "again": [68, 70], "clearer": 69, "differenti": 69, "cast": 69, "pep": 69, "484": 69, "exactli": 69, "n\u2080": 69, "n\u2081": 69, "greater": 69, "n\u2093": 69, "roughli": 69, "clear": 69, "foobar": [69, 70], "parse_arg": 69, "uniqu": 69, "nor": 69, "fbar": 69, "noisycommand": 69, "vv": 69, "v2": 69, "chain": 69, "under": 69, "condit": 69, "setter": 69, "print_twic": 69, "shortcut": 69, "servic": 69, "restart": 69, "act": 69, "customiz": 69, "build_dir": 69, "install_dir": 69, "instal": 69, "backup_dir": 69, "shutil": 69, "check_cal": 69, "as_posix": 69, "cleanup": 69, "rmtree": 69, "therefor": 69, "view": 70, "overli": 70, "simplist": 70, "hypothet": 70, "region": 70, "notimplementederror": 70, "findfoo": 70, "findbar": 70, "show_al": 70, "chr": 70, "97": 70, "123": 70, "endregion": 70, "criteria": 70, "produc": 70, "unrecogn": 70, "put": 70, "aris": 70, "accomplish": 70, "won": 70, "mixin": 70, "reusabl": 70, "success": 71, "unhandl": 71, "assertrais": 71, "systemexit": 71, "intent": 71, "unittest": 71, "helloworldtest": 71, "test_parse_count": 71, "assertequ": 71, "test_parse_name_and_count": 71, "assertdictequ": 71, "temporarili": 71, "contextlib": 71, "redirect_stdout": 71, "redirect_stderr": 71, "test_hello_default": 71, "stream": 71, "test_hello_test": 71, "test_custom_input_json_stdin": 71}, "objects": {"cli_command_parser": [[2, 0, 0, "-", "actions"], [3, 0, 0, "-", "annotations"], [4, 0, 0, "-", "command_parameters"], [5, 0, 0, "-", "commands"], [6, 0, 0, "-", "config"], [7, 0, 0, "-", "context"], [14, 0, 0, "-", "core"], [15, 0, 0, "-", "documentation"], [16, 0, 0, "-", "error_handling"], [17, 0, 0, "-", "exceptions"], [32, 0, 0, "-", "metadata"], [33, 0, 0, "-", "nargs"], [43, 0, 0, "-", "parse_tree"], [44, 0, 0, "-", "parser"], [45, 0, 0, "-", "testing"], [46, 0, 0, "-", "typing"], [47, 0, 0, "-", "utils"]], "cli_command_parser.actions": [[2, 1, 1, "", "help_action"]], "cli_command_parser.annotations": [[3, 1, 1, "", "get_annotation_value_type"], [3, 1, 1, "", "get_args"], [3, 1, 1, "", "get_descriptor_value_type"]], "cli_command_parser.command_parameters": [[4, 2, 1, "", "CommandParameters"]], "cli_command_parser.command_parameters.CommandParameters": [[4, 3, 1, "", "action"], [4, 3, 1, "", "action_flags"], [4, 4, 1, "", "all_positionals"], [4, 4, 1, "", "always_available_action_flags"], [4, 3, 1, "", "combo_option_map"], [4, 3, 1, "", "command"], [4, 3, 1, "", "command_parent"], [4, 5, 1, "", "find_nested_option_that_accepts_values"], [4, 5, 1, "", "find_nested_pass_thru"], [4, 5, 1, "", "find_option_that_accepts_values"], [4, 4, 1, "", "formatter"], [4, 5, 1, "", "get_positionals_to_parse"], [4, 3, 1, "", "groups"], [4, 5, 1, "", "has_matching_short_option"], [4, 5, 1, "", "iter_params"], [4, 5, 1, "", "long_option_to_param_value_pair"], [4, 3, 1, "", "option_map"], [4, 3, 1, "", "options"], [4, 3, 1, "", "parent"], [4, 4, 1, "", "pass_thru"], [4, 3, 1, "", "positionals"], [4, 5, 1, "", "required_check_params"], [4, 5, 1, "", "short_option_to_param_value_pairs"], [4, 3, 1, "", "split_action_flags"], [4, 3, 1, "", "sub_command"], [4, 5, 1, "", "try_env_params"], [4, 5, 1, "", "validate_groups"]], "cli_command_parser.commands": [[5, 2, 1, "", "Command"], [5, 1, 1, "", "main"]], "cli_command_parser.commands.Command": [[5, 5, 1, "", "__call__"], [5, 5, 1, "", "_after_main_"], [5, 5, 1, "", "_before_main_"], [5, 5, 1, "", "_init_command_"], [5, 5, 1, "", "_pre_init_actions_"], [5, 3, 1, "", "ctx"], [5, 5, 1, "", "main"], [5, 5, 1, "", "parse"], [5, 5, 1, "", "parse_and_run"]], "cli_command_parser.commands.Command.__call__.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._after_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._before_main_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._init_command_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._pre_init_actions_.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.main.params": [[5, 6, 1, "", "args"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.parse.params": [[5, 6, 1, "", "argv"]], "cli_command_parser.commands.Command.parse_and_run.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"]], "cli_command_parser.commands.main.params": [[5, 6, 1, "", "argv"], [5, 6, 1, "", "kwargs"], [5, 6, 1, "", "return_command"]], "cli_command_parser.config": [[6, 2, 1, "", "AllowLeadingDash"], [6, 2, 1, "", "AmbiguousComboMode"], [6, 2, 1, "", "CommandConfig"], [6, 2, 1, "", "ConfigItem"], [6, 2, 1, "", "DynamicConfigItem"], [6, 2, 1, "", "OptionNameMode"], [6, 2, 1, "", "ShowDefaults"], [6, 2, 1, "", "SubcommandAliasHelpMode"], [6, 1, 1, "", "config_item"]], "cli_command_parser.config.AllowLeadingDash": [[6, 3, 1, "", "ALWAYS"], [6, 3, 1, "", "NEVER"], [6, 3, 1, "", "NUMERIC"]], "cli_command_parser.config.AmbiguousComboMode": [[6, 3, 1, "", "IGNORE"], [6, 3, 1, "", "PERMISSIVE"], [6, 3, 1, "", "STRICT"]], "cli_command_parser.config.CommandConfig": [[6, 3, 1, "", "FIELDS"], [6, 3, 1, "", "action_after_action_flags"], [6, 3, 1, "", "add_help"], [6, 3, 1, "", "allow_annotation_type"], [6, 3, 1, "", "allow_backtrack"], [6, 3, 1, "", "allow_missing"], [6, 3, 1, "", "always_run_after_main"], [6, 3, 1, "", "ambiguous_short_combos"], [6, 5, 1, "", "as_dict"], [6, 3, 1, "", "choice_delim"], [6, 3, 1, "", "cmd_alias_mode"], [6, 3, 1, "", "command_formatter"], [6, 3, 1, "", "error_handler"], [6, 3, 1, "", "extended_epilog"], [6, 3, 1, "", "ignore_unknown"], [6, 3, 1, "", "min_usage_column_width"], [6, 3, 1, "", "multiple_action_flags"], [6, 3, 1, "", "option_name_mode"], [6, 3, 1, "", "param_formatter"], [6, 3, 1, "", "reject_ambiguous_pos_combos"], [6, 3, 1, "", "show_defaults"], [6, 3, 1, "", "show_docstring"], [6, 3, 1, "", "show_group_tree"], [6, 3, 1, "", "show_group_type"], [6, 3, 1, "", "show_inherited_descriptions"], [6, 3, 1, "", "sort_choices"], [6, 3, 1, "", "sub_cmd_doc_depth"], [6, 3, 1, "", "usage_column_width"], [6, 3, 1, "", "use_type_metavar"], [6, 3, 1, "", "wrap_usage_str"]], "cli_command_parser.config.ConfigItem": [[6, 3, 1, "", "default"], [6, 3, 1, "", "name"], [6, 3, 1, "", "type"]], "cli_command_parser.config.OptionNameMode": [[6, 3, 1, "", "BOTH"], [6, 3, 1, "", "BOTH_DASH"], [6, 3, 1, "", "BOTH_UNDERSCORE"], [6, 3, 1, "", "DASH"], [6, 3, 1, "", "NONE"], [6, 3, 1, "", "UNDERSCORE"]], "cli_command_parser.config.ShowDefaults": [[6, 3, 1, "", "ANY"], [6, 3, 1, "", "MISSING"], [6, 3, 1, "", "NEVER"], [6, 3, 1, "", "NON_EMPTY"], [6, 3, 1, "", "TRUTHY"]], "cli_command_parser.config.SubcommandAliasHelpMode": [[6, 3, 1, "", "ALIAS"], [6, 3, 1, "", "COMBINE"], [6, 3, 1, "", "REPEAT"]], "cli_command_parser.context": [[7, 2, 1, "", "ActionPhase"], [7, 2, 1, "", "Context"], [7, 2, 1, "", "ContextProxy"], [7, 1, 1, "", "get_context"], [7, 1, 1, "", "get_current_context"], [7, 1, 1, "", "get_or_create_context"], [7, 1, 1, "", "get_parsed"], [7, 1, 1, "", "get_raw_arg"]], "cli_command_parser.context.ActionPhase": [[7, 3, 1, "", "AFTER_MAIN"], [7, 3, 1, "", "BEFORE_MAIN"], [7, 3, 1, "", "PRE_INIT"]], "cli_command_parser.context.Context": [[7, 4, 1, "", "action_flag_count"], [7, 4, 1, "", "all_action_flags"], [7, 3, 1, "", "allow_argv_prog"], [7, 4, 1, "", "categorized_action_flags"], [7, 3, 1, "", "config"], [7, 5, 1, "", "for_prog"], [7, 5, 1, "", "get_error_handler"], [7, 5, 1, "", "get_missing"], [7, 5, 1, "", "get_parsed"], [7, 5, 1, "", "get_parsed_value"], [7, 5, 1, "", "has_parsed_value"], [7, 5, 1, "", "iter_action_flags"], [7, 5, 1, "", "num_provided"], [7, 4, 1, "", "params"], [7, 5, 1, "", "pop_parsed_value"], [7, 3, 1, "", "prog"], [7, 5, 1, "", "record_action"], [7, 5, 1, "", "roll_back_parsed_values"], [7, 5, 1, "", "set_parsed_value"], [7, 4, 1, "", "terminal_width"]], "cli_command_parser.context.Context.get_parsed.params": [[7, 6, 1, "", "default"], [7, 6, 1, "", "exclude"], [7, 6, 1, "", "recursive"]], "cli_command_parser.context.Context.iter_action_flags.params": [[7, 6, 1, "", "phase"]], "cli_command_parser.context.ContextProxy": [[7, 4, 1, "", "config"], [7, 5, 1, "", "get_parsed_value"], [7, 5, 1, "", "has_parsed_value"], [7, 5, 1, "", "num_provided"], [7, 5, 1, "", "record_action"], [7, 5, 1, "", "set_parsed_value"], [7, 4, 1, "", "terminal_width"]], "cli_command_parser.context.get_context.params": [[7, 6, 1, "", "command"]], "cli_command_parser.context.get_current_context.params": [[7, 6, 1, "", "silent"]], "cli_command_parser.context.get_parsed.params": [[7, 6, 1, "", "command"], [7, 6, 1, "", "default"], [7, 6, 1, "", "to_call"]], "cli_command_parser.conversion": [[9, 0, 0, "-", "argparse_ast"], [10, 0, 0, "-", "argparse_utils"], [11, 0, 0, "-", "command_builder"], [12, 0, 0, "-", "utils"], [13, 0, 0, "-", "visitor"]], "cli_command_parser.conversion.argparse_ast": [[9, 2, 1, "", "AddVisitedChild"], [9, 2, 1, "", "ArgCollection"], [9, 2, 1, "", "ArgGroup"], [9, 2, 1, "", "AstArgumentParser"], [9, 2, 1, "", "AstCallable"], [9, 2, 1, "", "MutuallyExclusiveGroup"], [9, 2, 1, "", "ParserArg"], [9, 2, 1, "", "Script"], [9, 2, 1, "", "SubParser"], [9, 2, 1, "", "SubparsersAction"], [9, 2, 1, "", "visit_func"]], "cli_command_parser.conversion.argparse_ast.AddVisitedChild": [[9, 3, 1, "", "child_cls"], [9, 3, 1, "", "list_attr"]], "cli_command_parser.conversion.argparse_ast.ArgCollection": [[9, 5, 1, "", "__init_subclass__"], [9, 3, 1, "", "add_argument"], [9, 5, 1, "", "add_argument_group"], [9, 5, 1, "", "add_mutually_exclusive_group"], [9, 3, 1, "", "args"], [9, 5, 1, "", "grouped_children"], [9, 3, 1, "", "groups"], [9, 3, 1, "", "parent"], [9, 5, 1, "", "pprint"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.ArgGroup": [[9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.AstArgumentParser": [[9, 3, 1, "", "add_subparsers"], [9, 3, 1, "", "represents"], [9, 3, 1, "", "sub_parsers"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.AstCallable": [[9, 5, 1, "", "__init_subclass__"], [9, 5, 1, "", "get_tracked_refs"], [9, 5, 1, "", "init_call_repr"], [9, 4, 1, "", "init_func_args"], [9, 4, 1, "", "init_func_kwargs"], [9, 4, 1, "", "init_func_name"], [9, 4, 1, "", "init_func_raw_kwargs"], [9, 5, 1, "", "pprint"], [9, 3, 1, "", "represents"], [9, 4, 1, "", "signature"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup": [[9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.ParserArg": [[9, 3, 1, "", "parent"], [9, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.Script": [[9, 5, 1, "", "add_parser"], [9, 4, 1, "", "mod_cls_to_ast_cls_map"], [9, 4, 1, "", "parsers"], [9, 3, 1, "", "path"], [9, 5, 1, "", "register_parser"]], "cli_command_parser.conversion.argparse_ast.SubParser": [[9, 4, 1, "", "init_func_kwargs"], [9, 5, 1, "", "represents"], [9, 3, 1, "", "sp_parent"]], "cli_command_parser.conversion.argparse_ast.SubparsersAction": [[9, 5, 1, "", "add_parser"], [9, 3, 1, "", "parent"], [9, 5, 1, "", "represents"], [9, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.visit_func": [[9, 3, 1, "", "func"]], "cli_command_parser.conversion.argparse_utils": [[10, 2, 1, "", "ArgumentParser"], [10, 2, 1, "", "SubParsersAction"]], "cli_command_parser.conversion.argparse_utils.ArgumentParser": [[10, 5, 1, "", "add_argument_group"], [10, 5, 1, "", "add_mutually_exclusive_group"], [10, 5, 1, "", "add_subparsers"]], "cli_command_parser.conversion.argparse_utils.SubParsersAction": [[10, 5, 1, "", "add_parser"]], "cli_command_parser.conversion.command_builder": [[11, 2, 1, "", "BaseArgs"], [11, 2, 1, "", "CollectionConverter"], [11, 2, 1, "", "CommandArgs"], [11, 7, 1, "", "ConversionError"], [11, 2, 1, "", "Converter"], [11, 2, 1, "", "ConverterGroup"], [11, 2, 1, "", "FlagArgs"], [11, 2, 1, "", "GroupConverter"], [11, 2, 1, "", "OptionArgs"], [11, 2, 1, "", "ParamArgs"], [11, 2, 1, "", "ParamBaseArgs"], [11, 2, 1, "", "ParamConverter"], [11, 2, 1, "", "ParamConverterGroup"], [11, 2, 1, "", "ParserConverter"], [11, 2, 1, "", "PassThruArgs"], [11, 2, 1, "", "ScriptConverter"], [11, 1, 1, "", "convert_script"], [11, 1, 1, "", "literal_eval_or_none"]], "cli_command_parser.conversion.command_builder.BaseArgs": [[11, 5, 1, "", "from_kwargs"], [11, 3, 1, "", "help"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.CollectionConverter": [[11, 3, 1, "", "ast_obj"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_members"], [11, 4, 1, "", "grouped_children"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.CommandArgs": [[11, 3, 1, "", "add_help"], [11, 3, 1, "", "choice"], [11, 3, 1, "", "choices"], [11, 3, 1, "", "description"], [11, 3, 1, "", "docs_url"], [11, 3, 1, "", "email"], [11, 3, 1, "", "epilog"], [11, 3, 1, "", "option_name_mode"], [11, 3, 1, "", "prog"], [11, 3, 1, "", "usage"]], "cli_command_parser.conversion.command_builder.Converter": [[11, 5, 1, "", "__init_subclass__"], [11, 5, 1, "", "convert"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "for_ast_callable"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "init_for_ast_callable"], [11, 5, 1, "", "init_group"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.ConverterGroup": [[11, 5, 1, "", "format_all"], [11, 3, 1, "", "member_type"], [11, 3, 1, "", "members"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.FlagArgs": [[11, 3, 1, "", "const"], [11, 5, 1, "", "init_counter"], [11, 5, 1, "", "init_flag"]], "cli_command_parser.conversion.command_builder.GroupConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.OptionArgs": [[11, 5, 1, "", "init_option"], [11, 3, 1, "", "name_mode"]], "cli_command_parser.conversion.command_builder.ParamArgs": [[11, 3, 1, "", "action"], [11, 3, 1, "", "choices"], [11, 5, 1, "", "init_positional"], [11, 3, 1, "", "nargs"], [11, 3, 1, "", "type"]], "cli_command_parser.conversion.command_builder.ParamBaseArgs": [[11, 3, 1, "", "default"], [11, 3, 1, "", "hide"], [11, 3, 1, "", "metavar"], [11, 3, 1, "", "name"], [11, 3, 1, "", "required"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.ParamConverter": [[11, 3, 1, "", "ast_obj"], [11, 4, 1, "", "attr_name"], [11, 4, 1, "", "cmd_option_strs"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "get_cls_and_kwargs"], [11, 5, 1, "", "get_pos_args"], [11, 5, 1, "", "init_group"], [11, 4, 1, "", "is_option"], [11, 4, 1, "", "is_pass_thru"], [11, 4, 1, "", "is_positional"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "use_auto_long_opt_str"]], "cli_command_parser.conversion.command_builder.ParamConverterGroup": [[11, 5, 1, "", "format_all"]], "cli_command_parser.conversion.command_builder.ParserConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_lines"], [11, 4, 1, "", "is_sub_parser"], [11, 4, 1, "", "name"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "sub_parser_converters"]], "cli_command_parser.conversion.command_builder.ScriptConverter": [[11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"]], "cli_command_parser.conversion.utils": [[12, 1, 1, "", "collection_contents"], [12, 1, 1, "", "get_name_repr"], [12, 1, 1, "", "iter_module_parents"]], "cli_command_parser.conversion.visitor": [[13, 2, 1, "", "ScopedVisit"], [13, 2, 1, "", "ScriptVisitor"], [13, 2, 1, "", "TrackedRef"], [13, 1, 1, "", "imp_names"], [13, 1, 1, "", "scoped"]], "cli_command_parser.conversion.visitor.ScriptVisitor": [[13, 5, 1, "", "get_tracked_refs"], [13, 5, 1, "", "resolve_ref"], [13, 5, 1, "", "track_callable"], [13, 5, 1, "", "track_refs_to"], [13, 5, 1, "", "visit_Assign"], [13, 5, 1, "", "visit_AsyncFor"], [13, 3, 1, "", "visit_AsyncFunctionDef"], [13, 5, 1, "", "visit_Call"], [13, 3, 1, "", "visit_ClassDef"], [13, 5, 1, "", "visit_For"], [13, 3, 1, "", "visit_FunctionDef"], [13, 5, 1, "", "visit_Import"], [13, 5, 1, "", "visit_ImportFrom"], [13, 3, 1, "", "visit_Lambda"], [13, 3, 1, "", "visit_While"], [13, 5, 1, "", "visit_withitem"]], "cli_command_parser.conversion.visitor.TrackedRef": [[13, 3, 1, "", "module"], [13, 3, 1, "", "name"]], "cli_command_parser.core": [[14, 2, 1, "", "CommandMeta"], [14, 1, 1, "", "get_config"], [14, 1, 1, "", "get_metadata"], [14, 1, 1, "", "get_params"], [14, 1, 1, "", "get_parent"], [14, 1, 1, "", "get_top_level_commands"]], "cli_command_parser.core.CommandMeta": [[14, 5, 1, "", "config"], [14, 5, 1, "", "meta"], [14, 5, 1, "", "params"], [14, 5, 1, "", "parent"]], "cli_command_parser.core.CommandMeta.params": [[14, 6, 1, "", "action_after_action_flags"], [14, 6, 1, "", "add_help"], [14, 6, 1, "", "allow_missing"], [14, 6, 1, "", "always_run_after_main"], [14, 6, 1, "", "choice"], [14, 6, 1, "", "choices"], [14, 6, 1, "", "description"], [14, 6, 1, "", "doc_name"], [14, 6, 1, "", "epilog"], [14, 6, 1, "", "error_handler"], [14, 6, 1, "", "help"], [14, 6, 1, "", "ignore_unknown"], [14, 6, 1, "", "multiple_action_flags"], [14, 6, 1, "", "prog"], [14, 6, 1, "", "usage"]], "cli_command_parser.core.CommandMeta.parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.core.get_parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.documentation": [[15, 2, 1, "", "RstWriter"], [15, 1, 1, "", "filtered_commands"], [15, 1, 1, "", "import_module"], [15, 1, 1, "", "load_commands"], [15, 1, 1, "", "render_command_rst"], [15, 1, 1, "", "render_script_rst"], [15, 1, 1, "", "top_level_commands"]], "cli_command_parser.documentation.RstWriter": [[15, 5, 1, "", "document_module"], [15, 5, 1, "", "document_package"], [15, 5, 1, "", "document_script"], [15, 5, 1, "", "document_scripts"], [15, 5, 1, "", "write_index"], [15, 5, 1, "", "write_rst"]], "cli_command_parser.documentation.RstWriter.document_module.params": [[15, 6, 1, "", "module"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_package.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "empty"], [15, 6, 1, "", "header"], [15, 6, 1, "", "index"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "pkg_name"], [15, 6, 1, "", "pkg_path"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_script.params": [[15, 6, 1, "", "kwargs"], [15, 6, 1, "", "name"], [15, 6, 1, "", "path"], [15, 6, 1, "", "replacements"], [15, 6, 1, "", "subdir"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.RstWriter.params": [[15, 6, 1, "", "dry_run"], [15, 6, 1, "", "encoding"], [15, 6, 1, "", "ext"], [15, 6, 1, "", "module_template"], [15, 6, 1, "", "newline"], [15, 6, 1, "", "output_dir"], [15, 6, 1, "", "skip_modules"]], "cli_command_parser.documentation.RstWriter.write_index.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "content_subdir"], [15, 6, 1, "", "contents"], [15, 6, 1, "", "header"], [15, 6, 1, "", "kwargs"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.load_commands.params": [[15, 6, 1, "", "include_abc"], [15, 6, 1, "", "path"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.render_command_rst.params": [[15, 6, 1, "", "command"], [15, 6, 1, "", "fix_name"], [15, 6, 1, "", "fix_name_func"]], "cli_command_parser.error_handling": [[16, 2, 1, "", "ErrorHandler"], [16, 2, 1, "", "Handler"], [16, 2, 1, "", "NullErrorHandler"], [16, 8, 1, "", "error_handler"], [16, 8, 1, "", "extended_error_handler"], [16, 1, 1, "", "handle_kb_interrupt"], [16, 8, 1, "", "no_exit_handler"]], "cli_command_parser.error_handling.ErrorHandler": [[16, 5, 1, "", "__call__"], [16, 5, 1, "", "cls_handler"], [16, 5, 1, "", "copy"], [16, 3, 1, "", "exc_handler_map"], [16, 5, 1, "", "iter_handlers"], [16, 5, 1, "", "register"], [16, 5, 1, "", "unregister"]], "cli_command_parser.error_handling.Handler": [[16, 3, 1, "", "exc_cls"], [16, 3, 1, "", "handler"]], "cli_command_parser.exceptions": [[17, 7, 1, "", "AmbiguousCombo"], [17, 7, 1, "", "AmbiguousParseTree"], [17, 7, 1, "", "AmbiguousShortForm"], [17, 7, 1, "", "Backtrack"], [17, 7, 1, "", "BadArgument"], [17, 7, 1, "", "CommandDefinitionError"], [17, 7, 1, "", "CommandParserException"], [17, 7, 1, "", "InvalidChoice"], [17, 7, 1, "", "MissingArgument"], [17, 7, 1, "", "MultiParamUsageError"], [17, 7, 1, "", "NextCommand"], [17, 7, 1, "", "NoActiveContext"], [17, 7, 1, "", "NoSuchOption"], [17, 7, 1, "", "ParamConflict"], [17, 7, 1, "", "ParamUsageError"], [17, 7, 1, "", "ParameterDefinitionError"], [17, 7, 1, "", "ParamsMissing"], [17, 7, 1, "", "ParserExit"], [17, 7, 1, "", "TooManyArguments"], [17, 7, 1, "", "UsageError"]], "cli_command_parser.exceptions.CommandParserException": [[17, 3, 1, "", "code"], [17, 5, 1, "", "exit"], [17, 5, 1, "", "show"]], "cli_command_parser.exceptions.MissingArgument": [[17, 3, 1, "", "message"]], "cli_command_parser.exceptions.UsageError": [[17, 3, 1, "", "message"]], "cli_command_parser.formatting": [[19, 0, 0, "-", "commands"], [20, 0, 0, "-", "params"], [21, 0, 0, "-", "restructured_text"], [22, 0, 0, "-", "utils"]], "cli_command_parser.formatting.commands": [[19, 2, 1, "", "CommandHelpFormatter"], [19, 1, 1, "", "get_formatter"], [19, 1, 1, "", "get_usage_sub_cmds"]], "cli_command_parser.formatting.commands.CommandHelpFormatter": [[19, 5, 1, "", "format_help"], [19, 5, 1, "", "format_rst"], [19, 5, 1, "", "format_usage"], [19, 5, 1, "", "maybe_add_groups"], [19, 5, 1, "", "maybe_add_option"], [19, 5, 1, "", "maybe_add_options"], [19, 5, 1, "", "maybe_add_positionals"]], "cli_command_parser.formatting.params": [[20, 2, 1, "", "ChoiceGroup"], [20, 2, 1, "", "ChoiceMapHelpFormatter"], [20, 2, 1, "", "GroupHelpFormatter"], [20, 2, 1, "", "OptionHelpFormatter"], [20, 2, 1, "", "ParamHelpFormatter"], [20, 2, 1, "", "PassThruHelpFormatter"], [20, 2, 1, "", "PositionalHelpFormatter"], [20, 2, 1, "", "TriFlagHelpFormatter"]], "cli_command_parser.formatting.params.ChoiceGroup": [[20, 5, 1, "", "add"], [20, 3, 1, "", "choice_strs"], [20, 3, 1, "", "choices"], [20, 5, 1, "", "format"], [20, 5, 1, "", "group_choices"], [20, 5, 1, "", "prepare"], [20, 5, 1, "", "prepare_aliases"], [20, 5, 1, "", "prepare_combined"], [20, 5, 1, "", "prepare_repeated"]], "cli_command_parser.formatting.params.ChoiceGroup.format.params": [[20, 6, 1, "", "default_mode"], [20, 6, 1, "", "prefix"], [20, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.ChoiceGroup.group_choices.params": [[20, 6, 1, "", "choices"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare.params": [[20, 6, 1, "", "default_mode"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases.params": [[20, 6, 1, "", "format_str"]], "cli_command_parser.formatting.params.ChoiceMapHelpFormatter": [[20, 4, 1, "", "choice_groups"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter.format_help.params": [[20, 6, 1, "", "clean"], [20, 6, 1, "", "prefix"], [20, 6, 1, "", "tw_offset"]], "cli_command_parser.formatting.params.OptionHelpFormatter": [[20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.ParamHelpFormatter": [[20, 5, 1, "", "__init_subclass__"], [20, 5, 1, "", "for_param_cls"], [20, 5, 1, "", "format_basic_usage"], [20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 5, 1, "", "maybe_wrap_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_row"], [20, 5, 1, "", "rst_rows"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.PassThruHelpFormatter": [[20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"]], "cli_command_parser.formatting.params.PositionalHelpFormatter": [[20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"]], "cli_command_parser.formatting.params.TriFlagHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_rows"]], "cli_command_parser.formatting.restructured_text": [[21, 2, 1, "", "RstTable"], [21, 1, 1, "", "rst_bar"], [21, 1, 1, "", "rst_directive"], [21, 1, 1, "", "rst_header"], [21, 1, 1, "", "rst_list_table"], [21, 1, 1, "", "rst_toc_tree"], [21, 1, 1, "", "spaced_rst_header"]], "cli_command_parser.formatting.restructured_text.RstTable": [[21, 5, 1, "", "add_dict_rows"], [21, 5, 1, "", "add_kv_rows"], [21, 5, 1, "", "add_row"], [21, 5, 1, "", "add_rows"], [21, 5, 1, "", "bar"], [21, 5, 1, "", "from_dict"], [21, 5, 1, "", "from_dicts"], [21, 5, 1, "", "iter_build"], [21, 3, 1, "", "rows"], [21, 3, 1, "", "show_title"], [21, 3, 1, "", "subtitle"], [21, 3, 1, "", "title"], [21, 3, 1, "", "use_table_directive"], [21, 3, 1, "", "widths"]], "cli_command_parser.formatting.restructured_text.RstTable.add_row.params": [[21, 6, 1, "", "columns"], [21, 6, 1, "", "header"], [21, 6, 1, "", "index"]], "cli_command_parser.formatting.restructured_text.RstTable.bar.params": [[21, 6, 1, "", "char"]], "cli_command_parser.formatting.restructured_text.RstTable.params": [[21, 6, 1, "", "headers"], [21, 6, 1, "", "show_title"], [21, 6, 1, "", "subtitle"], [21, 6, 1, "", "title"], [21, 6, 1, "", "use_table_directive"]], "cli_command_parser.formatting.restructured_text.rst_toc_tree.params": [[21, 6, 1, "", "content_fmt"], [21, 6, 1, "", "contents"], [21, 6, 1, "", "kwargs"], [21, 6, 1, "", "max_depth"], [21, 6, 1, "", "name"]], "cli_command_parser.formatting.utils": [[22, 1, 1, "", "combine_and_wrap"], [22, 1, 1, "", "format_help_entry"], [22, 1, 1, "", "line_iter"]], "cli_command_parser.inputs": [[24, 0, 0, "-", "base"], [25, 0, 0, "-", "choices"], [26, 0, 0, "-", "exceptions"], [27, 0, 0, "-", "files"], [28, 0, 0, "-", "numeric"], [29, 0, 0, "-", "patterns"], [30, 0, 0, "-", "time"], [31, 0, 0, "-", "utils"]], "cli_command_parser.inputs.base": [[24, 2, 1, "", "InputType"]], "cli_command_parser.inputs.base.InputType": [[24, 5, 1, "", "__call__"], [24, 5, 1, "", "fix_default"], [24, 5, 1, "", "format_metavar"], [24, 5, 1, "", "is_valid_type"]], "cli_command_parser.inputs.base.InputType.is_valid_type.params": [[24, 6, 1, "", "value"]], "cli_command_parser.inputs.choices": [[25, 2, 1, "", "ChoiceMap"], [25, 2, 1, "", "Choices"], [25, 2, 1, "", "EnumChoices"]], "cli_command_parser.inputs.choices.ChoiceMap": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.ChoiceMap.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.Choices": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.Choices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.EnumChoices": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.EnumChoices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "enum"]], "cli_command_parser.inputs.exceptions": [[26, 7, 1, "", "InputValidationError"], [26, 7, 1, "", "InvalidChoiceError"]], "cli_command_parser.inputs.files": [[27, 2, 1, "", "File"], [27, 2, 1, "", "FileInput"], [27, 2, 1, "", "Json"], [27, 2, 1, "", "Path"], [27, 2, 1, "", "Pickle"], [27, 2, 1, "", "Serialized"]], "cli_command_parser.inputs.files.File": [[27, 5, 1, "", "__call__"], [27, 3, 1, "", "encoding"], [27, 3, 1, "", "errors"], [27, 3, 1, "", "lazy"], [27, 3, 1, "", "mode"], [27, 3, 1, "", "parents"], [27, 3, 1, "", "type"]], "cli_command_parser.inputs.files.File.params": [[27, 6, 1, "", "encoding"], [27, 6, 1, "", "errors"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "lazy"], [27, 6, 1, "", "mode"], [27, 6, 1, "", "parents"]], "cli_command_parser.inputs.files.FileInput": [[27, 3, 1, "", "allow_dash"], [27, 3, 1, "", "exists"], [27, 3, 1, "", "expand"], [27, 5, 1, "", "fix_default"], [27, 3, 1, "", "readable"], [27, 3, 1, "", "resolve"], [27, 3, 1, "", "type"], [27, 3, 1, "", "use_windows_fix"], [27, 5, 1, "", "validated_path"], [27, 3, 1, "", "writable"]], "cli_command_parser.inputs.files.Json.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Path": [[27, 5, 1, "", "__call__"]], "cli_command_parser.inputs.files.Path.params": [[27, 6, 1, "", "allow_dash"], [27, 6, 1, "", "exists"], [27, 6, 1, "", "expand"], [27, 6, 1, "", "fix_default"], [27, 6, 1, "", "readable"], [27, 6, 1, "", "resolve"], [27, 6, 1, "", "type"], [27, 6, 1, "", "use_windows_fix"], [27, 6, 1, "", "writable"]], "cli_command_parser.inputs.files.Pickle.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Serialized": [[27, 3, 1, "", "converter"], [27, 3, 1, "", "pass_file"]], "cli_command_parser.inputs.files.Serialized.params": [[27, 6, 1, "", "converter"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "pass_file"]], "cli_command_parser.inputs.numeric": [[28, 2, 1, "", "NumRange"], [28, 2, 1, "", "NumericInput"], [28, 2, 1, "", "Range"]], "cli_command_parser.inputs.numeric.NumRange": [[28, 5, 1, "", "__call__"], [28, 5, 1, "", "handle_invalid"], [28, 3, 1, "", "include_max"], [28, 3, 1, "", "include_min"], [28, 3, 1, "", "max"], [28, 3, 1, "", "min"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumRange.handle_invalid.params": [[28, 6, 1, "", "bound"], [28, 6, 1, "", "inclusive"], [28, 6, 1, "", "snap_dir"]], "cli_command_parser.inputs.numeric.NumRange.params": [[28, 6, 1, "", "fix_default"], [28, 6, 1, "", "include_max"], [28, 6, 1, "", "include_min"], [28, 6, 1, "", "max"], [28, 6, 1, "", "min"], [28, 6, 1, "", "snap"], [28, 6, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput": [[28, 5, 1, "", "fix_default"], [28, 5, 1, "", "format_metavar"], [28, 5, 1, "", "is_valid_type"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput.is_valid_type.params": [[28, 6, 1, "", "value"]], "cli_command_parser.inputs.numeric.Range": [[28, 5, 1, "", "__call__"], [28, 3, 1, "", "range"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.Range.params": [[28, 6, 1, "", "fix_default"], [28, 6, 1, "", "range"], [28, 6, 1, "", "snap"], [28, 6, 1, "", "type"]], "cli_command_parser.inputs.patterns": [[29, 2, 1, "", "Glob"], [29, 2, 1, "", "PatternInput"], [29, 2, 1, "", "Regex"], [29, 2, 1, "", "RegexMode"]], "cli_command_parser.inputs.patterns.Glob": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "normcase"]], "cli_command_parser.inputs.patterns.Glob.params": [[29, 6, 1, "", "match_case"], [29, 6, 1, "", "normcase"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.PatternInput": [[29, 5, 1, "", "format_metavar"], [29, 3, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.Regex": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "group"], [29, 3, 1, "", "groups"], [29, 3, 1, "", "mode"]], "cli_command_parser.inputs.patterns.Regex.params": [[29, 6, 1, "", "group"], [29, 6, 1, "", "groups"], [29, 6, 1, "", "mode"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.RegexMode": [[29, 3, 1, "", "DICT"], [29, 3, 1, "", "GROUP"], [29, 3, 1, "", "GROUPS"], [29, 3, 1, "", "MATCH"], [29, 3, 1, "", "STRING"], [29, 5, 1, "", "normalize"]], "cli_command_parser.inputs.time": [[30, 2, 1, "", "CalendarUnitInput"], [30, 2, 1, "", "DTFormatMode"], [30, 2, 1, "", "DTInput"], [30, 2, 1, "", "Date"], [30, 2, 1, "", "DateTime"], [30, 2, 1, "", "DateTimeInput"], [30, 2, 1, "", "Day"], [30, 2, 1, "", "Month"], [30, 2, 1, "", "Time"], [30, 2, 1, "", "TimeDelta"], [30, 2, 1, "", "different_locale"], [30, 1, 1, "", "dt_repr"], [30, 1, 1, "", "normalize_dt"]], "cli_command_parser.inputs.time.CalendarUnitInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 3, 1, "", "abbreviation"], [30, 5, 1, "", "choice_str"], [30, 5, 1, "", "choices"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "full"], [30, 3, 1, "", "numeric"], [30, 3, 1, "", "out_format"], [30, 3, 1, "", "out_locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.CalendarUnitInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.CalendarUnitInput.parse.params": [[30, 6, 1, "", "value"]], "cli_command_parser.inputs.time.DTFormatMode": [[30, 3, 1, "", "ABBREVIATION"], [30, 3, 1, "", "FULL"], [30, 3, 1, "", "NUMERIC"], [30, 3, 1, "", "NUMERIC_ISO"]], "cli_command_parser.inputs.time.DTInput": [[30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "fix_default"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DTInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Date": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTime": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTimeInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 4, 1, "", "earliest"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "formats"], [30, 4, 1, "", "latest"], [30, 3, 1, "", "locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_dt"]], "cli_command_parser.inputs.time.DateTimeInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Day": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "iso"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Month": [[30, 3, 1, "", "dt_type"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Time": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.TimeDelta": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "fix_default"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "unit"]], "cli_command_parser.inputs.time.different_locale": [[30, 3, 1, "", "locale"], [30, 3, 1, "", "original"]], "cli_command_parser.inputs.utils": [[31, 2, 1, "", "FileWrapper"], [31, 2, 1, "", "InputParam"], [31, 2, 1, "", "StatMode"], [31, 1, 1, "", "allows_write"], [31, 1, 1, "", "fix_windows_path"]], "cli_command_parser.inputs.utils.FileWrapper": [[31, 5, 1, "", "close"], [31, 5, 1, "", "read"], [31, 5, 1, "", "write"]], "cli_command_parser.inputs.utils.InputParam": [[31, 3, 1, "", "default"], [31, 3, 1, "", "name"]], "cli_command_parser.inputs.utils.StatMode": [[31, 3, 1, "", "ANY"], [31, 3, 1, "", "BLOCK"], [31, 3, 1, "", "CHARACTER"], [31, 3, 1, "", "DIR"], [31, 3, 1, "", "FIFO"], [31, 3, 1, "", "FILE"], [31, 3, 1, "", "LINK"], [31, 3, 1, "", "SOCKET"], [31, 5, 1, "", "matches"]], "cli_command_parser.metadata": [[32, 2, 1, "", "DynamicMetadata"], [32, 2, 1, "", "Metadata"], [32, 2, 1, "", "MetadataBase"], [32, 2, 1, "", "ProgFinder"], [32, 2, 1, "", "ProgramMetadata"], [32, 1, 1, "", "dynamic_metadata"]], "cli_command_parser.metadata.DynamicMetadata": [[32, 3, 1, "", "func"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.Metadata": [[32, 3, 1, "", "default"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.MetadataBase": [[32, 5, 1, "", "get_parent"], [32, 5, 1, "", "get_value"], [32, 3, 1, "", "inheritable"], [32, 3, 1, "", "name"]], "cli_command_parser.metadata.ProgFinder": [[32, 4, 1, "", "mod_obj_prog_map"], [32, 5, 1, "", "normalize"]], "cli_command_parser.metadata.ProgramMetadata": [[32, 3, 1, "", "cmd_module"], [32, 3, 1, "", "command"], [32, 3, 1, "", "description"], [32, 3, 1, "", "doc_name"], [32, 3, 1, "", "doc_str"], [32, 3, 1, "", "docs_url"], [32, 3, 1, "", "email"], [32, 3, 1, "", "epilog"], [32, 5, 1, "", "for_command"], [32, 5, 1, "", "format_epilog"], [32, 5, 1, "", "get_description"], [32, 5, 1, "", "get_doc_str"], [32, 5, 1, "", "get_prog"], [32, 3, 1, "", "module"], [32, 3, 1, "", "package"], [32, 3, 1, "", "parent"], [32, 3, 1, "", "path"], [32, 3, 1, "", "pkg_doc_str"], [32, 3, 1, "", "prog"], [32, 3, 1, "", "url"], [32, 3, 1, "", "usage"], [32, 3, 1, "", "version"]], "cli_command_parser.nargs": [[33, 2, 1, "", "Nargs"], [33, 1, 1, "", "nargs_min_and_max_sums"]], "cli_command_parser.nargs.Nargs": [[33, 3, 1, "", "allowed"], [33, 4, 1, "", "has_upper_bound"], [33, 3, 1, "", "max"], [33, 5, 1, "", "max_reached"], [33, 3, 1, "", "min"], [33, 3, 1, "", "range"], [33, 5, 1, "", "satisfied"], [33, 4, 1, "", "upper_bound"], [33, 3, 1, "", "variable"]], "cli_command_parser.nargs.Nargs.max_reached.params": [[33, 6, 1, "", "parsed_values"]], "cli_command_parser.parameters": [[35, 0, 0, "-", "actions"], [36, 0, 0, "-", "base"], [37, 0, 0, "-", "choice_map"], [38, 0, 0, "-", "groups"], [39, 0, 0, "-", "option_strings"], [40, 0, 0, "-", "options"], [41, 0, 0, "-", "pass_thru"], [42, 0, 0, "-", "positionals"]], "cli_command_parser.parameters.actions": [[35, 2, 1, "", "Append"], [35, 2, 1, "", "AppendConst"], [35, 2, 1, "", "BasicConstAction"], [35, 2, 1, "", "Concatenate"], [35, 2, 1, "", "ConstMixin"], [35, 2, 1, "", "Count"], [35, 2, 1, "", "ParamAction"], [35, 2, 1, "", "Store"], [35, 2, 1, "", "StoreAll"], [35, 2, 1, "", "StoreConst"], [35, 2, 1, "", "ValueMixin"]], "cli_command_parser.parameters.actions.Append": [[35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_value"], [35, 5, 1, "", "can_reset"], [35, 3, 1, "", "default_nargs"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 5, 1, "", "get_default"], [35, 5, 1, "", "get_maybe_poppable_counts"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.Append.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.AppendConst": [[35, 5, 1, "", "add_const"], [35, 5, 1, "", "get_default"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.BasicConstAction": [[35, 3, 1, "", "accepts_consts"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.BasicConstAction.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.Concatenate": [[35, 5, 1, "", "add_value"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.Concatenate.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.ConstMixin": [[35, 5, 1, "", "__init_subclass__"], [35, 3, 1, "", "add_const"], [35, 5, 1, "", "add_env_value"], [35, 3, 1, "", "add_value"], [35, 5, 1, "", "append_const"], [35, 3, 1, "", "get_default"], [35, 3, 1, "", "param"], [35, 5, 1, "", "set_const"]], "cli_command_parser.parameters.actions.Count": [[35, 3, 1, "", "accepts_consts"], [35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_const"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.Count.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.ParamAction": [[35, 5, 1, "", "__init_subclass__"], [35, 3, 1, "", "accepts_consts"], [35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_const"], [35, 5, 1, "", "add_env_value"], [35, 5, 1, "", "add_value"], [35, 5, 1, "", "can_reset"], [35, 3, 1, "", "default"], [35, 4, 1, "", "default_nargs"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 5, 1, "", "get_default"], [35, 5, 1, "", "get_maybe_poppable_counts"], [35, 3, 1, "", "name"], [35, 3, 1, "", "param"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.ParamAction.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.Store": [[35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.Store.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.StoreAll": [[35, 5, 1, "", "add_values"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.StoreConst": [[35, 5, 1, "", "add_const"], [35, 3, 1, "", "default"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.ValueMixin": [[35, 5, 1, "", "append_value"], [35, 3, 1, "", "get_default"], [35, 3, 1, "", "param"], [35, 5, 1, "", "set_value"]], "cli_command_parser.parameters.base": [[36, 2, 1, "", "AllowLeadingDashProperty"], [36, 2, 1, "", "BaseOption"], [36, 2, 1, "", "BasePositional"], [36, 2, 1, "", "ParamBase"], [36, 2, 1, "", "Parameter"]], "cli_command_parser.parameters.base.AllowLeadingDashProperty": [[36, 3, 1, "", "default"], [36, 3, 1, "", "name"]], "cli_command_parser.parameters.base.BaseOption": [[36, 3, 1, "", "const"], [36, 3, 1, "", "env_var"], [36, 5, 1, "", "env_vars"], [36, 5, 1, "", "get_const"], [36, 3, 1, "", "option_strs"], [36, 3, 1, "", "strict_env"], [36, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.base.BaseOption.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "env_var"], [36, 6, 1, "", "kwargs"], [36, 6, 1, "", "name_mode"], [36, 6, 1, "", "option_strs"], [36, 6, 1, "", "strict_env"], [36, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.base.BasePositional": [[36, 5, 1, "", "__init_subclass__"]], "cli_command_parser.parameters.base.BasePositional.__init_subclass__.params": [[36, 6, 1, "", "default_ok"], [36, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.BasePositional.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.ParamBase": [[36, 3, 1, "", "command"], [36, 5, 1, "", "format_help"], [36, 5, 1, "", "format_usage"], [36, 4, 1, "", "formatter"], [36, 3, 1, "", "group"], [36, 3, 1, "", "help"], [36, 3, 1, "", "hide"], [36, 3, 1, "", "missing_hint"], [36, 4, 1, "", "name"], [36, 3, 1, "", "required"], [36, 4, 1, "", "show_in_help"]], "cli_command_parser.parameters.base.ParamBase.params": [[36, 6, 1, "", "help"], [36, 6, 1, "", "hide"], [36, 6, 1, "", "name"], [36, 6, 1, "", "required"]], "cli_command_parser.parameters.base.Parameter": [[36, 5, 1, "", "__init_subclass__"], [36, 3, 1, "", "allow_leading_dash"], [36, 5, 1, "", "get_const"], [36, 5, 1, "", "get_env_const"], [36, 4, 1, "", "has_choices"], [36, 5, 1, "", "is_valid_arg"], [36, 3, 1, "", "metavar"], [36, 3, 1, "", "nargs"], [36, 5, 1, "", "prepare_value"], [36, 5, 1, "", "result"], [36, 5, 1, "", "result_value"], [36, 3, 1, "", "show_default"], [36, 4, 1, "", "show_in_help"], [36, 3, 1, "", "strict_default"], [36, 3, 1, "", "type"], [36, 5, 1, "", "validate"]], "cli_command_parser.parameters.base.Parameter.__init_subclass__.params": [[36, 6, 1, "", "actions"], [36, 6, 1, "", "repr_attrs"]], "cli_command_parser.parameters.base.Parameter.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "default"], [36, 6, 1, "", "help"], [36, 6, 1, "", "hide"], [36, 6, 1, "", "metavar"], [36, 6, 1, "", "name"], [36, 6, 1, "", "required"], [36, 6, 1, "", "show_default"]], "cli_command_parser.parameters.choice_map": [[37, 2, 1, "", "Action"], [37, 2, 1, "", "Choice"], [37, 2, 1, "", "ChoiceMap"], [37, 2, 1, "", "SubCommand"]], "cli_command_parser.parameters.choice_map.Action": [[37, 5, 1, "", "__call__"], [37, 5, 1, "", "register"], [37, 5, 1, "", "register_action"]], "cli_command_parser.parameters.choice_map.Action.__call__.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "default"], [37, 6, 1, "", "help"], [37, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Action.register.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "default"], [37, 6, 1, "", "help"], [37, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Choice": [[37, 3, 1, "", "choice"], [37, 5, 1, "", "format_help"], [37, 5, 1, "", "format_usage"], [37, 3, 1, "", "help"], [37, 3, 1, "", "local"], [37, 3, 1, "", "target"]], "cli_command_parser.parameters.choice_map.ChoiceMap": [[37, 5, 1, "", "__init_subclass__"], [37, 3, 1, "", "choices"], [37, 3, 1, "", "description"], [37, 4, 1, "", "has_choices"], [37, 3, 1, "", "nargs"], [37, 5, 1, "", "register_choice"], [37, 5, 1, "", "result"], [37, 5, 1, "", "result_value"], [37, 4, 1, "", "show_in_help"], [37, 5, 1, "", "target"], [37, 3, 1, "", "title"], [37, 5, 1, "", "validate"]], "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__.params": [[37, 6, 1, "", "choice_validation_exc"], [37, 6, 1, "", "kwargs"], [37, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.ChoiceMap.params": [[37, 6, 1, "", "action"], [37, 6, 1, "", "description"], [37, 6, 1, "", "kwargs"], [37, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.SubCommand": [[37, 4, 1, "", "has_local_choices"], [37, 5, 1, "", "register"], [37, 5, 1, "", "register_command"]], "cli_command_parser.parameters.choice_map.SubCommand.register.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "command_or_choice"], [37, 6, 1, "", "help"]], "cli_command_parser.parameters.groups": [[38, 2, 1, "", "ParamGroup"]], "cli_command_parser.parameters.groups.ParamGroup": [[38, 5, 1, "", "add"], [38, 4, 1, "", "contains_positional"], [38, 4, 1, "", "contains_required"], [38, 3, 1, "", "description"], [38, 5, 1, "", "extend"], [38, 4, 1, "", "in_mutually_exclusive_group"], [38, 3, 1, "", "members"], [38, 3, 1, "", "mutually_dependent"], [38, 3, 1, "", "mutually_exclusive"], [38, 5, 1, "", "register"], [38, 5, 1, "", "register_all"], [38, 4, 1, "", "show_in_help"], [38, 5, 1, "", "validate"]], "cli_command_parser.parameters.groups.ParamGroup.params": [[38, 6, 1, "", "description"], [38, 6, 1, "", "hide"], [38, 6, 1, "", "mutually_dependent"], [38, 6, 1, "", "mutually_exclusive"], [38, 6, 1, "", "name"], [38, 6, 1, "", "required"]], "cli_command_parser.parameters.option_strings": [[39, 2, 1, "", "OptionStrings"], [39, 2, 1, "", "TriFlagOptionStrings"]], "cli_command_parser.parameters.option_strings.OptionStrings": [[39, 5, 1, "", "all_option_strs"], [39, 3, 1, "", "combinable"], [39, 4, 1, "", "display_long"], [39, 5, 1, "", "get_sets"], [39, 5, 1, "", "get_usage_opt"], [39, 5, 1, "", "has_long"], [39, 5, 1, "", "has_min_opts"], [39, 4, 1, "", "long"], [39, 3, 1, "", "name_mode"], [39, 5, 1, "", "option_strs"], [39, 4, 1, "", "short"], [39, 5, 1, "", "update"]], "cli_command_parser.parameters.option_strings.TriFlagOptionStrings": [[39, 5, 1, "", "add_alts"], [39, 5, 1, "", "all_option_strs"], [39, 4, 1, "", "alt_allowed"], [39, 5, 1, "", "alt_option_strs"], [39, 4, 1, "", "display_long_alt"], [39, 4, 1, "", "display_long_primary"], [39, 5, 1, "", "get_usage_opt"], [39, 5, 1, "", "has_long"], [39, 5, 1, "", "has_min_opts"], [39, 5, 1, "", "option_strs"], [39, 5, 1, "", "primary_option_strs"], [39, 4, 1, "", "short_alt"], [39, 4, 1, "", "short_primary"], [39, 5, 1, "", "update_alts"]], "cli_command_parser.parameters.options": [[40, 2, 1, "", "ActionFlag"], [40, 2, 1, "", "Counter"], [40, 2, 1, "", "Flag"], [40, 2, 1, "", "Option"], [40, 2, 1, "", "TriFlag"], [40, 3, 1, "", "action_flag"], [40, 1, 1, "", "after_main"], [40, 1, 1, "", "before_main"]], "cli_command_parser.parameters.options.ActionFlag": [[40, 5, 1, "", "__call__"], [40, 4, 1, "", "func"], [40, 5, 1, "", "result"]], "cli_command_parser.parameters.options.ActionFlag.params": [[40, 6, 1, "", "always_available"], [40, 6, 1, "", "before_main"], [40, 6, 1, "", "func"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "order"]], "cli_command_parser.parameters.options.Counter": [[40, 3, 1, "", "default"], [40, 3, 1, "", "init"], [40, 3, 1, "", "nargs"], [40, 5, 1, "", "prepare_value"], [40, 3, 1, "", "type"], [40, 5, 1, "", "validate"]], "cli_command_parser.parameters.options.Counter.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "const"], [40, 6, 1, "", "default"], [40, 6, 1, "", "init"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.options.Flag": [[40, 3, 1, "", "default"], [40, 5, 1, "", "get_env_const"], [40, 3, 1, "", "nargs"], [40, 5, 1, "", "type"], [40, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.Flag.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "const"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "strict_env"], [40, 6, 1, "", "type"], [40, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.Option": [[40, 3, 1, "", "allow_leading_dash"], [40, 3, 1, "", "default"]], "cli_command_parser.parameters.options.Option.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "allow_leading_dash"], [40, 6, 1, "", "choices"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "nargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "required"], [40, 6, 1, "", "type"]], "cli_command_parser.parameters.options.TriFlag": [[40, 3, 1, "", "alt_help"], [40, 3, 1, "", "consts"], [40, 3, 1, "", "default"], [40, 5, 1, "", "get_const"], [40, 5, 1, "", "get_env_const"], [40, 3, 1, "", "nargs"], [40, 3, 1, "", "option_strs"], [40, 5, 1, "", "type"], [40, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.TriFlag.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "alt_help"], [40, 6, 1, "", "alt_long"], [40, 6, 1, "", "alt_prefix"], [40, 6, 1, "", "alt_short"], [40, 6, 1, "", "consts"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "name_mode"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "strict_env"], [40, 6, 1, "", "type"], [40, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.pass_thru": [[41, 2, 1, "", "PassThru"]], "cli_command_parser.parameters.pass_thru.PassThru": [[41, 3, 1, "", "missing_hint"], [41, 3, 1, "", "nargs"]], "cli_command_parser.parameters.pass_thru.PassThru.params": [[41, 6, 1, "", "action"], [41, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.positionals": [[42, 2, 1, "", "Positional"]], "cli_command_parser.parameters.positionals.Positional": [[42, 3, 1, "", "allow_leading_dash"]], "cli_command_parser.parameters.positionals.Positional.params": [[42, 6, 1, "", "action"], [42, 6, 1, "", "allow_leading_dash"], [42, 6, 1, "", "choices"], [42, 6, 1, "", "default"], [42, 6, 1, "", "kwargs"], [42, 6, 1, "", "nargs"], [42, 6, 1, "", "type"]], "cli_command_parser.parse_tree": [[43, 2, 1, "", "AnyWord"], [43, 2, 1, "", "PosNode"], [43, 1, 1, "", "process_param"], [43, 1, 1, "", "process_params"]], "cli_command_parser.parse_tree.AnyWord": [[43, 3, 1, "", "n"], [43, 3, 1, "", "nargs"], [43, 3, 1, "", "remaining"]], "cli_command_parser.parse_tree.PosNode": [[43, 4, 1, "", "any_node"], [43, 4, 1, "", "any_word"], [43, 5, 1, "", "build_tree"], [43, 5, 1, "", "has_any"], [43, 5, 1, "", "link_params"], [43, 3, 1, "", "links"], [43, 5, 1, "", "nargs_min_and_max"], [43, 3, 1, "", "param"], [43, 3, 1, "", "parent"], [43, 5, 1, "", "path_repr"], [43, 5, 1, "", "print_tree"], [43, 4, 1, "", "raw_path"], [43, 3, 1, "", "target"], [43, 5, 1, "", "update_node"], [43, 3, 1, "", "word"]], "cli_command_parser.parser": [[44, 2, 1, "", "CommandParser"], [44, 1, 1, "", "get_opt_prefix"], [44, 1, 1, "", "parse_args_and_get_next_cmd"]], "cli_command_parser.parser.CommandParser": [[44, 3, 1, "", "arg_deque"], [44, 3, 1, "", "config"], [44, 5, 1, "", "consume_values"], [44, 3, 1, "", "ctx"], [44, 3, 1, "", "deferred"], [44, 5, 1, "", "get_next_cmd"], [44, 5, 1, "", "handle_long"], [44, 5, 1, "", "handle_pass_thru"], [44, 5, 1, "", "handle_positional"], [44, 5, 1, "", "handle_remainder"], [44, 5, 1, "", "handle_short"], [44, 3, 1, "", "params"], [44, 5, 1, "", "parse_args_and_get_next_cmd"], [44, 3, 1, "", "positionals"]], "cli_command_parser.parser.CommandParser.consume_values.params": [[44, 6, 1, "", "found"], [44, 6, 1, "", "param"]], "cli_command_parser.testing": [[45, 2, 1, "", "AssertRaisesWithStringContext"], [45, 2, 1, "", "ParserTest"], [45, 2, 1, "", "RedirectStreams"], [45, 2, 1, "", "TemporaryDir"], [45, 1, 1, "", "format_dict_diff"], [45, 1, 1, "", "format_diff"], [45, 1, 1, "", "get_help_text"], [45, 1, 1, "", "get_rst_text"], [45, 1, 1, "", "get_usage_text"], [45, 1, 1, "", "load_command"], [45, 1, 1, "", "sealed_mock"]], "cli_command_parser.testing.AssertRaisesWithStringContext": [[45, 3, 1, "", "expected_exc"], [45, 3, 1, "", "expected_text"], [45, 3, 1, "", "msg"], [45, 3, 1, "", "test_case"]], "cli_command_parser.testing.ParserTest": [[45, 5, 1, "", "assert_argv_parse_fails_cases"], [45, 5, 1, "", "assert_call_fails"], [45, 5, 1, "", "assert_call_fails_cases"], [45, 5, 1, "", "assert_dict_equal"], [45, 5, 1, "", "assert_env_parse_results"], [45, 5, 1, "", "assert_env_parse_results_cases"], [45, 5, 1, "", "assert_parse_fails"], [45, 5, 1, "", "assert_parse_fails_cases"], [45, 5, 1, "", "assert_parse_results"], [45, 5, 1, "", "assert_parse_results_cases"], [45, 5, 1, "", "assert_raises_contains_str"], [45, 5, 1, "", "assert_str_contains"], [45, 5, 1, "", "assert_str_starts_with_line"], [45, 5, 1, "", "assert_strings_equal"], [45, 5, 1, "", "env_vars"]], "cli_command_parser.testing.RedirectStreams": [[45, 4, 1, "", "stderr"], [45, 4, 1, "", "stdout"]], "cli_command_parser.utils": [[47, 2, 1, "", "FixedFlag"], [47, 2, 1, "", "FixedFlagMeta"], [47, 2, 1, "", "MissingMixin"], [47, 2, 1, "", "Terminal"], [47, 1, 1, "", "camel_to_snake_case"], [47, 1, 1, "", "positive_int"], [47, 1, 1, "", "short_repr"], [47, 1, 1, "", "str_to_bool"]], "cli_command_parser.utils.Terminal": [[47, 4, 1, "", "width"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method", "6": "py:parameter", "7": "py:exception", "8": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "titleterms": {"advanc": [0, 48, 51, 54, 66], "usag": [0, 49], "post": 0, "run": [0, 48, 54], "context": [0, 7], "access": 0, "raw": 0, "argument": 0, "valu": 0, "pars": [0, 48, 49, 67, 71], "arg": [0, 53], "dictionari": 0, "paramet": [0, 34, 49, 65, 68, 69, 70], "overridden": 0, "name": [0, 68], "mix": 0, "action": [0, 2, 35, 53, 60, 69], "actionflag": [0, 49, 69], "api": [1, 62], "document": [1, 15, 49, 50, 66], "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "annot": 3, "command_paramet": 4, "command": [5, 19, 48, 49, 56, 66, 71], "config": 6, "convers": 8, "packag": [8, 18, 23, 34], "argparse_ast": 9, "argparse_util": 10, "command_build": 11, "util": [12, 22, 31, 47], "visitor": 13, "core": 14, "error_handl": 16, "except": [17, 26], "format": [18, 50], "param": 20, "restructured_text": 21, "input": [23, 58, 67], "base": [24, 36], "choic": [25, 67], "file": [27, 67], "numer": [28, 67], "pattern": [29, 67], "time": [30, 67], "metadata": [32, 49], "narg": 33, "choice_map": 37, "group": [38, 50, 57, 60, 65], "option_str": 39, "option": [40, 49, 69], "pass_thru": 41, "posit": [42, 69], "parse_tre": 43, "parser": [44, 66], "test": [45, 71], "type": [46, 65, 67, 68], "defin": [48, 51], "method": 48, "attribut": 48, "inherit": 48, "overrid": 48, "main": 48, "support": 48, "_sunder_": 48, "initi": 48, "us": 48, "_init_command_": 48, "_before_main_": 48, "__init__": 48, "configur": [49, 51, 66], "error": [49, 51], "handl": [49, 51], "help": [49, 50, 68], "text": [49, 50, 68], "gener": [49, 50], "restructuredtext": 50, "rst": 50, "handler": 51, "exampl": [52, 57, 65, 66], "script": 52, "With": 53, "subcommand": [54, 55, 57, 62, 63, 69, 70], "foo": [54, 55, 57, 62], "bar": [54, 55, 57, 62], "baz": [54, 62], "basic": 55, "wrapper": [56, 62], "complex": 57, "hello": [57, 61], "log": [57, 63], "updat": 57, "user": [57, 66], "custom": 58, "echo": 59, "flag": [60, 64, 69], "world": 61, "rest": 62, "show": [62, 63], "sync": 62, "find": 62, "share": [63, 70], "init": 63, "simpl": 64, "mutual": 65, "exclus": 65, "depend": 65, "combin": 65, "how": 65, "work": 65, "outer": 65, "cli": 66, "program": 66, "instal": 66, "python": 66, "version": 66, "compat": 66, "guid": 66, "build": 66, "link": 66, "indic": 66, "tabl": 66, "path": 67, "serial": 67, "rang": 67, "numrang": 67, "choicemap": 67, "enumchoic": 67, "regex": 67, "glob": 67, "date": 67, "dai": 67, "month": 67, "full": 67, "datetim": 67, "other": [67, 69], "timedelta": 67, "get": 68, "start": 68, "entri": 68, "point": 68, "triflag": 69, "counter": 69, "passthru": 69, "automat": 70, "registr": 70, "nest": 70, "explicit": 70, "common": 70, "helper": 71}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Utils Module": [[22, "module-cli_command_parser.formatting.utils"], [31, "module-cli_command_parser.inputs.utils"], [12, "module-cli_command_parser.conversion.utils"], [47, "module-cli_command_parser.utils"]], "Numeric Module": [[28, "module-cli_command_parser.inputs.numeric"]], "Parameters Package": [[34, "parameters-package"]], "Base Module": [[24, "module-cli_command_parser.inputs.base"], [36, "module-cli_command_parser.parameters.base"]], "Commands Module": [[19, "module-cli_command_parser.formatting.commands"], [5, "module-cli_command_parser.commands"]], "Actions Module": [[35, "module-cli_command_parser.parameters.actions"], [2, "module-cli_command_parser.actions"]], "Metadata Module": [[32, "module-cli_command_parser.metadata"]], "Restructured_Text Module": [[21, "module-cli_command_parser.formatting.restructured_text"]], "Params Module": [[20, "module-cli_command_parser.formatting.params"]], "Exceptions Module": [[26, "module-cli_command_parser.inputs.exceptions"], [17, "module-cli_command_parser.exceptions"]], "Formatting Package": [[18, "formatting-package"]], "Files Module": [[27, "module-cli_command_parser.inputs.files"]], "Patterns Module": [[29, "module-cli_command_parser.inputs.patterns"]], "Choices Module": [[25, "module-cli_command_parser.inputs.choices"]], "Time Module": [[30, "module-cli_command_parser.inputs.time"]], "Nargs Module": [[33, "module-cli_command_parser.nargs"]], "Inputs Package": [[23, "inputs-package"]], "Command_Parameters Module": [[4, "module-cli_command_parser.command_parameters"]], "Advanced Usage": [[0, "advanced-usage"]], "Post-Run & Context": [[0, "post-run-context"]], "Accessing Raw Argument Values": [[0, "accessing-raw-argument-values"]], "Parsed Args as a Dictionary": [[0, "parsed-args-as-a-dictionary"]], "Parameters with Overridden Names": [[0, "parameters-with-overridden-names"]], "Mixing Actions & ActionFlags": [[0, "mixing-actions-actionflags"]], "Annotations Module": [[3, "module-cli_command_parser.annotations"]], "Error_Handling Module": [[16, "module-cli_command_parser.error_handling"]], "Argparse_Utils Module": [[10, "module-cli_command_parser.conversion.argparse_utils"]], "Command_Builder Module": [[11, "module-cli_command_parser.conversion.command_builder"]], "Documentation Module": [[15, "module-cli_command_parser.documentation"]], "Visitor Module": [[13, "module-cli_command_parser.conversion.visitor"]], "Core Module": [[14, "module-cli_command_parser.core"]], "API Documentation": [[1, "api-documentation"]], "Config Module": [[6, "module-cli_command_parser.config"]], "Argparse_Ast Module": [[9, "module-cli_command_parser.conversion.argparse_ast"]], "Context Module": [[7, "module-cli_command_parser.context"]], "Conversion Package": [[8, "conversion-package"]], "Advanced Subcommand": [[54, "advanced-subcommand"]], "Subcommands": [[54, "subcommands"], [63, "subcommands"], [55, "subcommands"], [57, "subcommands"], [70, "subcommands"], [62, "subcommands"]], "Subcommand: foo": [[54, "subcommand-foo"], [55, "subcommand-foo"]], "Subcommand: run foo": [[54, "subcommand-run-foo"]], "Subcommand: run bar": [[54, "subcommand-run-bar"]], "Subcommand: baz": [[54, "subcommand-baz"]], "Parameter Groups": [[65, "parameter-groups"]], "Mutually Exclusive": [[65, "mutually-exclusive"]], "Mutually Dependent": [[65, "mutually-dependent"]], "Combining Group Types": [[65, "combining-group-types"]], "How it Works": [[65, "how-it-works"]], "Mutually Exclusive Outer Group": [[65, "mutually-exclusive-outer-group"]], "Mutually Dependent Outer Group": [[65, "mutually-dependent-outer-group"]], "Examples": [[65, "examples"]], "Simple Flags": [[64, "simple-flags"]], "Shared Logging Init": [[63, "shared-logging-init"]], "Subcommand: show": [[63, "subcommand-show"], [62, "subcommand-show"]], "Command Wrapper": [[56, "command-wrapper"]], "Getting Started": [[68, "getting-started"]], "Parameters": [[68, "parameters"], [69, "parameters"]], "Types": [[68, "types"]], "Names": [[68, "names"]], "Entry Points": [[68, "entry-points"]], "Help Text": [[68, "help-text"], [50, "help-text"]], "Testing Commands": [[71, "testing-commands"]], "Testing Parsing": [[71, "testing-parsing"]], "Test Helpers": [[71, "test-helpers"]], "Hello World": [[61, "hello-world"]], "CLI Command Parser": [[66, "cli-command-parser"]], "Example Program": [[66, "example-program"]], "Installing CLI Command Parser": [[66, "installing-cli-command-parser"]], "Python Version Compatibility": [[66, "python-version-compatibility"]], "User Guide": [[66, "user-guide"]], "Building Commands": [[66, "building-commands"]], "Configuring & Documenting Commands": [[66, "configuring-documenting-commands"]], "Advanced": [[66, "advanced"], [48, "advanced"], [51, "advanced"]], "Links": [[66, "links"]], "Indices and Tables": [[66, "indices-and-tables"]], "Basic Subcommand": [[55, "basic-subcommand"]], "Subcommand: bar": [[55, "subcommand-bar"]], "Complex Example": [[57, "complex-example"]], "Subcommand: hello": [[57, "subcommand-hello"]], "Subcommand: logs": [[57, "subcommand-logs"]], "Subcommand: update": [[57, "subcommand-update"]], "Subcommand: update foo": [[57, "subcommand-update-foo"]], "Subcommand: update bar": [[57, "subcommand-update-bar"]], "Subcommand: update user": [[57, "subcommand-update-user"]], "Subcommand: update group": [[57, "subcommand-update-group"]], "Echo": [[59, "echo"]], "Automatic Registration": [[70, "automatic-registration"]], "Nested Subcommands": [[70, "nested-subcommands"]], "Explicit Registration": [[70, "explicit-registration"]], "Shared Common Parameters": [[70, "shared-common-parameters"]], "Options": [[69, "options"]], "Option": [[69, "option"]], "Flag": [[69, "flag"]], "TriFlag": [[69, "triflag"]], "Counter": [[69, "counter"]], "Positionals": [[69, "positionals"]], "Positional": [[69, "positional"]], "SubCommand": [[69, "subcommand"]], "Action": [[69, "action"]], "Others": [[69, "others"]], "PassThru": [[69, "passthru"]], "ActionFlag": [[69, "actionflag"]], "Rest Api Wrapper": [[62, "rest-api-wrapper"]], "Subcommand: sync": [[62, "subcommand-sync"]], "Subcommand: find": [[62, "subcommand-find"]], "Subcommand: find foo": [[62, "subcommand-find-foo"]], "Subcommand: find bar": [[62, "subcommand-find-bar"]], "Subcommand: find baz": [[62, "subcommand-find-baz"]], "Subcommand: find bazs": [[62, "subcommand-find-bazs"]], "Custom Inputs": [[58, "custom-inputs"]], "Input Types": [[67, "input-types"]], "Paths & Files": [[67, "paths-files"]], "Path": [[67, "path"]], "File": [[67, "file"]], "Serialized Files": [[67, "serialized-files"]], "Numeric Ranges": [[67, "numeric-ranges"]], "Range": [[67, "range"]], "NumRange": [[67, "numrange"]], "Choice Inputs": [[67, "choice-inputs"]], "Choices": [[67, "choices"]], "ChoiceMap": [[67, "choicemap"]], "EnumChoices": [[67, "enumchoices"]], "Regex & Glob Patterns": [[67, "regex-glob-patterns"]], "Regex": [[67, "regex"]], "Glob": [[67, "glob"]], "Date & Time": [[67, "date-time"]], "Day & Month": [[67, "day-month"]], "Day": [[67, "day"]], "Month": [[67, "month"]], "Full Date / Time Parsing": [[67, "full-date-time-parsing"]], "DateTime": [[67, "datetime"]], "Date": [[67, "date"]], "Time": [[67, "time"]], "Other Date / Time Inputs": [[67, "other-date-time-inputs"]], "TimeDelta": [[67, "timedelta"]], "Grouped Action Flags": [[60, "grouped-action-flags"]], "Action With Args": [[53, "action-with-args"]], "Pass_Thru Module": [[41, "module-cli_command_parser.parameters.pass_thru"]], "Choice_Map Module": [[37, "module-cli_command_parser.parameters.choice_map"]], "Groups Module": [[38, "module-cli_command_parser.parameters.groups"]], "Typing Module": [[46, "module-cli_command_parser.typing"]], "Parse_Tree Module": [[43, "module-cli_command_parser.parse_tree"]], "Documentation": [[50, "documentation"]], "Group Formatting": [[50, "group-formatting"]], "reStructuredText": [[50, "restructuredtext"]], "Generating RST Documentation": [[50, "generating-rst-documentation"]], "Options Module": [[40, "module-cli_command_parser.parameters.options"]], "Configuration": [[49, "configuration"], [51, "configuration"]], "Command Metadata": [[49, "command-metadata"]], "Configuration Options": [[49, "configuration-options"]], "Error Handling Options": [[49, "error-handling-options"]], "Parameter Options": [[49, "parameter-options"]], "ActionFlag Options": [[49, "actionflag-options"]], "Parsing Options": [[49, "parsing-options"]], "Usage & Help Text Options": [[49, "usage-help-text-options"]], "Documentation Generation Options": [[49, "documentation-generation-options"]], "Commands": [[48, "commands"]], "Defining Commands": [[48, "defining-commands"]], "Command Methods & Attributes": [[48, "command-methods-attributes"]], "Parse & Run": [[48, "parse-run"]], "Inheritance": [[48, "inheritance"]], "Overriding Command Methods": [[48, "overriding-command-methods"]], "Overriding main": [[48, "overriding-main"]], "Supported _sunder_ Methods": [[48, "supported-sunder-methods"]], "Initialization Methods": [[48, "initialization-methods"]], "Using _init_command_": [[48, "using-init-command"]], "Using _before_main_": [[48, "using-before-main"]], "Using __init__": [[48, "using-init"]], "Parser Module": [[44, "module-cli_command_parser.parser"]], "Testing Module": [[45, "module-cli_command_parser.testing"]], "Error Handling": [[51, "error-handling"]], "Defining Error Handlers": [[51, "defining-error-handlers"]], "Example Scripts": [[52, "example-scripts"]], "Option_Strings Module": [[39, "module-cli_command_parser.parameters.option_strings"]], "Positionals Module": [[42, "module-cli_command_parser.parameters.positionals"]]}, "indexentries": {"cli_command_parser.actions": [[2, "module-cli_command_parser.actions"]], "help_action() (in module cli_command_parser.actions)": [[2, "cli_command_parser.actions.help_action"]], "module": [[2, "module-cli_command_parser.actions"], [3, "module-cli_command_parser.annotations"], [4, "module-cli_command_parser.command_parameters"], [5, "module-cli_command_parser.commands"], [6, "module-cli_command_parser.config"], [7, "module-cli_command_parser.context"], [9, "module-cli_command_parser.conversion.argparse_ast"], [10, "module-cli_command_parser.conversion.argparse_utils"], [11, "module-cli_command_parser.conversion.command_builder"], [12, "module-cli_command_parser.conversion.utils"], [13, "module-cli_command_parser.conversion.visitor"], [14, "module-cli_command_parser.core"], [15, "module-cli_command_parser.documentation"], [16, "module-cli_command_parser.error_handling"], [17, "module-cli_command_parser.exceptions"], [19, "module-cli_command_parser.formatting.commands"], [20, "module-cli_command_parser.formatting.params"], [21, "module-cli_command_parser.formatting.restructured_text"], [22, "module-cli_command_parser.formatting.utils"], [24, "module-cli_command_parser.inputs.base"], [25, "module-cli_command_parser.inputs.choices"], [26, "module-cli_command_parser.inputs.exceptions"], [27, "module-cli_command_parser.inputs.files"], [28, "module-cli_command_parser.inputs.numeric"], [29, "module-cli_command_parser.inputs.patterns"], [30, "module-cli_command_parser.inputs.time"], [31, "module-cli_command_parser.inputs.utils"], [32, "module-cli_command_parser.metadata"], [33, "module-cli_command_parser.nargs"], [35, "module-cli_command_parser.parameters.actions"], [36, "module-cli_command_parser.parameters.base"], [37, "module-cli_command_parser.parameters.choice_map"], [38, "module-cli_command_parser.parameters.groups"], [39, "module-cli_command_parser.parameters.option_strings"], [40, "module-cli_command_parser.parameters.options"], [41, "module-cli_command_parser.parameters.pass_thru"], [42, "module-cli_command_parser.parameters.positionals"], [43, "module-cli_command_parser.parse_tree"], [44, "module-cli_command_parser.parser"], [45, "module-cli_command_parser.testing"], [46, "module-cli_command_parser.typing"], [47, "module-cli_command_parser.utils"]], "cli_command_parser.annotations": [[3, "module-cli_command_parser.annotations"]], "get_annotation_value_type() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_annotation_value_type"]], "get_args() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_args"]], "get_descriptor_value_type() (in module cli_command_parser.annotations)": [[3, "cli_command_parser.annotations.get_descriptor_value_type"]], "commandparameters (class in cli_command_parser.command_parameters)": [[4, "cli_command_parser.command_parameters.CommandParameters"]], "action (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action"]], "action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.action_flags"]], "all_positionals (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.all_positionals"]], "always_available_action_flags (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.always_available_action_flags"]], "cli_command_parser.command_parameters": [[4, "module-cli_command_parser.command_parameters"]], "combo_option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.combo_option_map"]], "command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command"]], "command_parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.command_parent"]], "find_nested_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_option_that_accepts_values"]], "find_nested_pass_thru() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_nested_pass_thru"]], "find_option_that_accepts_values() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.find_option_that_accepts_values"]], "formatter (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.formatter"]], "get_positionals_to_parse() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.get_positionals_to_parse"]], "groups (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.groups"]], "has_matching_short_option() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.has_matching_short_option"]], "iter_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.iter_params"]], "long_option_to_param_value_pair() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.long_option_to_param_value_pair"]], "option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.option_map"]], "options (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.options"]], "parent (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.parent"]], "pass_thru (cli_command_parser.command_parameters.commandparameters property)": [[4, "cli_command_parser.command_parameters.CommandParameters.pass_thru"]], "positionals (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.positionals"]], "required_check_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.required_check_params"]], "short_option_to_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.short_option_to_param_value_pairs"]], "split_action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.split_action_flags"]], "sub_command (cli_command_parser.command_parameters.commandparameters attribute)": [[4, "cli_command_parser.command_parameters.CommandParameters.sub_command"]], "try_env_params() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.try_env_params"]], "validate_groups() (cli_command_parser.command_parameters.commandparameters method)": [[4, "cli_command_parser.command_parameters.CommandParameters.validate_groups"]], "command (class in cli_command_parser.commands)": [[5, "cli_command_parser.commands.Command"]], "__call__() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.__call__"]], "_after_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._after_main_"]], "_before_main_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._before_main_"]], "_init_command_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._init_command_"]], "_pre_init_actions_() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command._pre_init_actions_"]], "cli_command_parser.commands": [[5, "module-cli_command_parser.commands"]], "ctx (cli_command_parser.commands.command attribute)": [[5, "cli_command_parser.commands.Command.ctx"]], "main() (cli_command_parser.commands.command method)": [[5, "cli_command_parser.commands.Command.main"]], "main() (in module cli_command_parser.commands)": [[5, "cli_command_parser.commands.main"]], "parse() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse"]], "parse_and_run() (cli_command_parser.commands.command class method)": [[5, "cli_command_parser.commands.Command.parse_and_run"]], "alias (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.ALIAS"]], "always (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.ALWAYS"]], "any (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.ANY"]], "allowleadingdash (class in cli_command_parser.config)": [[6, "cli_command_parser.config.AllowLeadingDash"]], "ambiguouscombomode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.AmbiguousComboMode"]], "both (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH"]], "both_dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_DASH"]], "both_underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.BOTH_UNDERSCORE"]], "combine (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.COMBINE"]], "commandconfig (class in cli_command_parser.config)": [[6, "cli_command_parser.config.CommandConfig"]], "configitem (class in cli_command_parser.config)": [[6, "cli_command_parser.config.ConfigItem"]], "dash (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.DASH"]], "dynamicconfigitem (class in cli_command_parser.config)": [[6, "cli_command_parser.config.DynamicConfigItem"]], "fields (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.FIELDS"]], "ignore (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.IGNORE"]], "missing (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.MISSING"]], "never (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.NEVER"]], "never (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NEVER"]], "none (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.NONE"]], "non_empty (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.NON_EMPTY"]], "numeric (cli_command_parser.config.allowleadingdash attribute)": [[6, "cli_command_parser.config.AllowLeadingDash.NUMERIC"]], "optionnamemode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.OptionNameMode"]], "permissive (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.PERMISSIVE"]], "repeat (cli_command_parser.config.subcommandaliashelpmode attribute)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode.REPEAT"]], "strict (cli_command_parser.config.ambiguouscombomode attribute)": [[6, "cli_command_parser.config.AmbiguousComboMode.STRICT"]], "showdefaults (class in cli_command_parser.config)": [[6, "cli_command_parser.config.ShowDefaults"]], "subcommandaliashelpmode (class in cli_command_parser.config)": [[6, "cli_command_parser.config.SubcommandAliasHelpMode"]], "truthy (cli_command_parser.config.showdefaults attribute)": [[6, "cli_command_parser.config.ShowDefaults.TRUTHY"]], "underscore (cli_command_parser.config.optionnamemode attribute)": [[6, "cli_command_parser.config.OptionNameMode.UNDERSCORE"]], "action_after_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.action_after_action_flags"]], "add_help (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.add_help"]], "allow_annotation_type (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_annotation_type"]], "allow_backtrack (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_backtrack"]], "allow_missing (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.allow_missing"]], "always_run_after_main (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.always_run_after_main"]], "ambiguous_short_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ambiguous_short_combos"]], "as_dict() (cli_command_parser.config.commandconfig method)": [[6, "cli_command_parser.config.CommandConfig.as_dict"]], "choice_delim (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.choice_delim"]], "cli_command_parser.config": [[6, "module-cli_command_parser.config"]], "cmd_alias_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.cmd_alias_mode"]], "command_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.command_formatter"]], "config_item() (in module cli_command_parser.config)": [[6, "cli_command_parser.config.config_item"]], "default (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.default"]], "error_handler (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.error_handler"]], "extended_epilog (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.extended_epilog"]], "ignore_unknown (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.ignore_unknown"]], "min_usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.min_usage_column_width"]], "multiple_action_flags (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.multiple_action_flags"]], "name (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.name"]], "option_name_mode (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.option_name_mode"]], "param_formatter (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.param_formatter"]], "reject_ambiguous_pos_combos (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.reject_ambiguous_pos_combos"]], "show_defaults (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_defaults"]], "show_docstring (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_docstring"]], "show_group_tree (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_tree"]], "show_group_type (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_group_type"]], "show_inherited_descriptions (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.show_inherited_descriptions"]], "sort_choices (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.sort_choices"]], "sub_cmd_doc_depth (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.sub_cmd_doc_depth"]], "type (cli_command_parser.config.configitem attribute)": [[6, "cli_command_parser.config.ConfigItem.type"]], "usage_column_width (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.usage_column_width"]], "use_type_metavar (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.use_type_metavar"]], "wrap_usage_str (cli_command_parser.config.commandconfig attribute)": [[6, "cli_command_parser.config.CommandConfig.wrap_usage_str"]], "after_main (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.AFTER_MAIN"]], "actionphase (class in cli_command_parser.context)": [[7, "cli_command_parser.context.ActionPhase"]], "before_main (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.BEFORE_MAIN"]], "context (class in cli_command_parser.context)": [[7, "cli_command_parser.context.Context"]], "contextproxy (class in cli_command_parser.context)": [[7, "cli_command_parser.context.ContextProxy"]], "pre_init (cli_command_parser.context.actionphase attribute)": [[7, "cli_command_parser.context.ActionPhase.PRE_INIT"]], "action_flag_count (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.action_flag_count"]], "all_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.all_action_flags"]], "allow_argv_prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.allow_argv_prog"]], "categorized_action_flags (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.categorized_action_flags"]], "cli_command_parser.context": [[7, "module-cli_command_parser.context"]], "config (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.config"]], "config (cli_command_parser.context.contextproxy property)": [[7, "cli_command_parser.context.ContextProxy.config"]], "for_prog() (cli_command_parser.context.context class method)": [[7, "cli_command_parser.context.Context.for_prog"]], "get_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_context"]], "get_current_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_current_context"]], "get_error_handler() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_error_handler"]], "get_missing() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_missing"]], "get_or_create_context() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_or_create_context"]], "get_parsed() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed"]], "get_parsed() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_parsed"]], "get_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.get_parsed_value"]], "get_parsed_value() (cli_command_parser.context.contextproxy method)": [[7, "cli_command_parser.context.ContextProxy.get_parsed_value"]], "get_raw_arg() (in module cli_command_parser.context)": [[7, "cli_command_parser.context.get_raw_arg"]], "has_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.has_parsed_value"]], "has_parsed_value() (cli_command_parser.context.contextproxy method)": [[7, "cli_command_parser.context.ContextProxy.has_parsed_value"]], "iter_action_flags() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.iter_action_flags"]], "num_provided() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.num_provided"]], "num_provided() (cli_command_parser.context.contextproxy method)": [[7, "cli_command_parser.context.ContextProxy.num_provided"]], "params (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.params"]], "pop_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.pop_parsed_value"]], "prog (cli_command_parser.context.context attribute)": [[7, "cli_command_parser.context.Context.prog"]], "record_action() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.record_action"]], "record_action() (cli_command_parser.context.contextproxy method)": [[7, "cli_command_parser.context.ContextProxy.record_action"]], "roll_back_parsed_values() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.roll_back_parsed_values"]], "set_parsed_value() (cli_command_parser.context.context method)": [[7, "cli_command_parser.context.Context.set_parsed_value"]], "set_parsed_value() (cli_command_parser.context.contextproxy method)": [[7, "cli_command_parser.context.ContextProxy.set_parsed_value"]], "terminal_width (cli_command_parser.context.context property)": [[7, "cli_command_parser.context.Context.terminal_width"]], "terminal_width (cli_command_parser.context.contextproxy property)": [[7, "cli_command_parser.context.ContextProxy.terminal_width"]], "addvisitedchild (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild"]], "argcollection (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection"]], "arggroup (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ArgGroup"]], "astargumentparser (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser"]], "astcallable (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable"]], "mutuallyexclusivegroup (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup"]], "parserarg (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg"]], "script (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.Script"]], "subparser (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser"]], "subparsersaction (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction"]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.argcollection class method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.__init_subclass__"]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.astcallable class method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.__init_subclass__"]], "add_argument (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument"]], "add_argument_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument_group"]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_mutually_exclusive_group"]], "add_parser() (cli_command_parser.conversion.argparse_ast.script method)": [[9, "cli_command_parser.conversion.argparse_ast.Script.add_parser"]], "add_parser() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.add_parser"]], "add_subparsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.add_subparsers"]], "args (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.args"]], "child_cls (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.child_cls"]], "cli_command_parser.conversion.argparse_ast": [[9, "module-cli_command_parser.conversion.argparse_ast"]], "func (cli_command_parser.conversion.argparse_ast.visit_func attribute)": [[9, "cli_command_parser.conversion.argparse_ast.visit_func.func"]], "get_tracked_refs() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.get_tracked_refs"]], "grouped_children() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.grouped_children"]], "groups (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.groups"]], "init_call_repr() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_call_repr"]], "init_func_args (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_args"]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_kwargs"]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.subparser property)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.init_func_kwargs"]], "init_func_name (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_name"]], "init_func_raw_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_raw_kwargs"]], "list_attr (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.list_attr"]], "mod_cls_to_ast_cls_map (cli_command_parser.conversion.argparse_ast.script property)": [[9, "cli_command_parser.conversion.argparse_ast.Script.mod_cls_to_ast_cls_map"]], "parent (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.parent"]], "parent (cli_command_parser.conversion.argparse_ast.parserarg attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg.parent"]], "parent (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.parent"]], "parsers (cli_command_parser.conversion.argparse_ast.script property)": [[9, "cli_command_parser.conversion.argparse_ast.Script.parsers"]], "path (cli_command_parser.conversion.argparse_ast.script attribute)": [[9, "cli_command_parser.conversion.argparse_ast.Script.path"]], "pprint() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.pprint"]], "pprint() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.pprint"]], "register_parser() (cli_command_parser.conversion.argparse_ast.script class method)": [[9, "cli_command_parser.conversion.argparse_ast.Script.register_parser"]], "represents (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.represents"]], "represents (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.arggroup method)": [[9, "cli_command_parser.conversion.argparse_ast.ArgGroup.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.mutuallyexclusivegroup method)": [[9, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.parserarg method)": [[9, "cli_command_parser.conversion.argparse_ast.ParserArg.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.subparser method)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.represents"]], "represents() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.represents"]], "signature (cli_command_parser.conversion.argparse_ast.astcallable property)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.signature"]], "sp_parent (cli_command_parser.conversion.argparse_ast.subparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubParser.sp_parent"]], "sub_parsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.sub_parsers"]], "visit_func (class in cli_command_parser.conversion.argparse_ast)": [[9, "cli_command_parser.conversion.argparse_ast.visit_func"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[9, "cli_command_parser.conversion.argparse_ast.ArgCollection.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[9, "cli_command_parser.conversion.argparse_ast.AstCallable.visit_funcs"]], "visit_funcs (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[9, "cli_command_parser.conversion.argparse_ast.SubparsersAction.visit_funcs"]], "argumentparser (class in cli_command_parser.conversion.argparse_utils)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser"]], "subparsersaction (class in cli_command_parser.conversion.argparse_utils)": [[10, "cli_command_parser.conversion.argparse_utils.SubParsersAction"]], "add_argument_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_argument_group"]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_mutually_exclusive_group"]], "add_parser() (cli_command_parser.conversion.argparse_utils.subparsersaction method)": [[10, "cli_command_parser.conversion.argparse_utils.SubParsersAction.add_parser"]], "add_subparsers() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[10, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_subparsers"]], "cli_command_parser.conversion.argparse_utils": [[10, "module-cli_command_parser.conversion.argparse_utils"]], "baseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs"]], "collectionconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter"]], "commandargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs"]], "conversionerror": [[11, "cli_command_parser.conversion.command_builder.ConversionError"]], "converter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.Converter"]], "convertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup"]], "flagargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs"]], "groupconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter"]], "optionargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs"]], "paramargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs"]], "parambaseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs"]], "paramconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter"]], "paramconvertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup"]], "parserconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter"]], "passthruargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.PassThruArgs"]], "scriptconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter"]], "__init_subclass__() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.__init_subclass__"]], "action (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.action"]], "add_help (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.add_help"]], "ast_obj (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.ast_obj"]], "ast_obj (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.ast_obj"]], "attr_name (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.attr_name"]], "choice (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choice"]], "choices (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choices"]], "choices (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.choices"]], "cli_command_parser.conversion.command_builder": [[11, "module-cli_command_parser.conversion.command_builder"]], "cmd_option_strs (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.cmd_option_strs"]], "const (cli_command_parser.conversion.command_builder.flagargs attribute)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.const"]], "convert() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.convert"]], "convert_script() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.convert_script"]], "converts (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.converts"]], "converts (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.converts"]], "converts (cli_command_parser.conversion.command_builder.scriptconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.converts"]], "default (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.default"]], "descendant_args() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.descendant_args"]], "descendant_args() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.descendant_args"]], "description (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.description"]], "docs_url (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.docs_url"]], "email (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.email"]], "epilog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.epilog"]], "finalize() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.finalize"]], "finalize() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.finalize"]], "for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.for_ast_callable"]], "format() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format"]], "format_all() (cli_command_parser.conversion.command_builder.convertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.format_all"]], "format_all() (cli_command_parser.conversion.command_builder.paramconvertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup.format_all"]], "format_lines() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.groupconverter method)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.format_lines"]], "format_lines() (cli_command_parser.conversion.command_builder.scriptconverter method)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.format_lines"]], "format_members() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.format_members"]], "from_kwargs() (cli_command_parser.conversion.command_builder.baseargs class method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.from_kwargs"]], "get_cls_and_kwargs() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_cls_and_kwargs"]], "get_pos_args() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_pos_args"]], "grouped_children (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.grouped_children"]], "help (cli_command_parser.conversion.command_builder.baseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.help"]], "hide (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.hide"]], "init_counter() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_counter"]], "init_flag() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_flag"]], "init_for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_for_ast_callable"]], "init_group() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_group"]], "init_group() (cli_command_parser.conversion.command_builder.paramconverter class method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.init_group"]], "init_option() (cli_command_parser.conversion.command_builder.optionargs class method)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.init_option"]], "init_positional() (cli_command_parser.conversion.command_builder.paramargs class method)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.init_positional"]], "is_option (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_option"]], "is_pass_thru (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_pass_thru"]], "is_positional (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_positional"]], "is_sub_parser (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.is_sub_parser"]], "literal_eval_or_none() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.literal_eval_or_none"]], "member_type (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.member_type"]], "members (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.members"]], "metavar (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.metavar"]], "name (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.name"]], "name (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name"]], "name_mode (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.optionargs attribute)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.name_mode"]], "name_mode (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name_mode"]], "nargs (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.nargs"]], "newline_between_members (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.newline_between_members"]], "newline_between_members (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.newline_between_members"]], "option_name_mode (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.option_name_mode"]], "parent (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.parent"]], "parent (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.parent"]], "parent (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.parent"]], "parent (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.parent"]], "prog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.prog"]], "required (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.required"]], "sub_parser_converters (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.sub_parser_converters"]], "to_str() (cli_command_parser.conversion.command_builder.baseargs method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.to_str"]], "to_str() (cli_command_parser.conversion.command_builder.parambaseargs method)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.to_str"]], "type (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.type"]], "usage (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.usage"]], "use_auto_long_opt_str (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.use_auto_long_opt_str"]], "cli_command_parser.conversion.utils": [[12, "module-cli_command_parser.conversion.utils"]], "collection_contents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.collection_contents"]], "get_name_repr() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.get_name_repr"]], "iter_module_parents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.iter_module_parents"]], "scopedvisit (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScopedVisit"]], "scriptvisitor (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor"]], "trackedref (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.TrackedRef"]], "cli_command_parser.conversion.visitor": [[13, "module-cli_command_parser.conversion.visitor"]], "get_tracked_refs() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.get_tracked_refs"]], "imp_names() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.imp_names"]], "module (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.module"]], "name (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.name"]], "resolve_ref() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.resolve_ref"]], "scoped() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.scoped"]], "track_callable() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_callable"]], "track_refs_to() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_refs_to"]], "visit_assign() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Assign"]], "visit_asyncfor() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFor"]], "visit_asyncfunctiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFunctionDef"]], "visit_call() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Call"]], "visit_classdef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ClassDef"]], "visit_for() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_For"]], "visit_functiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_FunctionDef"]], "visit_import() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Import"]], "visit_importfrom() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ImportFrom"]], "visit_lambda (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Lambda"]], "visit_while (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_While"]], "visit_withitem() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_withitem"]], "commandmeta (class in cli_command_parser.core)": [[14, "cli_command_parser.core.CommandMeta"]], "cli_command_parser.core": [[14, "module-cli_command_parser.core"]], "config() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.config"]], "get_config() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_config"]], "get_metadata() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_metadata"]], "get_params() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_params"]], "get_parent() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_parent"]], "get_top_level_commands() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_top_level_commands"]], "meta() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.meta"]], "params() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.params"]], "parent() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.parent"]], "rstwriter (class in cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.RstWriter"]], "cli_command_parser.documentation": [[15, "module-cli_command_parser.documentation"]], "document_module() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_module"]], "document_package() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_package"]], "document_script() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_script"]], "document_scripts() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_scripts"]], "filtered_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.filtered_commands"]], "import_module() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.import_module"]], "load_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.load_commands"]], "render_command_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_command_rst"]], "render_script_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_script_rst"]], "top_level_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.top_level_commands"]], "write_index() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_index"]], "write_rst() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_rst"]], "errorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.ErrorHandler"]], "handler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.Handler"]], "nullerrorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.NullErrorHandler"]], "__call__() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.__call__"]], "cli_command_parser.error_handling": [[16, "module-cli_command_parser.error_handling"]], "cls_handler() (cli_command_parser.error_handling.errorhandler class method)": [[16, "cli_command_parser.error_handling.ErrorHandler.cls_handler"]], "copy() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.copy"]], "error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.error_handler"]], "exc_cls (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.exc_cls"]], "exc_handler_map (cli_command_parser.error_handling.errorhandler attribute)": [[16, "cli_command_parser.error_handling.ErrorHandler.exc_handler_map"]], "extended_error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.extended_error_handler"]], "handle_kb_interrupt() (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.handle_kb_interrupt"]], "handler (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.handler"]], "iter_handlers() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.iter_handlers"]], "no_exit_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.no_exit_handler"]], "register() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.register"]], "unregister() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.unregister"]], "ambiguouscombo": [[17, "cli_command_parser.exceptions.AmbiguousCombo"]], "ambiguousparsetree": [[17, "cli_command_parser.exceptions.AmbiguousParseTree"]], "ambiguousshortform": [[17, "cli_command_parser.exceptions.AmbiguousShortForm"]], "backtrack": [[17, "cli_command_parser.exceptions.Backtrack"]], "badargument": [[17, "cli_command_parser.exceptions.BadArgument"]], "commanddefinitionerror": [[17, "cli_command_parser.exceptions.CommandDefinitionError"]], "commandparserexception": [[17, "cli_command_parser.exceptions.CommandParserException"]], "invalidchoice": [[17, "cli_command_parser.exceptions.InvalidChoice"]], "missingargument": [[17, "cli_command_parser.exceptions.MissingArgument"]], "multiparamusageerror": [[17, "cli_command_parser.exceptions.MultiParamUsageError"]], "nextcommand": [[17, "cli_command_parser.exceptions.NextCommand"]], "noactivecontext": [[17, "cli_command_parser.exceptions.NoActiveContext"]], "nosuchoption": [[17, "cli_command_parser.exceptions.NoSuchOption"]], "paramconflict": [[17, "cli_command_parser.exceptions.ParamConflict"]], "paramusageerror": [[17, "cli_command_parser.exceptions.ParamUsageError"]], "parameterdefinitionerror": [[17, "cli_command_parser.exceptions.ParameterDefinitionError"]], "paramsmissing": [[17, "cli_command_parser.exceptions.ParamsMissing"]], "parserexit": [[17, "cli_command_parser.exceptions.ParserExit"]], "toomanyarguments": [[17, "cli_command_parser.exceptions.TooManyArguments"]], "usageerror": [[17, "cli_command_parser.exceptions.UsageError"]], "cli_command_parser.exceptions": [[17, "module-cli_command_parser.exceptions"]], "code (cli_command_parser.exceptions.commandparserexception attribute)": [[17, "cli_command_parser.exceptions.CommandParserException.code"]], "exit() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.exit"]], "message (cli_command_parser.exceptions.missingargument attribute)": [[17, "cli_command_parser.exceptions.MissingArgument.message"]], "message (cli_command_parser.exceptions.usageerror attribute)": [[17, "cli_command_parser.exceptions.UsageError.message"]], "show() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.show"]], "commandhelpformatter (class in cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter"]], "cli_command_parser.formatting.commands": [[19, "module-cli_command_parser.formatting.commands"]], "format_help() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_help"]], "format_rst() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_rst"]], "format_usage() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_usage"]], "get_formatter() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_formatter"]], "get_usage_sub_cmds() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_usage_sub_cmds"]], "maybe_add_groups() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_groups"]], "maybe_add_option() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_option"]], "maybe_add_options() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_options"]], "maybe_add_positionals() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_positionals"]], "choicegroup (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceGroup"]], "choicemaphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter"]], "grouphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter"]], "optionhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter"]], "paramhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter"]], "passthruhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter"]], "positionalhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter"]], "triflaghelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter"]], "__init_subclass__() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.__init_subclass__"]], "add() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.add"]], "choice_groups (cli_command_parser.formatting.params.choicemaphelpformatter property)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.choice_groups"]], "choice_strs (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choice_strs"]], "choices (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choices"]], "cli_command_parser.formatting.params": [[20, "module-cli_command_parser.formatting.params"]], "for_param_cls() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.for_param_cls"]], "format() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.format"]], "format_basic_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_basic_usage"]], "format_description() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_description"]], "format_description() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_description"]], "format_help() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_help"]], "format_help() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_help"]], "format_metavar() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_metavar"]], "format_metavar() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_metavar"]], "format_usage() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.positionalhelpformatter method)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.format_usage"]], "format_usage() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_usage"]], "group_choices() (cli_command_parser.formatting.params.choicegroup class method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.group_choices"]], "iter_usage_parts() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.iter_usage_parts"]], "iter_usage_parts() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.iter_usage_parts"]], "maybe_wrap_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.maybe_wrap_usage"]], "param (cli_command_parser.formatting.params.choicemaphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.param"]], "param (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.param"]], "param (cli_command_parser.formatting.params.optionhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.param"]], "param (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.param"]], "param (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.param"]], "param (cli_command_parser.formatting.params.positionalhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.param"]], "param (cli_command_parser.formatting.params.triflaghelpformatter attribute)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.param"]], "prepare() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare"]], "prepare_aliases() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases"]], "prepare_combined() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_combined"]], "prepare_repeated() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_repeated"]], "required_formatter_map (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.required_formatter_map"]], "required_formatter_map (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.required_formatter_map"]], "rst_row() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_row"]], "rst_rows() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_rows"]], "rst_rows() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.rst_rows"]], "rst_table() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.rst_table"]], "rst_table() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.rst_table"]], "rst_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.rst_usage"]], "rst_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_usage"]], "rsttable (class in cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.RstTable"]], "add_dict_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_dict_rows"]], "add_kv_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_kv_rows"]], "add_row() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_row"]], "add_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_rows"]], "bar() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.bar"]], "cli_command_parser.formatting.restructured_text": [[21, "module-cli_command_parser.formatting.restructured_text"]], "from_dict() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dict"]], "from_dicts() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dicts"]], "iter_build() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.iter_build"]], "rows (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.rows"]], "rst_bar() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_bar"]], "rst_directive() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_directive"]], "rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_header"]], "rst_list_table() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_list_table"]], "rst_toc_tree() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_toc_tree"]], "show_title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.show_title"]], "spaced_rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.spaced_rst_header"]], "subtitle (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.subtitle"]], "title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.title"]], "use_table_directive (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.use_table_directive"]], "widths (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.widths"]], "cli_command_parser.formatting.utils": [[22, "module-cli_command_parser.formatting.utils"]], "combine_and_wrap() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.combine_and_wrap"]], "format_help_entry() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.format_help_entry"]], "line_iter() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.line_iter"]], "inputtype (class in cli_command_parser.inputs.base)": [[24, "cli_command_parser.inputs.base.InputType"]], "__call__() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.__call__"]], "cli_command_parser.inputs.base": [[24, "module-cli_command_parser.inputs.base"]], "fix_default() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.fix_default"]], "format_metavar() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.format_metavar"]], "is_valid_type() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.is_valid_type"]], "choicemap (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.ChoiceMap"]], "choices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.Choices"]], "enumchoices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.EnumChoices"]], "__call__() (cli_command_parser.inputs.choices.choicemap method)": [[25, "cli_command_parser.inputs.choices.ChoiceMap.__call__"]], "__call__() (cli_command_parser.inputs.choices.choices method)": [[25, "cli_command_parser.inputs.choices.Choices.__call__"]], "__call__() (cli_command_parser.inputs.choices.enumchoices method)": [[25, "cli_command_parser.inputs.choices.EnumChoices.__call__"]], "cli_command_parser.inputs.choices": [[25, "module-cli_command_parser.inputs.choices"]], "inputvalidationerror": [[26, "cli_command_parser.inputs.exceptions.InputValidationError"]], "invalidchoiceerror": [[26, "cli_command_parser.inputs.exceptions.InvalidChoiceError"]], "cli_command_parser.inputs.exceptions": [[26, "module-cli_command_parser.inputs.exceptions"]], "file (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.File"]], "fileinput (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.FileInput"]], "json (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Json"]], "path (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Path"]], "pickle (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Pickle"]], "serialized (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Serialized"]], "__call__() (cli_command_parser.inputs.files.file method)": [[27, "cli_command_parser.inputs.files.File.__call__"]], "__call__() (cli_command_parser.inputs.files.path method)": [[27, "cli_command_parser.inputs.files.Path.__call__"]], "allow_dash (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.allow_dash"]], "cli_command_parser.inputs.files": [[27, "module-cli_command_parser.inputs.files"]], "converter (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.converter"]], "encoding (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.encoding"]], "errors (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.errors"]], "exists (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.exists"]], "expand (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.expand"]], "fix_default() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.fix_default"]], "lazy (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.lazy"]], "mode (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.mode"]], "parents (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.parents"]], "pass_file (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.pass_file"]], "readable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.readable"]], "resolve (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.resolve"]], "type (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.type"]], "type (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.type"]], "use_windows_fix (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.use_windows_fix"]], "validated_path() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.validated_path"]], "writable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.writable"]], "numrange (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumRange"]], "numericinput (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumericInput"]], "range (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.Range"]], "__call__() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.__call__"]], "__call__() (cli_command_parser.inputs.numeric.range method)": [[28, "cli_command_parser.inputs.numeric.Range.__call__"]], "cli_command_parser.inputs.numeric": [[28, "module-cli_command_parser.inputs.numeric"]], "fix_default() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.fix_default"]], "format_metavar() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.format_metavar"]], "handle_invalid() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.handle_invalid"]], "include_max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_max"]], "include_min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_min"]], "is_valid_type() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.is_valid_type"]], "max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.max"]], "min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.min"]], "range (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.range"]], "snap (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.snap"]], "snap (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.snap"]], "type (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.type"]], "type (cli_command_parser.inputs.numeric.numericinput attribute)": [[28, "cli_command_parser.inputs.numeric.NumericInput.type"]], "type (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.type"]], "dict (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.DICT"]], "group (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUP"]], "groups (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUPS"]], "glob (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Glob"]], "match (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.MATCH"]], "patterninput (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.PatternInput"]], "regex (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Regex"]], "regexmode (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.RegexMode"]], "string (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.STRING"]], "__call__() (cli_command_parser.inputs.patterns.glob method)": [[29, "cli_command_parser.inputs.patterns.Glob.__call__"]], "__call__() (cli_command_parser.inputs.patterns.regex method)": [[29, "cli_command_parser.inputs.patterns.Regex.__call__"]], "cli_command_parser.inputs.patterns": [[29, "module-cli_command_parser.inputs.patterns"]], "format_metavar() (cli_command_parser.inputs.patterns.patterninput method)": [[29, "cli_command_parser.inputs.patterns.PatternInput.format_metavar"]], "group (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.group"]], "groups (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.groups"]], "mode (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.mode"]], "normalize() (cli_command_parser.inputs.patterns.regexmode class method)": [[29, "cli_command_parser.inputs.patterns.RegexMode.normalize"]], "normcase (cli_command_parser.inputs.patterns.glob attribute)": [[29, "cli_command_parser.inputs.patterns.Glob.normcase"]], "patterns (cli_command_parser.inputs.patterns.patterninput attribute)": [[29, "cli_command_parser.inputs.patterns.PatternInput.patterns"]], "abbreviation (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.ABBREVIATION"]], "calendarunitinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput"]], "dtformatmode (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTFormatMode"]], "dtinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTInput"]], "date (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Date"]], "datetime (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTime"]], "datetimeinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTimeInput"]], "day (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Day"]], "full (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.FULL"]], "month (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Month"]], "numeric (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC"]], "numeric_iso (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC_ISO"]], "time (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Time"]], "timedelta (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.TimeDelta"]], "__call__() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__call__"]], "__call__() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__call__"]], "__call__() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.__call__"]], "__init_subclass__() (cli_command_parser.inputs.time.calendarunitinput class method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__init_subclass__"]], "__init_subclass__() (cli_command_parser.inputs.time.dtinput class method)": [[30, "cli_command_parser.inputs.time.DTInput.__init_subclass__"]], "__init_subclass__() (cli_command_parser.inputs.time.datetimeinput class method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__init_subclass__"]], "abbreviation (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.abbreviation"]], "choice_str() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choice_str"]], "choice_str() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.choice_str"]], "choice_str() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.choice_str"]], "choices() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choices"]], "cli_command_parser.inputs.time": [[30, "module-cli_command_parser.inputs.time"]], "different_locale (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.different_locale"]], "dt_repr() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.dt_repr"]], "dt_type (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.dt_type"]], "dt_type (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.dt_type"]], "dt_type (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.dt_type"]], "dt_type (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.dt_type"]], "dt_type (cli_command_parser.inputs.time.month attribute)": [[30, "cli_command_parser.inputs.time.Month.dt_type"]], "dt_type (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.dt_type"]], "earliest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.earliest"]], "fix_default() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.fix_default"]], "fix_default() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.fix_default"]], "format_metavar() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.format_metavar"]], "format_metavar() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.format_metavar"]], "format_metavar() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.format_metavar"]], "formats (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.formats"]], "full (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.full"]], "iso (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.iso"]], "latest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.latest"]], "locale (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.locale"]], "locale (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.locale"]], "locale (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.locale"]], "locale (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.locale"]], "locale (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.locale"]], "locale (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.locale"]], "normalize_dt() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.normalize_dt"]], "numeric (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.numeric"]], "original (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.original"]], "out_format (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_format"]], "out_locale (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_locale"]], "parse() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse"]], "parse() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse"]], "parse_dt() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse_dt"]], "parse_numeric() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse_numeric"]], "parse_numeric() (cli_command_parser.inputs.time.day method)": [[30, "cli_command_parser.inputs.time.Day.parse_numeric"]], "parse_numeric() (cli_command_parser.inputs.time.month method)": [[30, "cli_command_parser.inputs.time.Month.parse_numeric"]], "unit (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.unit"]], "any (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.ANY"]], "block (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.BLOCK"]], "character (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.CHARACTER"]], "dir (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.DIR"]], "fifo (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FIFO"]], "file (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FILE"]], "filewrapper (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.FileWrapper"]], "inputparam (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.InputParam"]], "link (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.LINK"]], "socket (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.SOCKET"]], "statmode (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.StatMode"]], "allows_write() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.allows_write"]], "cli_command_parser.inputs.utils": [[31, "module-cli_command_parser.inputs.utils"]], "close() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.close"]], "default (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.default"]], "fix_windows_path() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.fix_windows_path"]], "matches() (cli_command_parser.inputs.utils.statmode method)": [[31, "cli_command_parser.inputs.utils.StatMode.matches"]], "name (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.name"]], "read() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.read"]], "write() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.write"]], "dynamicmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.DynamicMetadata"]], "metadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.Metadata"]], "metadatabase (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.MetadataBase"]], "progfinder (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgFinder"]], "programmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgramMetadata"]], "cli_command_parser.metadata": [[32, "module-cli_command_parser.metadata"]], "cmd_module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.cmd_module"]], "command (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.command"]], "default (cli_command_parser.metadata.metadata attribute)": [[32, "cli_command_parser.metadata.Metadata.default"]], "description (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.description"]], "doc_name (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_name"]], "doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_str"]], "docs_url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.docs_url"]], "dynamic_metadata() (in module cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.dynamic_metadata"]], "email (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.email"]], "epilog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.epilog"]], "for_command() (cli_command_parser.metadata.programmetadata class method)": [[32, "cli_command_parser.metadata.ProgramMetadata.for_command"]], "format_epilog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.format_epilog"]], "func (cli_command_parser.metadata.dynamicmetadata attribute)": [[32, "cli_command_parser.metadata.DynamicMetadata.func"]], "get_description() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_description"]], "get_doc_str() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_doc_str"]], "get_parent() (cli_command_parser.metadata.metadatabase method)": [[32, "cli_command_parser.metadata.MetadataBase.get_parent"]], "get_prog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_prog"]], "get_value() (cli_command_parser.metadata.dynamicmetadata method)": [[32, "cli_command_parser.metadata.DynamicMetadata.get_value"]], "get_value() (cli_command_parser.metadata.metadata method)": [[32, "cli_command_parser.metadata.Metadata.get_value"]], "get_value() (cli_command_parser.metadata.metadatabase method)": [[32, "cli_command_parser.metadata.MetadataBase.get_value"]], "inheritable (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.inheritable"]], "mod_obj_prog_map (cli_command_parser.metadata.progfinder property)": [[32, "cli_command_parser.metadata.ProgFinder.mod_obj_prog_map"]], "module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.module"]], "name (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.name"]], "normalize() (cli_command_parser.metadata.progfinder method)": [[32, "cli_command_parser.metadata.ProgFinder.normalize"]], "package (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.package"]], "parent (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.parent"]], "path (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.path"]], "pkg_doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.pkg_doc_str"]], "prog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.prog"]], "url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.url"]], "usage (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.usage"]], "version (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.version"]], "nargs (class in cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.Nargs"]], "allowed (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.allowed"]], "cli_command_parser.nargs": [[33, "module-cli_command_parser.nargs"]], "has_upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.has_upper_bound"]], "max (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.max"]], "max_reached() (cli_command_parser.nargs.nargs method)": [[33, "cli_command_parser.nargs.Nargs.max_reached"]], "min (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.min"]], "nargs_min_and_max_sums() (in module cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.nargs_min_and_max_sums"]], "range (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.range"]], "satisfied() (cli_command_parser.nargs.nargs method)": [[33, "cli_command_parser.nargs.Nargs.satisfied"]], "upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.upper_bound"]], "variable (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.variable"]], "append (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Append"]], "appendconst (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.AppendConst"]], "basicconstaction (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.BasicConstAction"]], "concatenate (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Concatenate"]], "constmixin (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ConstMixin"]], "count (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Count"]], "paramaction (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ParamAction"]], "store (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Store"]], "storeall (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.StoreAll"]], "storeconst (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.StoreConst"]], "valuemixin (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ValueMixin"]], "__init_subclass__() (cli_command_parser.parameters.actions.constmixin class method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.__init_subclass__"]], "__init_subclass__() (cli_command_parser.parameters.actions.paramaction class method)": [[35, "cli_command_parser.parameters.actions.ParamAction.__init_subclass__"]], "accepts_consts (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.accepts_consts"]], "accepts_consts (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.accepts_consts"]], "accepts_consts (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.accepts_consts"]], "accepts_values (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.accepts_values"]], "accepts_values (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.accepts_values"]], "accepts_values (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.accepts_values"]], "accepts_values (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.accepts_values"]], "add_const (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_const"]], "add_const() (cli_command_parser.parameters.actions.appendconst method)": [[35, "cli_command_parser.parameters.actions.AppendConst.add_const"]], "add_const() (cli_command_parser.parameters.actions.count method)": [[35, "cli_command_parser.parameters.actions.Count.add_const"]], "add_const() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_const"]], "add_const() (cli_command_parser.parameters.actions.storeconst method)": [[35, "cli_command_parser.parameters.actions.StoreConst.add_const"]], "add_env_value() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_env_value"]], "add_env_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_env_value"]], "add_value (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_value"]], "add_value() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.add_value"]], "add_value() (cli_command_parser.parameters.actions.basicconstaction method)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.add_value"]], "add_value() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.add_value"]], "add_value() (cli_command_parser.parameters.actions.count method)": [[35, "cli_command_parser.parameters.actions.Count.add_value"]], "add_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_value"]], "add_value() (cli_command_parser.parameters.actions.store method)": [[35, "cli_command_parser.parameters.actions.Store.add_value"]], "add_values() (cli_command_parser.parameters.actions.storeall method)": [[35, "cli_command_parser.parameters.actions.StoreAll.add_values"]], "append_const() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.append_const"]], "append_value() (cli_command_parser.parameters.actions.valuemixin method)": [[35, "cli_command_parser.parameters.actions.ValueMixin.append_value"]], "can_reset() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.can_reset"]], "can_reset() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.can_reset"]], "cli_command_parser.parameters.actions": [[35, "module-cli_command_parser.parameters.actions"]], "default (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.default"]], "default (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.default"]], "default (cli_command_parser.parameters.actions.storeconst attribute)": [[35, "cli_command_parser.parameters.actions.StoreConst.default"]], "default_nargs (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.default_nargs"]], "default_nargs (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.default_nargs"]], "default_nargs (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.default_nargs"]], "default_nargs (cli_command_parser.parameters.actions.paramaction property)": [[35, "cli_command_parser.parameters.actions.ParamAction.default_nargs"]], "default_nargs (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.default_nargs"]], "default_nargs (cli_command_parser.parameters.actions.storeall attribute)": [[35, "cli_command_parser.parameters.actions.StoreAll.default_nargs"]], "finalize_default() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.finalize_default"]], "finalize_default() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.finalize_default"]], "finalize_default() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.finalize_default"]], "finalize_value() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.finalize_value"]], "finalize_value() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.finalize_value"]], "finalize_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.finalize_value"]], "get_default (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.get_default"]], "get_default (cli_command_parser.parameters.actions.valuemixin attribute)": [[35, "cli_command_parser.parameters.actions.ValueMixin.get_default"]], "get_default() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.get_default"]], "get_default() (cli_command_parser.parameters.actions.appendconst method)": [[35, "cli_command_parser.parameters.actions.AppendConst.get_default"]], "get_default() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.get_default"]], "get_maybe_poppable_counts() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.get_maybe_poppable_counts"]], "get_maybe_poppable_counts() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.get_maybe_poppable_counts"]], "name (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.name"]], "name (cli_command_parser.parameters.actions.appendconst attribute)": [[35, "cli_command_parser.parameters.actions.AppendConst.name"]], "name (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.name"]], "name (cli_command_parser.parameters.actions.concatenate attribute)": [[35, "cli_command_parser.parameters.actions.Concatenate.name"]], "name (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.name"]], "name (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.name"]], "name (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.name"]], "name (cli_command_parser.parameters.actions.storeall attribute)": [[35, "cli_command_parser.parameters.actions.StoreAll.name"]], "name (cli_command_parser.parameters.actions.storeconst attribute)": [[35, "cli_command_parser.parameters.actions.StoreConst.name"]], "param (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.param"]], "param (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.param"]], "param (cli_command_parser.parameters.actions.valuemixin attribute)": [[35, "cli_command_parser.parameters.actions.ValueMixin.param"]], "set_const() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.set_const"]], "set_value() (cli_command_parser.parameters.actions.valuemixin method)": [[35, "cli_command_parser.parameters.actions.ValueMixin.set_value"]], "would_accept() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.would_accept"]], "would_accept() (cli_command_parser.parameters.actions.basicconstaction method)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.would_accept"]], "would_accept() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.would_accept"]], "would_accept() (cli_command_parser.parameters.actions.store method)": [[35, "cli_command_parser.parameters.actions.Store.would_accept"]], "allowleadingdashproperty (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty"]], "baseoption (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.BaseOption"]], "basepositional (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.BasePositional"]], "parambase (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.ParamBase"]], "parameter (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.Parameter"]], "__init_subclass__() (cli_command_parser.parameters.base.basepositional class method)": [[36, "cli_command_parser.parameters.base.BasePositional.__init_subclass__"]], "__init_subclass__() (cli_command_parser.parameters.base.parameter class method)": [[36, "cli_command_parser.parameters.base.Parameter.__init_subclass__"]], "allow_leading_dash (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.allow_leading_dash"]], "cli_command_parser.parameters.base": [[36, "module-cli_command_parser.parameters.base"]], "command (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.command"]], "const (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.const"]], "default (cli_command_parser.parameters.base.allowleadingdashproperty attribute)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty.default"]], "env_var (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.env_var"]], "env_vars() (cli_command_parser.parameters.base.baseoption method)": [[36, "cli_command_parser.parameters.base.BaseOption.env_vars"]], "format_help() (cli_command_parser.parameters.base.parambase method)": [[36, "cli_command_parser.parameters.base.ParamBase.format_help"]], "format_usage() (cli_command_parser.parameters.base.parambase method)": [[36, "cli_command_parser.parameters.base.ParamBase.format_usage"]], "formatter (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.formatter"]], "get_const() (cli_command_parser.parameters.base.baseoption method)": [[36, "cli_command_parser.parameters.base.BaseOption.get_const"]], "get_const() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.get_const"]], "get_env_const() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.get_env_const"]], "group (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.group"]], "has_choices (cli_command_parser.parameters.base.parameter property)": [[36, "cli_command_parser.parameters.base.Parameter.has_choices"]], "help (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.help"]], "hide (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.hide"]], "is_valid_arg() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.is_valid_arg"]], "metavar (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.metavar"]], "missing_hint (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.missing_hint"]], "name (cli_command_parser.parameters.base.allowleadingdashproperty attribute)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty.name"]], "name (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.name"]], "nargs (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.nargs"]], "option_strs (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.option_strs"]], "prepare_value() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.prepare_value"]], "required (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.required"]], "result() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.result"]], "result_value() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.result_value"]], "show_default (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.show_default"]], "show_in_help (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.show_in_help"]], "show_in_help (cli_command_parser.parameters.base.parameter property)": [[36, "cli_command_parser.parameters.base.Parameter.show_in_help"]], "strict_default (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.strict_default"]], "strict_env (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.strict_env"]], "type (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.type"]], "use_env_value (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.use_env_value"]], "validate() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.validate"]], "action (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.Action"]], "choice (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.Choice"]], "choicemap (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap"]], "subcommand (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.SubCommand"]], "__call__() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.__call__"]], "__init_subclass__() (cli_command_parser.parameters.choice_map.choicemap class method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__"]], "choice (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.choice"]], "choices (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.choices"]], "cli_command_parser.parameters.choice_map": [[37, "module-cli_command_parser.parameters.choice_map"]], "description (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.description"]], "format_help() (cli_command_parser.parameters.choice_map.choice method)": [[37, "cli_command_parser.parameters.choice_map.Choice.format_help"]], "format_usage() (cli_command_parser.parameters.choice_map.choice method)": [[37, "cli_command_parser.parameters.choice_map.Choice.format_usage"]], "has_choices (cli_command_parser.parameters.choice_map.choicemap property)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.has_choices"]], "has_local_choices (cli_command_parser.parameters.choice_map.subcommand property)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.has_local_choices"]], "help (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.help"]], "local (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.local"]], "nargs (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.nargs"]], "register() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.register"]], "register() (cli_command_parser.parameters.choice_map.subcommand method)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.register"]], "register_action() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.register_action"]], "register_choice() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.register_choice"]], "register_command() (cli_command_parser.parameters.choice_map.subcommand method)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.register_command"]], "result() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.result"]], "result_value() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.result_value"]], "show_in_help (cli_command_parser.parameters.choice_map.choicemap property)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.show_in_help"]], "target (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.target"]], "target() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.target"]], "title (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.title"]], "validate() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.validate"]], "paramgroup (class in cli_command_parser.parameters.groups)": [[38, "cli_command_parser.parameters.groups.ParamGroup"]], "add() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.add"]], "cli_command_parser.parameters.groups": [[38, "module-cli_command_parser.parameters.groups"]], "contains_positional (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.contains_positional"]], "contains_required (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.contains_required"]], "description (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.description"]], "extend() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.extend"]], "in_mutually_exclusive_group (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.in_mutually_exclusive_group"]], "members (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.members"]], "mutually_dependent (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.mutually_dependent"]], "mutually_exclusive (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.mutually_exclusive"]], "register() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.register"]], "register_all() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.register_all"]], "show_in_help (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.show_in_help"]], "validate() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.validate"]], "optionstrings (class in cli_command_parser.parameters.option_strings)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings"]], "triflagoptionstrings (class in cli_command_parser.parameters.option_strings)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings"]], "add_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.add_alts"]], "all_option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.all_option_strs"]], "all_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.all_option_strs"]], "alt_allowed (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_allowed"]], "alt_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_option_strs"]], "cli_command_parser.parameters.option_strings": [[39, "module-cli_command_parser.parameters.option_strings"]], "combinable (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.combinable"]], "display_long (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.display_long"]], "display_long_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_alt"]], "display_long_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_primary"]], "get_sets() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.get_sets"]], "get_usage_opt() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.get_usage_opt"]], "get_usage_opt() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.get_usage_opt"]], "has_long() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.has_long"]], "has_long() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_long"]], "has_min_opts() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.has_min_opts"]], "has_min_opts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_min_opts"]], "long (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.long"]], "name_mode (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.name_mode"]], "option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.option_strs"]], "option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.option_strs"]], "primary_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.primary_option_strs"]], "short (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.short"]], "short_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_alt"]], "short_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_primary"]], "update() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.update"]], "update_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.update_alts"]], "actionflag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.ActionFlag"]], "counter (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Counter"]], "flag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Flag"]], "option (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Option"]], "triflag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.TriFlag"]], "__call__() (cli_command_parser.parameters.options.actionflag method)": [[40, "cli_command_parser.parameters.options.ActionFlag.__call__"]], "action_flag (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.action_flag"]], "after_main() (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.after_main"]], "allow_leading_dash (cli_command_parser.parameters.options.option attribute)": [[40, "cli_command_parser.parameters.options.Option.allow_leading_dash"]], "alt_help (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.alt_help"]], "before_main() (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.before_main"]], "cli_command_parser.parameters.options": [[40, "module-cli_command_parser.parameters.options"]], "consts (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.consts"]], "default (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.default"]], "default (cli_command_parser.parameters.options.flag attribute)": [[40, "cli_command_parser.parameters.options.Flag.default"]], "default (cli_command_parser.parameters.options.option attribute)": [[40, "cli_command_parser.parameters.options.Option.default"]], "default (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.default"]], "func (cli_command_parser.parameters.options.actionflag property)": [[40, "cli_command_parser.parameters.options.ActionFlag.func"]], "get_const() (cli_command_parser.parameters.options.triflag method)": [[40, "cli_command_parser.parameters.options.TriFlag.get_const"]], "get_env_const() (cli_command_parser.parameters.options.flag method)": [[40, "cli_command_parser.parameters.options.Flag.get_env_const"]], "get_env_const() (cli_command_parser.parameters.options.triflag method)": [[40, "cli_command_parser.parameters.options.TriFlag.get_env_const"]], "init (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.init"]], "nargs (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.nargs"]], "nargs (cli_command_parser.parameters.options.flag attribute)": [[40, "cli_command_parser.parameters.options.Flag.nargs"]], "nargs (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.nargs"]], "option_strs (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.option_strs"]], "prepare_value() (cli_command_parser.parameters.options.counter method)": [[40, "cli_command_parser.parameters.options.Counter.prepare_value"]], "result() (cli_command_parser.parameters.options.actionflag method)": [[40, "cli_command_parser.parameters.options.ActionFlag.result"]], "type (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.type"]], "type() (cli_command_parser.parameters.options.flag static method)": [[40, "cli_command_parser.parameters.options.Flag.type"]], "type() (cli_command_parser.parameters.options.triflag static method)": [[40, "cli_command_parser.parameters.options.TriFlag.type"]], "use_env_value (cli_command_parser.parameters.options.flag attribute)": [[40, "cli_command_parser.parameters.options.Flag.use_env_value"]], "use_env_value (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.use_env_value"]], "validate() (cli_command_parser.parameters.options.counter method)": [[40, "cli_command_parser.parameters.options.Counter.validate"]], "passthru (class in cli_command_parser.parameters.pass_thru)": [[41, "cli_command_parser.parameters.pass_thru.PassThru"]], "cli_command_parser.parameters.pass_thru": [[41, "module-cli_command_parser.parameters.pass_thru"]], "missing_hint (cli_command_parser.parameters.pass_thru.passthru attribute)": [[41, "cli_command_parser.parameters.pass_thru.PassThru.missing_hint"]], "nargs (cli_command_parser.parameters.pass_thru.passthru attribute)": [[41, "cli_command_parser.parameters.pass_thru.PassThru.nargs"]], "positional (class in cli_command_parser.parameters.positionals)": [[42, "cli_command_parser.parameters.positionals.Positional"]], "allow_leading_dash (cli_command_parser.parameters.positionals.positional attribute)": [[42, "cli_command_parser.parameters.positionals.Positional.allow_leading_dash"]], "cli_command_parser.parameters.positionals": [[42, "module-cli_command_parser.parameters.positionals"]], "anyword (class in cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.AnyWord"]], "posnode (class in cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.PosNode"]], "any_node (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.any_node"]], "any_word (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.any_word"]], "build_tree() (cli_command_parser.parse_tree.posnode class method)": [[43, "cli_command_parser.parse_tree.PosNode.build_tree"]], "cli_command_parser.parse_tree": [[43, "module-cli_command_parser.parse_tree"]], "has_any() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.has_any"]], "link_params() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.link_params"]], "links (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.links"]], "n (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.n"]], "nargs (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.nargs"]], "nargs_min_and_max() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.nargs_min_and_max"]], "param (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.param"]], "parent (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.parent"]], "path_repr() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.path_repr"]], "print_tree() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.print_tree"]], "process_param() (in module cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.process_param"]], "process_params() (in module cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.process_params"]], "raw_path (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.raw_path"]], "remaining (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.remaining"]], "target (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.target"]], "update_node() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.update_node"]], "word (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.word"]], "commandparser (class in cli_command_parser.parser)": [[44, "cli_command_parser.parser.CommandParser"]], "arg_deque (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.arg_deque"]], "cli_command_parser.parser": [[44, "module-cli_command_parser.parser"]], "config (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.config"]], "consume_values() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.consume_values"]], "ctx (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.ctx"]], "deferred (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.deferred"]], "get_next_cmd() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.get_next_cmd"]], "get_opt_prefix() (in module cli_command_parser.parser)": [[44, "cli_command_parser.parser.get_opt_prefix"]], "handle_long() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_long"]], "handle_pass_thru() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_pass_thru"]], "handle_positional() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_positional"]], "handle_remainder() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_remainder"]], "handle_short() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_short"]], "params (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.params"]], "parse_args_and_get_next_cmd() (cli_command_parser.parser.commandparser class method)": [[44, "cli_command_parser.parser.CommandParser.parse_args_and_get_next_cmd"]], "parse_args_and_get_next_cmd() (in module cli_command_parser.parser)": [[44, "cli_command_parser.parser.parse_args_and_get_next_cmd"]], "positionals (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.positionals"]], "assertraiseswithstringcontext (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext"]], "parsertest (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.ParserTest"]], "redirectstreams (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.RedirectStreams"]], "temporarydir (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.TemporaryDir"]], "assert_argv_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_argv_parse_fails_cases"]], "assert_call_fails() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_call_fails"]], "assert_call_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_call_fails_cases"]], "assert_dict_equal() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_dict_equal"]], "assert_env_parse_results() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_env_parse_results"]], "assert_env_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_env_parse_results_cases"]], "assert_parse_fails() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_fails"]], "assert_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_fails_cases"]], "assert_parse_results() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_results"]], "assert_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_results_cases"]], "assert_raises_contains_str() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_raises_contains_str"]], "assert_str_contains() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_str_contains"]], "assert_str_starts_with_line() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_str_starts_with_line"]], "assert_strings_equal() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_strings_equal"]], "cli_command_parser.testing": [[45, "module-cli_command_parser.testing"]], "env_vars() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.env_vars"]], "expected_exc (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.expected_exc"]], "expected_text (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.expected_text"]], "format_dict_diff() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.format_dict_diff"]], "format_diff() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.format_diff"]], "get_help_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_help_text"]], "get_rst_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_rst_text"]], "get_usage_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_usage_text"]], "load_command() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.load_command"]], "msg (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.msg"]], "sealed_mock() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.sealed_mock"]], "stderr (cli_command_parser.testing.redirectstreams property)": [[45, "cli_command_parser.testing.RedirectStreams.stderr"]], "stdout (cli_command_parser.testing.redirectstreams property)": [[45, "cli_command_parser.testing.RedirectStreams.stdout"]], "test_case (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.test_case"]], "cli_command_parser.typing": [[46, "module-cli_command_parser.typing"]], "fixedflag (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.FixedFlag"]], "fixedflagmeta (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.FixedFlagMeta"]], "missingmixin (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.MissingMixin"]], "terminal (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.Terminal"]], "camel_to_snake_case() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.camel_to_snake_case"]], "cli_command_parser.utils": [[47, "module-cli_command_parser.utils"]], "positive_int() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.positive_int"]], "short_repr() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.short_repr"]], "str_to_bool() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.str_to_bool"]], "width (cli_command_parser.utils.terminal property)": [[47, "cli_command_parser.utils.Terminal.width"]], "pep 484": [[69, "index-0"]], "python enhancement proposals": [[69, "index-0"]]}})