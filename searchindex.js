Search.setIndex({"alltitles": {"API Documentation": [[1, "api-documentation"]], "Accessing Raw Argument Values": [[0, "accessing-raw-argument-values"]], "Action": [[69, "action"]], "Action With Args": [[53, "action-with-args"]], "ActionFlag": [[69, "actionflag"]], "ActionFlag Options": [[49, "actionflag-options"]], "Actions Module": [[35, "module-cli_command_parser.parameters.actions"]], "Advanced": [[48, "advanced"], [51, "advanced"], [66, "advanced"]], "Advanced Subcommand": [[54, "advanced-subcommand"]], "Advanced Usage": [[0, "advanced-usage"]], "Annotations Module": [[2, "module-cli_command_parser.annotations"]], "Argparse_Ast Module": [[8, "module-cli_command_parser.conversion.argparse_ast"]], "Argparse_Utils Module": [[9, "module-cli_command_parser.conversion.argparse_utils"]], "Asyncio Applications": [[48, "asyncio-applications"]], "Automatic Registration": [[70, "automatic-registration"]], "Base Module": [[24, "module-cli_command_parser.inputs.base"], [36, "module-cli_command_parser.parameters.base"]], "Basic Subcommand": [[55, "basic-subcommand"]], "Building Commands": [[66, "building-commands"]], "CLI Command Parser": [[66, "cli-command-parser"]], "Choice Inputs": [[67, "choice-inputs"]], "ChoiceMap": [[67, "choicemap"]], "Choice_Map Module": [[37, "module-cli_command_parser.parameters.choice_map"]], "Choices": [[67, "choices"]], "Choices Module": [[25, "module-cli_command_parser.inputs.choices"]], "Cli Module": [[10, "module-cli_command_parser.conversion.cli"]], "Combining Group Types": [[65, "combining-group-types"]], "Command Metadata": [[49, "command-metadata"]], "Command Methods & Attributes": [[48, "command-methods-attributes"]], "Command Wrapper": [[56, "command-wrapper"]], "Command_Builder Module": [[11, "module-cli_command_parser.conversion.command_builder"]], "Command_Parameters Module": [[3, "module-cli_command_parser.command_parameters"]], "Commands": [[48, "commands"]], "Commands Module": [[4, "module-cli_command_parser.commands"], [19, "module-cli_command_parser.formatting.commands"]], "Complex Example": [[57, "complex-example"]], "Config Module": [[5, "module-cli_command_parser.config"]], "Configuration": [[49, "configuration"], [51, "configuration"]], "Configuration Options": [[49, "configuration-options"]], "Configuring & Documenting Commands": [[66, "configuring-documenting-commands"]], "Context Module": [[6, "module-cli_command_parser.context"]], "Conversion Package": [[7, "conversion-package"]], "Core Module": [[14, "module-cli_command_parser.core"]], "Counter": [[69, "counter"]], "Custom Inputs": [[58, "custom-inputs"]], "Date": [[67, "date"]], "Date & Time": [[67, "date-time"]], "DateTime": [[67, "datetime"]], "Day": [[67, "day"]], "Day & Month": [[67, "day-month"]], "Defining Commands": [[48, "defining-commands"]], "Defining Error Handlers": [[51, "defining-error-handlers"]], "Documentation": [[50, "documentation"]], "Documentation Generation Options": [[49, "documentation-generation-options"]], "Documentation Module": [[15, "module-cli_command_parser.documentation"]], "Dynamic Parameter Defaults": [[0, "dynamic-parameter-defaults"]], "Echo": [[59, "echo"]], "Entry Points": [[68, "entry-points"]], "EnumChoices": [[67, "enumchoices"]], "Error Handling": [[51, "error-handling"]], "Error Handling Options": [[49, "error-handling-options"]], "Error_Handling Module": [[16, "module-cli_command_parser.error_handling"]], "Example Program": [[66, "example-program"]], "Example Scripts": [[52, "example-scripts"]], "Examples": [[65, "examples"]], "Exceptions Module": [[17, "module-cli_command_parser.exceptions"], [26, "module-cli_command_parser.inputs.exceptions"]], "Explicit Registration": [[70, "explicit-registration"]], "File": [[67, "file"]], "Files Module": [[27, "module-cli_command_parser.inputs.files"]], "Flag": [[69, "flag"]], "Formatting Package": [[18, "formatting-package"]], "Full Date / Time Parsing": [[67, "full-date-time-parsing"]], "Generating RST Documentation": [[50, "generating-rst-documentation"]], "Getting Started": [[68, "getting-started"]], "Glob": [[67, "glob"]], "Group Formatting": [[50, "group-formatting"]], "Grouped Action Flags": [[60, "grouped-action-flags"]], "Groups Module": [[38, "module-cli_command_parser.parameters.groups"]], "Hello World": [[61, "hello-world"]], "Help Text": [[50, "help-text"], [68, "help-text"]], "Help Text Breakdown": [[50, "help-text-breakdown"]], "How it Works": [[65, "how-it-works"]], "Indices and Tables": [[66, "indices-and-tables"]], "Inheritance": [[48, "inheritance"]], "Initialization Methods": [[48, "initialization-methods"]], "Input Types": [[67, "input-types"]], "Inputs Package": [[23, "inputs-package"]], "Installing CLI Command Parser": [[66, "installing-cli-command-parser"]], "Links": [[66, "links"]], "Manual Input Validation": [[67, "manual-input-validation"]], "Metadata Module": [[32, "module-cli_command_parser.metadata"]], "Mixing Actions & ActionFlags": [[0, "mixing-actions-actionflags"]], "Month": [[67, "month"]], "Mutually Dependent": [[65, "mutually-dependent"]], "Mutually Dependent Outer Group": [[65, "mutually-dependent-outer-group"]], "Mutually Exclusive": [[65, "mutually-exclusive"]], "Mutually Exclusive Outer Group": [[65, "mutually-exclusive-outer-group"]], "Names": [[68, "names"]], "Nargs Module": [[33, "module-cli_command_parser.nargs"]], "Nested Subcommands": [[70, "nested-subcommands"]], "NumRange": [[67, "numrange"]], "Numeric Module": [[28, "module-cli_command_parser.inputs.numeric"]], "Numeric Ranges": [[67, "numeric-ranges"]], "Option": [[69, "option"]], "Option_Strings Module": [[39, "module-cli_command_parser.parameters.option_strings"]], "Options": [[69, "options"]], "Options Module": [[40, "module-cli_command_parser.parameters.options"]], "Other Date / Time Inputs": [[67, "other-date-time-inputs"]], "Others": [[69, "others"]], "Overriding Command Methods": [[48, "overriding-command-methods"]], "Overriding main": [[48, "overriding-main"]], "Parameter Groups": [[65, "parameter-groups"]], "Parameter List Formatting": [[50, "parameter-list-formatting"]], "Parameter Options": [[49, "parameter-options"]], "Parameters": [[68, "parameters"], [69, "parameters"]], "Parameters Package": [[34, "parameters-package"]], "Parameters with Overridden Names": [[0, "parameters-with-overridden-names"]], "Params Module": [[20, "module-cli_command_parser.formatting.params"]], "Parse & Run": [[48, "parse-run"]], "Parse_Tree Module": [[43, "module-cli_command_parser.parse_tree"]], "Parsed Args as a Dictionary": [[0, "parsed-args-as-a-dictionary"]], "Parser Module": [[44, "module-cli_command_parser.parser"]], "Parsing Options": [[49, "parsing-options"]], "PassThru": [[69, "passthru"]], "Pass_Thru Module": [[41, "module-cli_command_parser.parameters.pass_thru"]], "Path": [[67, "path"]], "Paths & Files": [[67, "paths-files"]], "Patterns Module": [[29, "module-cli_command_parser.inputs.patterns"]], "Positional": [[69, "positional"]], "Positionals": [[69, "positionals"]], "Positionals Module": [[42, "module-cli_command_parser.parameters.positionals"]], "Post-Run & Context": [[0, "post-run-context"]], "Python Version Compatibility": [[66, "python-version-compatibility"]], "Range": [[67, "range"]], "Regex": [[67, "regex"]], "Regex & Glob Patterns": [[67, "regex-glob-patterns"]], "Rest Api Wrapper": [[62, "rest-api-wrapper"]], "Restructured_Text Module": [[21, "module-cli_command_parser.formatting.restructured_text"]], "Serialized Files": [[67, "serialized-files"]], "Shared Common Parameters": [[70, "shared-common-parameters"]], "Shared Logging Init": [[63, "shared-logging-init"]], "Simple Flags": [[64, "simple-flags"]], "SubCommand": [[69, "subcommand"]], "Subcommand: bar": [[55, "subcommand-bar"]], "Subcommand: baz": [[54, "subcommand-baz"]], "Subcommand: find": [[62, "subcommand-find"]], "Subcommand: find bar": [[62, "subcommand-find-bar"]], "Subcommand: find baz": [[62, "subcommand-find-baz"]], "Subcommand: find bazs": [[62, "subcommand-find-bazs"]], "Subcommand: find foo": [[62, "subcommand-find-foo"]], "Subcommand: foo": [[54, "subcommand-foo"], [55, "subcommand-foo"]], "Subcommand: hello": [[57, "subcommand-hello"]], "Subcommand: logs": [[57, "subcommand-logs"]], "Subcommand: run bar": [[54, "subcommand-run-bar"]], "Subcommand: run foo": [[54, "subcommand-run-foo"]], "Subcommand: show": [[62, "subcommand-show"], [63, "subcommand-show"]], "Subcommand: sync": [[62, "subcommand-sync"]], "Subcommand: update": [[57, "subcommand-update"]], "Subcommand: update bar": [[57, "subcommand-update-bar"]], "Subcommand: update foo": [[57, "subcommand-update-foo"]], "Subcommand: update group": [[57, "subcommand-update-group"]], "Subcommand: update user": [[57, "subcommand-update-user"]], "Subcommands": [[54, "subcommands"], [55, "subcommands"], [57, "subcommands"], [62, "subcommands"], [63, "subcommands"], [70, "subcommands"]], "Supported _sunder_ Methods": [[48, "supported-sunder-methods"]], "Test Helpers": [[71, "test-helpers"]], "Testing Commands": [[71, "testing-commands"]], "Testing Module": [[45, "module-cli_command_parser.testing"]], "Testing Parsing": [[71, "testing-parsing"]], "Time": [[67, "time"]], "Time Module": [[30, "module-cli_command_parser.inputs.time"]], "TimeDelta": [[67, "timedelta"]], "TriFlag": [[69, "triflag"]], "Types": [[68, "types"]], "Typing Module": [[46, "module-cli_command_parser.typing"]], "Usage & Help Text Options": [[49, "usage-help-text-options"]], "User Guide": [[66, "user-guide"]], "Using __init__": [[48, "using-init"]], "Using _before_main_": [[48, "using-before-main"]], "Using _init_command_": [[48, "using-init-command"]], "Utils Module": [[12, "module-cli_command_parser.conversion.utils"], [22, "module-cli_command_parser.formatting.utils"], [31, "module-cli_command_parser.inputs.utils"], [47, "module-cli_command_parser.utils"]], "Visitor Module": [[13, "module-cli_command_parser.conversion.visitor"]], "reStructuredText": [[50, "restructuredtext"]]}, "docnames": ["advanced", "api", "api/cli_command_parser.annotations", "api/cli_command_parser.command_parameters", "api/cli_command_parser.commands", "api/cli_command_parser.config", "api/cli_command_parser.context", "api/cli_command_parser.conversion", "api/cli_command_parser.conversion.argparse_ast", "api/cli_command_parser.conversion.argparse_utils", "api/cli_command_parser.conversion.cli", "api/cli_command_parser.conversion.command_builder", "api/cli_command_parser.conversion.utils", "api/cli_command_parser.conversion.visitor", "api/cli_command_parser.core", "api/cli_command_parser.documentation", "api/cli_command_parser.error_handling", "api/cli_command_parser.exceptions", "api/cli_command_parser.formatting", "api/cli_command_parser.formatting.commands", "api/cli_command_parser.formatting.params", "api/cli_command_parser.formatting.restructured_text", "api/cli_command_parser.formatting.utils", "api/cli_command_parser.inputs", "api/cli_command_parser.inputs.base", "api/cli_command_parser.inputs.choices", "api/cli_command_parser.inputs.exceptions", "api/cli_command_parser.inputs.files", "api/cli_command_parser.inputs.numeric", "api/cli_command_parser.inputs.patterns", "api/cli_command_parser.inputs.time", "api/cli_command_parser.inputs.utils", "api/cli_command_parser.metadata", "api/cli_command_parser.nargs", "api/cli_command_parser.parameters", "api/cli_command_parser.parameters.actions", "api/cli_command_parser.parameters.base", "api/cli_command_parser.parameters.choice_map", "api/cli_command_parser.parameters.groups", "api/cli_command_parser.parameters.option_strings", "api/cli_command_parser.parameters.options", "api/cli_command_parser.parameters.pass_thru", "api/cli_command_parser.parameters.positionals", "api/cli_command_parser.parse_tree", "api/cli_command_parser.parser", "api/cli_command_parser.testing", "api/cli_command_parser.typing", "api/cli_command_parser.utils", "commands", "configuration", "documentation", "error_handlers", "examples", "examples/action_with_args", "examples/advanced_subcommand", "examples/basic_subcommand", "examples/command_wrapper", "examples/complex", "examples/custom_inputs", "examples/echo", "examples/grouped_action_flags", "examples/hello_world", "examples/rest_api_wrapper", "examples/shared_logging_init", "examples/simple_flags", "groups", "index", "inputs", "intro", "parameters", "subcommands", "testing"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["advanced.rst", "api.rst", "api/cli_command_parser.annotations.rst", "api/cli_command_parser.command_parameters.rst", "api/cli_command_parser.commands.rst", "api/cli_command_parser.config.rst", "api/cli_command_parser.context.rst", "api/cli_command_parser.conversion.rst", "api/cli_command_parser.conversion.argparse_ast.rst", "api/cli_command_parser.conversion.argparse_utils.rst", "api/cli_command_parser.conversion.cli.rst", "api/cli_command_parser.conversion.command_builder.rst", "api/cli_command_parser.conversion.utils.rst", "api/cli_command_parser.conversion.visitor.rst", "api/cli_command_parser.core.rst", "api/cli_command_parser.documentation.rst", "api/cli_command_parser.error_handling.rst", "api/cli_command_parser.exceptions.rst", "api/cli_command_parser.formatting.rst", "api/cli_command_parser.formatting.commands.rst", "api/cli_command_parser.formatting.params.rst", "api/cli_command_parser.formatting.restructured_text.rst", "api/cli_command_parser.formatting.utils.rst", "api/cli_command_parser.inputs.rst", "api/cli_command_parser.inputs.base.rst", "api/cli_command_parser.inputs.choices.rst", "api/cli_command_parser.inputs.exceptions.rst", "api/cli_command_parser.inputs.files.rst", "api/cli_command_parser.inputs.numeric.rst", "api/cli_command_parser.inputs.patterns.rst", "api/cli_command_parser.inputs.time.rst", "api/cli_command_parser.inputs.utils.rst", "api/cli_command_parser.metadata.rst", "api/cli_command_parser.nargs.rst", "api/cli_command_parser.parameters.rst", "api/cli_command_parser.parameters.actions.rst", "api/cli_command_parser.parameters.base.rst", "api/cli_command_parser.parameters.choice_map.rst", "api/cli_command_parser.parameters.groups.rst", "api/cli_command_parser.parameters.option_strings.rst", "api/cli_command_parser.parameters.options.rst", "api/cli_command_parser.parameters.pass_thru.rst", "api/cli_command_parser.parameters.positionals.rst", "api/cli_command_parser.parse_tree.rst", "api/cli_command_parser.parser.rst", "api/cli_command_parser.testing.rst", "api/cli_command_parser.typing.rst", "api/cli_command_parser.utils.rst", "commands.rst", "configuration.rst", "documentation.rst", "error_handlers.rst", "examples.rst", "examples/action_with_args.rst", "examples/advanced_subcommand.rst", "examples/basic_subcommand.rst", "examples/command_wrapper.rst", "examples/complex.rst", "examples/custom_inputs.rst", "examples/echo.rst", "examples/grouped_action_flags.rst", "examples/hello_world.rst", "examples/rest_api_wrapper.rst", "examples/shared_logging_init.rst", "examples/simple_flags.rst", "groups.rst", "index.rst", "inputs.rst", "intro.rst", "parameters.rst", "subcommands.rst", "testing.rst"], "indexentries": {"__call__() (cli_command_parser.commands.asynccommand method)": [[4, "cli_command_parser.commands.AsyncCommand.__call__", false]], "__call__() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command.__call__", false]], "__call__() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.__call__", false]], "__call__() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.__call__", false]], "__call__() (cli_command_parser.inputs.choices.choicemap method)": [[25, "cli_command_parser.inputs.choices.ChoiceMap.__call__", false]], "__call__() (cli_command_parser.inputs.choices.choices method)": [[25, "cli_command_parser.inputs.choices.Choices.__call__", false]], "__call__() (cli_command_parser.inputs.choices.enumchoices method)": [[25, "cli_command_parser.inputs.choices.EnumChoices.__call__", false]], "__call__() (cli_command_parser.inputs.files.file method)": [[27, "cli_command_parser.inputs.files.File.__call__", false]], "__call__() (cli_command_parser.inputs.files.path method)": [[27, "cli_command_parser.inputs.files.Path.__call__", false]], "__call__() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.__call__", false]], "__call__() (cli_command_parser.inputs.numeric.range method)": [[28, "cli_command_parser.inputs.numeric.Range.__call__", false]], "__call__() (cli_command_parser.inputs.patterns.glob method)": [[29, "cli_command_parser.inputs.patterns.Glob.__call__", false]], "__call__() (cli_command_parser.inputs.patterns.regex method)": [[29, "cli_command_parser.inputs.patterns.Regex.__call__", false]], "__call__() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__call__", false]], "__call__() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__call__", false]], "__call__() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.__call__", false]], "__call__() (cli_command_parser.parameters.base.defaultcallback method)": [[36, "cli_command_parser.parameters.base.DefaultCallback.__call__", false]], "__call__() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.__call__", false]], "__call__() (cli_command_parser.parameters.options.actionflag method)": [[40, "cli_command_parser.parameters.options.ActionFlag.__call__", false]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.argcollection class method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.conversion.argparse_ast.astcallable class method)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.inputs.time.calendarunitinput class method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.inputs.time.datetimeinput class method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.inputs.time.dtinput class method)": [[30, "cli_command_parser.inputs.time.DTInput.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.parameters.actions.constmixin class method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.parameters.actions.paramaction class method)": [[35, "cli_command_parser.parameters.actions.ParamAction.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.parameters.base.basepositional class method)": [[36, "cli_command_parser.parameters.base.BasePositional.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.parameters.base.parameter class method)": [[36, "cli_command_parser.parameters.base.Parameter.__init_subclass__", false]], "__init_subclass__() (cli_command_parser.parameters.choice_map.choicemap class method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__", false]], "_after_main_() (cli_command_parser.commands.asynccommand method)": [[4, "cli_command_parser.commands.AsyncCommand._after_main_", false]], "_after_main_() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command._after_main_", false]], "_before_main_() (cli_command_parser.commands.asynccommand method)": [[4, "cli_command_parser.commands.AsyncCommand._before_main_", false]], "_before_main_() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command._before_main_", false]], "_init_command_() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command._init_command_", false]], "_init_command_() (cli_command_parser.conversion.cli.parserconverter method)": [[10, "cli_command_parser.conversion.cli.ParserConverter._init_command_", false]], "_pre_init_actions_() (cli_command_parser.commands.asynccommand method)": [[4, "cli_command_parser.commands.AsyncCommand._pre_init_actions_", false]], "_pre_init_actions_() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command._pre_init_actions_", false]], "abbreviation (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.abbreviation", false]], "abbreviation (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.ABBREVIATION", false]], "accepts_consts (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.accepts_consts", false]], "accepts_consts (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.accepts_consts", false]], "accepts_consts (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.accepts_consts", false]], "accepts_values (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.accepts_values", false]], "accepts_values (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.accepts_values", false]], "accepts_values (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.accepts_values", false]], "accepts_values (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.accepts_values", false]], "action (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.Action", false]], "action (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.action", false]], "action (cli_command_parser.conversion.cli.parserconverter attribute)": [[10, "cli_command_parser.conversion.cli.ParserConverter.action", false]], "action (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.action", false]], "action_after_action_flags (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.action_after_action_flags", false]], "action_flag (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.action_flag", false]], "action_flag_count (cli_command_parser.context.context property)": [[6, "cli_command_parser.context.Context.action_flag_count", false]], "action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.action_flags", false]], "actionflag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.ActionFlag", false]], "actionphase (class in cli_command_parser.context)": [[6, "cli_command_parser.context.ActionPhase", false]], "add() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.add", false]], "add() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.add", false]], "add_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.add_alts", false]], "add_argument (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument", false]], "add_argument_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_argument_group", false]], "add_argument_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[9, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_argument_group", false]], "add_const (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_const", false]], "add_const() (cli_command_parser.parameters.actions.appendconst method)": [[35, "cli_command_parser.parameters.actions.AppendConst.add_const", false]], "add_const() (cli_command_parser.parameters.actions.count method)": [[35, "cli_command_parser.parameters.actions.Count.add_const", false]], "add_const() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_const", false]], "add_const() (cli_command_parser.parameters.actions.storeconst method)": [[35, "cli_command_parser.parameters.actions.StoreConst.add_const", false]], "add_dict_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_dict_rows", false]], "add_env_value() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_env_value", false]], "add_env_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_env_value", false]], "add_help (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.add_help", false]], "add_help (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.add_help", false]], "add_kv_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_kv_rows", false]], "add_methods (cli_command_parser.conversion.cli.convert attribute)": [[10, "cli_command_parser.conversion.cli.Convert.add_methods", false]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.add_mutually_exclusive_group", false]], "add_mutually_exclusive_group() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[9, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_mutually_exclusive_group", false]], "add_parser() (cli_command_parser.conversion.argparse_ast.script method)": [[8, "cli_command_parser.conversion.argparse_ast.Script.add_parser", false]], "add_parser() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[8, "cli_command_parser.conversion.argparse_ast.SubparsersAction.add_parser", false]], "add_parser() (cli_command_parser.conversion.argparse_utils.subparsersaction method)": [[9, "cli_command_parser.conversion.argparse_utils.SubParsersAction.add_parser", false]], "add_row() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_row", false]], "add_rows() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.add_rows", false]], "add_subparsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.add_subparsers", false]], "add_subparsers() (cli_command_parser.conversion.argparse_utils.argumentparser method)": [[9, "cli_command_parser.conversion.argparse_utils.ArgumentParser.add_subparsers", false]], "add_value (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.add_value", false]], "add_value() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.add_value", false]], "add_value() (cli_command_parser.parameters.actions.basicconstaction method)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.add_value", false]], "add_value() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.add_value", false]], "add_value() (cli_command_parser.parameters.actions.count method)": [[35, "cli_command_parser.parameters.actions.Count.add_value", false]], "add_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.add_value", false]], "add_value() (cli_command_parser.parameters.actions.store method)": [[35, "cli_command_parser.parameters.actions.Store.add_value", false]], "add_values() (cli_command_parser.parameters.actions.storeall method)": [[35, "cli_command_parser.parameters.actions.StoreAll.add_values", false]], "addvisitedchild (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.AddVisitedChild", false]], "after_main (cli_command_parser.context.actionphase attribute)": [[6, "cli_command_parser.context.ActionPhase.AFTER_MAIN", false]], "after_main() (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.after_main", false]], "alias (cli_command_parser.config.subcommandaliashelpmode attribute)": [[5, "cli_command_parser.config.SubcommandAliasHelpMode.ALIAS", false]], "all_action_flags (cli_command_parser.context.context property)": [[6, "cli_command_parser.context.Context.all_action_flags", false]], "all_option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.all_option_strs", false]], "all_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.all_option_strs", false]], "all_positionals (cli_command_parser.command_parameters.commandparameters property)": [[3, "cli_command_parser.command_parameters.CommandParameters.all_positionals", false]], "allow_annotation_type (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.allow_annotation_type", false]], "allow_argv_prog (cli_command_parser.context.context attribute)": [[6, "cli_command_parser.context.Context.allow_argv_prog", false]], "allow_backtrack (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.allow_backtrack", false]], "allow_dash (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.allow_dash", false]], "allow_leading_dash (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.allow_leading_dash", false]], "allow_leading_dash (cli_command_parser.parameters.options.option attribute)": [[40, "cli_command_parser.parameters.options.Option.allow_leading_dash", false]], "allow_leading_dash (cli_command_parser.parameters.positionals.positional attribute)": [[42, "cli_command_parser.parameters.positionals.Positional.allow_leading_dash", false]], "allow_missing (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.allow_missing", false]], "allowed (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.allowed", false]], "allowleadingdash (class in cli_command_parser.config)": [[5, "cli_command_parser.config.AllowLeadingDash", false]], "allowleadingdashproperty (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty", false]], "allows_write() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.allows_write", false]], "alt_allowed (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_allowed", false]], "alt_help (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.alt_help", false]], "alt_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.alt_option_strs", false]], "always (cli_command_parser.config.allowleadingdash attribute)": [[5, "cli_command_parser.config.AllowLeadingDash.ALWAYS", false]], "always_run_after_main (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.always_run_after_main", false]], "ambiguous_short_combos (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.ambiguous_short_combos", false]], "ambiguouscombo": [[17, "cli_command_parser.exceptions.AmbiguousCombo", false]], "ambiguouscombomode (class in cli_command_parser.config)": [[5, "cli_command_parser.config.AmbiguousComboMode", false]], "ambiguousparsetree": [[17, "cli_command_parser.exceptions.AmbiguousParseTree", false]], "ambiguousshortform": [[17, "cli_command_parser.exceptions.AmbiguousShortForm", false]], "any (cli_command_parser.config.showdefaults attribute)": [[5, "cli_command_parser.config.ShowDefaults.ANY", false]], "any (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.ANY", false]], "any_node (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.any_node", false]], "any_word (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.any_word", false]], "anyword (class in cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.AnyWord", false]], "append (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Append", false]], "append_const() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.append_const", false]], "append_value() (cli_command_parser.parameters.actions.valuemixin method)": [[35, "cli_command_parser.parameters.actions.ValueMixin.append_value", false]], "appendconst (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.AppendConst", false]], "arg_deque (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.arg_deque", false]], "argcollection (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection", false]], "arggroup (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.ArgGroup", false]], "args (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.args", false]], "argumentparser (class in cli_command_parser.conversion.argparse_utils)": [[9, "cli_command_parser.conversion.argparse_utils.ArgumentParser", false]], "as_dict() (cli_command_parser.config.commandconfig method)": [[5, "cli_command_parser.config.CommandConfig.as_dict", false]], "assert_argv_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_argv_parse_fails_cases", false]], "assert_call_fails() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_call_fails", false]], "assert_call_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_call_fails_cases", false]], "assert_dict_equal() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_dict_equal", false]], "assert_env_parse_results() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_env_parse_results", false]], "assert_env_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_env_parse_results_cases", false]], "assert_parse_fails() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_fails", false]], "assert_parse_fails_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_fails_cases", false]], "assert_parse_results() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_results", false]], "assert_parse_results_cases() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_parse_results_cases", false]], "assert_raises_contains_str() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_raises_contains_str", false]], "assert_str_contains() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_str_contains", false]], "assert_str_starts_with_line() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_str_starts_with_line", false]], "assert_strings_equal() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.assert_strings_equal", false]], "assertraiseswithstringcontext (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext", false]], "ast_obj (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.ast_obj", false]], "ast_obj (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.ast_obj", false]], "ast_obj (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.ast_obj", false]], "ast_obj (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.ast_obj", false]], "astargumentparser (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.AstArgumentParser", false]], "astcallable (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable", false]], "asynccommand (class in cli_command_parser.commands)": [[4, "cli_command_parser.commands.AsyncCommand", false]], "attr_name (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.attr_name", false]], "backtrack": [[17, "cli_command_parser.exceptions.Backtrack", false]], "badargument": [[17, "cli_command_parser.exceptions.BadArgument", false]], "bar() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.bar", false]], "baseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs", false]], "baseoption (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.BaseOption", false]], "basepositional (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.BasePositional", false]], "basicconstaction (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.BasicConstAction", false]], "before_main (cli_command_parser.context.actionphase attribute)": [[6, "cli_command_parser.context.ActionPhase.BEFORE_MAIN", false]], "before_main() (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.before_main", false]], "block (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.BLOCK", false]], "both (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.BOTH", false]], "both_dash (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.BOTH_DASH", false]], "both_underscore (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.BOTH_UNDERSCORE", false]], "build_tree() (cli_command_parser.parse_tree.posnode class method)": [[43, "cli_command_parser.parse_tree.PosNode.build_tree", false]], "calendarunitinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput", false]], "camel_to_snake_case() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.camel_to_snake_case", false]], "can_reset() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.can_reset", false]], "can_reset() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.can_reset", false]], "categorized_action_flags (cli_command_parser.context.context property)": [[6, "cli_command_parser.context.Context.categorized_action_flags", false]], "character (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.CHARACTER", false]], "child_cls (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.child_cls", false]], "choice (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.Choice", false]], "choice (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choice", false]], "choice (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.choice", false]], "choice_delim (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.choice_delim", false]], "choice_groups (cli_command_parser.formatting.params.choicemaphelpformatter property)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.choice_groups", false]], "choice_str() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choice_str", false]], "choice_str() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.choice_str", false]], "choice_str() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.choice_str", false]], "choice_strs (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choice_strs", false]], "choicegroup (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceGroup", false]], "choicemap (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.ChoiceMap", false]], "choicemap (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap", false]], "choicemaphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter", false]], "choices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.Choices", false]], "choices (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.choices", false]], "choices (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.choices", false]], "choices (cli_command_parser.formatting.params.choicegroup attribute)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.choices", false]], "choices (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.choices", false]], "choices() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.choices", false]], "cli_command_parser.annotations": [[2, "module-cli_command_parser.annotations", false]], "cli_command_parser.command_parameters": [[3, "module-cli_command_parser.command_parameters", false]], "cli_command_parser.commands": [[4, "module-cli_command_parser.commands", false]], "cli_command_parser.config": [[5, "module-cli_command_parser.config", false]], "cli_command_parser.context": [[6, "module-cli_command_parser.context", false]], "cli_command_parser.conversion.argparse_ast": [[8, "module-cli_command_parser.conversion.argparse_ast", false]], "cli_command_parser.conversion.argparse_utils": [[9, "module-cli_command_parser.conversion.argparse_utils", false]], "cli_command_parser.conversion.cli": [[10, "module-cli_command_parser.conversion.cli", false]], "cli_command_parser.conversion.command_builder": [[11, "module-cli_command_parser.conversion.command_builder", false]], "cli_command_parser.conversion.utils": [[12, "module-cli_command_parser.conversion.utils", false]], "cli_command_parser.conversion.visitor": [[13, "module-cli_command_parser.conversion.visitor", false]], "cli_command_parser.core": [[14, "module-cli_command_parser.core", false]], "cli_command_parser.documentation": [[15, "module-cli_command_parser.documentation", false]], "cli_command_parser.error_handling": [[16, "module-cli_command_parser.error_handling", false]], "cli_command_parser.exceptions": [[17, "module-cli_command_parser.exceptions", false]], "cli_command_parser.formatting.commands": [[19, "module-cli_command_parser.formatting.commands", false]], "cli_command_parser.formatting.params": [[20, "module-cli_command_parser.formatting.params", false]], "cli_command_parser.formatting.restructured_text": [[21, "module-cli_command_parser.formatting.restructured_text", false]], "cli_command_parser.formatting.utils": [[22, "module-cli_command_parser.formatting.utils", false]], "cli_command_parser.inputs.base": [[24, "module-cli_command_parser.inputs.base", false]], "cli_command_parser.inputs.choices": [[25, "module-cli_command_parser.inputs.choices", false]], "cli_command_parser.inputs.exceptions": [[26, "module-cli_command_parser.inputs.exceptions", false]], "cli_command_parser.inputs.files": [[27, "module-cli_command_parser.inputs.files", false]], "cli_command_parser.inputs.numeric": [[28, "module-cli_command_parser.inputs.numeric", false]], "cli_command_parser.inputs.patterns": [[29, "module-cli_command_parser.inputs.patterns", false]], "cli_command_parser.inputs.time": [[30, "module-cli_command_parser.inputs.time", false]], "cli_command_parser.inputs.utils": [[31, "module-cli_command_parser.inputs.utils", false]], "cli_command_parser.metadata": [[32, "module-cli_command_parser.metadata", false]], "cli_command_parser.nargs": [[33, "module-cli_command_parser.nargs", false]], "cli_command_parser.parameters.actions": [[35, "module-cli_command_parser.parameters.actions", false]], "cli_command_parser.parameters.base": [[36, "module-cli_command_parser.parameters.base", false]], "cli_command_parser.parameters.choice_map": [[37, "module-cli_command_parser.parameters.choice_map", false]], "cli_command_parser.parameters.groups": [[38, "module-cli_command_parser.parameters.groups", false]], "cli_command_parser.parameters.option_strings": [[39, "module-cli_command_parser.parameters.option_strings", false]], "cli_command_parser.parameters.options": [[40, "module-cli_command_parser.parameters.options", false]], "cli_command_parser.parameters.pass_thru": [[41, "module-cli_command_parser.parameters.pass_thru", false]], "cli_command_parser.parameters.positionals": [[42, "module-cli_command_parser.parameters.positionals", false]], "cli_command_parser.parse_tree": [[43, "module-cli_command_parser.parse_tree", false]], "cli_command_parser.parser": [[44, "module-cli_command_parser.parser", false]], "cli_command_parser.testing": [[45, "module-cli_command_parser.testing", false]], "cli_command_parser.typing": [[46, "module-cli_command_parser.typing", false]], "cli_command_parser.utils": [[47, "module-cli_command_parser.utils", false]], "close() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.close", false]], "cls_handler() (cli_command_parser.error_handling.errorhandler class method)": [[16, "cli_command_parser.error_handling.ErrorHandler.cls_handler", false]], "cmd_alias_mode (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.cmd_alias_mode", false]], "cmd_module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.cmd_module", false]], "cmd_option_strs (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.cmd_option_strs", false]], "code (cli_command_parser.exceptions.commandparserexception attribute)": [[17, "cli_command_parser.exceptions.CommandParserException.code", false]], "collection_contents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.collection_contents", false]], "collectionconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter", false]], "combinable (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.combinable", false]], "combine (cli_command_parser.config.subcommandaliashelpmode attribute)": [[5, "cli_command_parser.config.SubcommandAliasHelpMode.COMBINE", false]], "combine_and_wrap() (cli_command_parser.formatting.utils.partwrapper method)": [[22, "cli_command_parser.formatting.utils.PartWrapper.combine_and_wrap", false]], "combo_option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.combo_option_map", false]], "command (class in cli_command_parser.commands)": [[4, "cli_command_parser.commands.Command", false]], "command (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.command", false]], "command (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.command", false]], "command (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.command", false]], "command_formatter (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.command_formatter", false]], "command_parent (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.command_parent", false]], "commandargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs", false]], "commandconfig (class in cli_command_parser.config)": [[5, "cli_command_parser.config.CommandConfig", false]], "commanddefinitionerror": [[17, "cli_command_parser.exceptions.CommandDefinitionError", false]], "commandhelpformatter (class in cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter", false]], "commandmeta (class in cli_command_parser.core)": [[14, "cli_command_parser.core.CommandMeta", false]], "commandparameters (class in cli_command_parser.command_parameters)": [[3, "cli_command_parser.command_parameters.CommandParameters", false]], "commandparser (class in cli_command_parser.parser)": [[44, "cli_command_parser.parser.CommandParser", false]], "commandparserexception": [[17, "cli_command_parser.exceptions.CommandParserException", false]], "concatenate (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Concatenate", false]], "config (cli_command_parser.context.context attribute)": [[6, "cli_command_parser.context.Context.config", false]], "config (cli_command_parser.context.contextproxy property)": [[6, "cli_command_parser.context.ContextProxy.config", false]], "config (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.config", false]], "config() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.config", false]], "config_item() (in module cli_command_parser.config)": [[5, "cli_command_parser.config.config_item", false]], "configitem (class in cli_command_parser.config)": [[5, "cli_command_parser.config.ConfigItem", false]], "const (cli_command_parser.conversion.command_builder.flagargs attribute)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.const", false]], "const (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.const", false]], "constmixin (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ConstMixin", false]], "consts (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.consts", false]], "consume_values() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.consume_values", false]], "cont_indent (cli_command_parser.formatting.utils.partwrapper attribute)": [[22, "cli_command_parser.formatting.utils.PartWrapper.cont_indent", false]], "contains_positional (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.contains_positional", false]], "contains_required (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.contains_required", false]], "context (class in cli_command_parser.context)": [[6, "cli_command_parser.context.Context", false]], "contextproxy (class in cli_command_parser.context)": [[6, "cli_command_parser.context.ContextProxy", false]], "conversionerror": [[11, "cli_command_parser.conversion.command_builder.ConversionError", false]], "convert (class in cli_command_parser.conversion.cli)": [[10, "cli_command_parser.conversion.cli.Convert", false]], "convert() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.convert", false]], "convert_script() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.convert_script", false]], "converter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.Converter", false]], "converter (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.converter", false]], "convertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup", false]], "converts (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.converts", false]], "converts (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.converts", false]], "converts (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.converts", false]], "converts (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.converts", false]], "converts (cli_command_parser.conversion.command_builder.scriptconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.converts", false]], "copy() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.copy", false]], "count (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Count", false]], "counter (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Counter", false]], "ctx (cli_command_parser.commands.command attribute)": [[4, "cli_command_parser.commands.Command.ctx", false]], "ctx (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.ctx", false]], "dash (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.DASH", false]], "date (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Date", false]], "datetime (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTime", false]], "datetimeinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DateTimeInput", false]], "day (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Day", false]], "default (cli_command_parser.config.configitem attribute)": [[5, "cli_command_parser.config.ConfigItem.default", false]], "default (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.default", false]], "default (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.default", false]], "default (cli_command_parser.metadata.metadata attribute)": [[32, "cli_command_parser.metadata.Metadata.default", false]], "default (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.default", false]], "default (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.default", false]], "default (cli_command_parser.parameters.actions.storeconst attribute)": [[35, "cli_command_parser.parameters.actions.StoreConst.default", false]], "default (cli_command_parser.parameters.base.allowleadingdashproperty attribute)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty.default", false]], "default (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.default", false]], "default_cb (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.default_cb", false]], "default_nargs (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.default_nargs", false]], "default_nargs (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.default_nargs", false]], "default_nargs (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.default_nargs", false]], "default_nargs (cli_command_parser.parameters.actions.paramaction property)": [[35, "cli_command_parser.parameters.actions.ParamAction.default_nargs", false]], "default_nargs (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.default_nargs", false]], "default_nargs (cli_command_parser.parameters.actions.storeall attribute)": [[35, "cli_command_parser.parameters.actions.StoreAll.default_nargs", false]], "defaultcallback (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.DefaultCallback", false]], "deferred (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.deferred", false]], "delim (cli_command_parser.formatting.utils.partwrapper attribute)": [[22, "cli_command_parser.formatting.utils.PartWrapper.delim", false]], "descendant_args() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.descendant_args", false]], "descendant_args() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.descendant_args", false]], "description (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.description", false]], "description (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.description", false]], "description (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.description", false]], "description (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.description", false]], "dict (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.DICT", false]], "different_locale (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.different_locale", false]], "dir (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.DIR", false]], "display_long (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.display_long", false]], "display_long_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_alt", false]], "display_long_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.display_long_primary", false]], "dist_for_obj() (cli_command_parser.metadata.distributionfinder method)": [[32, "cli_command_parser.metadata.DistributionFinder.dist_for_obj", false]], "dist_for_pkg() (cli_command_parser.metadata.distributionfinder method)": [[32, "cli_command_parser.metadata.DistributionFinder.dist_for_pkg", false]], "distribution (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.distribution", false]], "distributionfinder (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.DistributionFinder", false]], "doc_name (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_name", false]], "doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.doc_str", false]], "docs_url (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.docs_url", false]], "docs_url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.docs_url", false]], "document_module() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_module", false]], "document_package() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_package", false]], "document_script() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_script", false]], "document_scripts() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.document_scripts", false]], "dry_run (cli_command_parser.conversion.cli.parserconverter attribute)": [[10, "cli_command_parser.conversion.cli.ParserConverter.dry_run", false]], "dt_repr() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.dt_repr", false]], "dt_type (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.dt_type", false]], "dt_type (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.dt_type", false]], "dt_type (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.dt_type", false]], "dt_type (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.dt_type", false]], "dt_type (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.dt_type", false]], "dt_type (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.dt_type", false]], "dt_type (cli_command_parser.inputs.time.month attribute)": [[30, "cli_command_parser.inputs.time.Month.dt_type", false]], "dt_type (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.dt_type", false]], "dtformatmode (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTFormatMode", false]], "dtinput (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.DTInput", false]], "dynamic_metadata() (in module cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.dynamic_metadata", false]], "dynamicconfigitem (class in cli_command_parser.config)": [[5, "cli_command_parser.config.DynamicConfigItem", false]], "dynamicmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.DynamicMetadata", false]], "earliest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.earliest", false]], "email (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.email", false]], "email (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.email", false]], "encoding (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.encoding", false]], "enumchoices (class in cli_command_parser.inputs.choices)": [[25, "cli_command_parser.inputs.choices.EnumChoices", false]], "env_var (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.env_var", false]], "env_vars() (cli_command_parser.parameters.base.baseoption method)": [[36, "cli_command_parser.parameters.base.BaseOption.env_vars", false]], "env_vars() (cli_command_parser.testing.parsertest method)": [[45, "cli_command_parser.testing.ParserTest.env_vars", false]], "epilog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.epilog", false]], "epilog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.epilog", false]], "error_handler (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.error_handler", false]], "error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.error_handler", false]], "errorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.ErrorHandler", false]], "errors (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.errors", false]], "exc_cls (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.exc_cls", false]], "exc_handler_map (cli_command_parser.error_handling.errorhandler attribute)": [[16, "cli_command_parser.error_handling.ErrorHandler.exc_handler_map", false]], "exists (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.exists", false]], "exit() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.exit", false]], "expand (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.expand", false]], "expected_exc (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.expected_exc", false]], "expected_text (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.expected_text", false]], "extend() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.extend", false]], "extended_epilog (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.extended_epilog", false]], "extended_error_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.extended_error_handler", false]], "fields (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.FIELDS", false]], "fifo (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FIFO", false]], "file (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.File", false]], "file (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.FILE", false]], "fileinput (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.FileInput", false]], "filewrapper (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.FileWrapper", false]], "filtered_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.filtered_commands", false]], "finalize() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.finalize", false]], "finalize() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.finalize", false]], "finalize_default() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.finalize_default", false]], "finalize_default() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.finalize_default", false]], "finalize_default() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.finalize_default", false]], "finalize_value() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.finalize_value", false]], "finalize_value() (cli_command_parser.parameters.actions.concatenate method)": [[35, "cli_command_parser.parameters.actions.Concatenate.finalize_value", false]], "finalize_value() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.finalize_value", false]], "fix_default() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.fix_default", false]], "fix_default() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.fix_default", false]], "fix_default() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.fix_default", false]], "fix_default() (cli_command_parser.inputs.time.dtinput method)": [[30, "cli_command_parser.inputs.time.DTInput.fix_default", false]], "fix_default() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.fix_default", false]], "fix_windows_path() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.fix_windows_path", false]], "fixedflag (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.FixedFlag", false]], "fixedflagmeta (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.FixedFlagMeta", false]], "flag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Flag", false]], "flagargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs", false]], "for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.for_ast_callable", false]], "for_command() (cli_command_parser.metadata.programmetadata class method)": [[32, "cli_command_parser.metadata.ProgramMetadata.for_command", false]], "for_param_cls() (cli_command_parser.formatting.params.paramhelpformatter class method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.for_param_cls", false]], "for_prog() (cli_command_parser.context.context class method)": [[6, "cli_command_parser.context.Context.for_prog", false]], "format() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format", false]], "format() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.format", false]], "format_all() (cli_command_parser.conversion.command_builder.convertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.format_all", false]], "format_all() (cli_command_parser.conversion.command_builder.paramconvertergroup method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup.format_all", false]], "format_basic_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_basic_usage", false]], "format_description() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_description", false]], "format_description() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.format_description", false]], "format_description() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_description", false]], "format_description() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_description", false]], "format_dict_diff() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.format_dict_diff", false]], "format_diff() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.format_diff", false]], "format_epilog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.format_epilog", false]], "format_help() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_help", false]], "format_help() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_help", false]], "format_help() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_help", false]], "format_help() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_help", false]], "format_help() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_help", false]], "format_help() (cli_command_parser.parameters.base.parambase method)": [[36, "cli_command_parser.parameters.base.ParamBase.format_help", false]], "format_help() (cli_command_parser.parameters.choice_map.choice method)": [[37, "cli_command_parser.parameters.choice_map.Choice.format_help", false]], "format_help_entry() (cli_command_parser.formatting.utils.partwrapper method)": [[22, "cli_command_parser.formatting.utils.PartWrapper.format_help_entry", false]], "format_help_entry() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.format_help_entry", false]], "format_lines() (cli_command_parser.conversion.command_builder.converter method)": [[11, "cli_command_parser.conversion.command_builder.Converter.format_lines", false]], "format_lines() (cli_command_parser.conversion.command_builder.groupconverter method)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.format_lines", false]], "format_lines() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.format_lines", false]], "format_lines() (cli_command_parser.conversion.command_builder.parserconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.format_lines", false]], "format_lines() (cli_command_parser.conversion.command_builder.scriptconverter method)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter.format_lines", false]], "format_members() (cli_command_parser.conversion.command_builder.collectionconverter method)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.format_members", false]], "format_metavar() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.format_metavar", false]], "format_metavar() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.patterns.patterninput method)": [[29, "cli_command_parser.inputs.patterns.PatternInput.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.format_metavar", false]], "format_metavar() (cli_command_parser.inputs.time.timedelta method)": [[30, "cli_command_parser.inputs.time.TimeDelta.format_metavar", false]], "format_rst() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_rst", false]], "format_usage() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.formatting.params.positionalhelpformatter method)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.format_usage", false]], "format_usage() (cli_command_parser.parameters.base.parambase method)": [[36, "cli_command_parser.parameters.base.ParamBase.format_usage", false]], "format_usage() (cli_command_parser.parameters.choice_map.choice method)": [[37, "cli_command_parser.parameters.choice_map.Choice.format_usage", false]], "formats (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.formats", false]], "formatter (cli_command_parser.command_parameters.commandparameters property)": [[3, "cli_command_parser.command_parameters.CommandParameters.formatter", false]], "formatter (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.formatter", false]], "from_dict() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dict", false]], "from_dicts() (cli_command_parser.formatting.restructured_text.rsttable class method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.from_dicts", false]], "from_kwargs() (cli_command_parser.conversion.command_builder.baseargs class method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.from_kwargs", false]], "full (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.full", false]], "full (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.FULL", false]], "func (cli_command_parser.conversion.argparse_ast.visit_func attribute)": [[8, "cli_command_parser.conversion.argparse_ast.visit_func.func", false]], "func (cli_command_parser.metadata.dynamicmetadata attribute)": [[32, "cli_command_parser.metadata.DynamicMetadata.func", false]], "func (cli_command_parser.parameters.base.defaultcallback attribute)": [[36, "cli_command_parser.parameters.base.DefaultCallback.func", false]], "func (cli_command_parser.parameters.options.actionflag property)": [[40, "cli_command_parser.parameters.options.ActionFlag.func", false]], "get_annotation_value_type() (in module cli_command_parser.annotations)": [[2, "cli_command_parser.annotations.get_annotation_value_type", false]], "get_args() (in module cli_command_parser.annotations)": [[2, "cli_command_parser.annotations.get_args", false]], "get_cls_and_kwargs() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_cls_and_kwargs", false]], "get_config() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_config", false]], "get_const() (cli_command_parser.parameters.base.baseoption method)": [[36, "cli_command_parser.parameters.base.BaseOption.get_const", false]], "get_const() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.get_const", false]], "get_const() (cli_command_parser.parameters.options.triflag method)": [[40, "cli_command_parser.parameters.options.TriFlag.get_const", false]], "get_context() (in module cli_command_parser.context)": [[6, "cli_command_parser.context.get_context", false]], "get_current_context() (in module cli_command_parser.context)": [[6, "cli_command_parser.context.get_current_context", false]], "get_default (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.get_default", false]], "get_default (cli_command_parser.parameters.actions.valuemixin attribute)": [[35, "cli_command_parser.parameters.actions.ValueMixin.get_default", false]], "get_default() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.get_default", false]], "get_default() (cli_command_parser.parameters.actions.appendconst method)": [[35, "cli_command_parser.parameters.actions.AppendConst.get_default", false]], "get_default() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.get_default", false]], "get_description() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_description", false]], "get_descriptor_value_type() (in module cli_command_parser.annotations)": [[2, "cli_command_parser.annotations.get_descriptor_value_type", false]], "get_doc_str() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_doc_str", false]], "get_env_const() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.get_env_const", false]], "get_env_const() (cli_command_parser.parameters.options.flag method)": [[40, "cli_command_parser.parameters.options.Flag.get_env_const", false]], "get_env_const() (cli_command_parser.parameters.options.triflag method)": [[40, "cli_command_parser.parameters.options.TriFlag.get_env_const", false]], "get_error_handler() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.get_error_handler", false]], "get_formatter() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_formatter", false]], "get_help_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_help_text", false]], "get_maybe_poppable_counts() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.get_maybe_poppable_counts", false]], "get_maybe_poppable_counts() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.get_maybe_poppable_counts", false]], "get_metadata() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_metadata", false]], "get_missing() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.get_missing", false]], "get_name_repr() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.get_name_repr", false]], "get_next_cmd() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.get_next_cmd", false]], "get_opt_prefix() (in module cli_command_parser.parser)": [[44, "cli_command_parser.parser.get_opt_prefix", false]], "get_or_create_context() (in module cli_command_parser.context)": [[6, "cli_command_parser.context.get_or_create_context", false]], "get_params() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_params", false]], "get_parent() (cli_command_parser.metadata.metadatabase method)": [[32, "cli_command_parser.metadata.MetadataBase.get_parent", false]], "get_parent() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_parent", false]], "get_parsed() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.get_parsed", false]], "get_parsed() (in module cli_command_parser.context)": [[6, "cli_command_parser.context.get_parsed", false]], "get_parsed_value() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.get_parsed_value", false]], "get_parsed_value() (cli_command_parser.context.contextproxy method)": [[6, "cli_command_parser.context.ContextProxy.get_parsed_value", false]], "get_pos_args() (cli_command_parser.conversion.command_builder.paramconverter method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.get_pos_args", false]], "get_positionals_to_parse() (cli_command_parser.command_parameters.commandparameters method)": [[3, "cli_command_parser.command_parameters.CommandParameters.get_positionals_to_parse", false]], "get_prog() (cli_command_parser.metadata.programmetadata method)": [[32, "cli_command_parser.metadata.ProgramMetadata.get_prog", false]], "get_raw_arg() (in module cli_command_parser.context)": [[6, "cli_command_parser.context.get_raw_arg", false]], "get_rst_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_rst_text", false]], "get_sets() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.get_sets", false]], "get_top_level_commands() (in module cli_command_parser.core)": [[14, "cli_command_parser.core.get_top_level_commands", false]], "get_tracked_refs() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.get_tracked_refs", false]], "get_tracked_refs() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.get_tracked_refs", false]], "get_urls() (cli_command_parser.metadata.distributionfinder method)": [[32, "cli_command_parser.metadata.DistributionFinder.get_urls", false]], "get_usage_opt() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.get_usage_opt", false]], "get_usage_opt() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.get_usage_opt", false]], "get_usage_sub_cmds() (in module cli_command_parser.formatting.commands)": [[19, "cli_command_parser.formatting.commands.get_usage_sub_cmds", false]], "get_usage_text() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.get_usage_text", false]], "get_value() (cli_command_parser.metadata.dynamicmetadata method)": [[32, "cli_command_parser.metadata.DynamicMetadata.get_value", false]], "get_value() (cli_command_parser.metadata.metadata method)": [[32, "cli_command_parser.metadata.Metadata.get_value", false]], "get_value() (cli_command_parser.metadata.metadatabase method)": [[32, "cli_command_parser.metadata.MetadataBase.get_value", false]], "glob (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Glob", false]], "group (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.group", false]], "group (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUP", false]], "group (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.group", false]], "group_choices() (cli_command_parser.formatting.params.choicegroup class method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.group_choices", false]], "group_tree_spacers (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.group_tree_spacers", false]], "groupconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter", false]], "grouped_children (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.grouped_children", false]], "grouped_children() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.grouped_children", false]], "grouphelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter", false]], "groups (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.groups", false]], "groups (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.groups", false]], "groups (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.groups", false]], "groups (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.GROUPS", false]], "handle_invalid() (cli_command_parser.inputs.numeric.numrange method)": [[28, "cli_command_parser.inputs.numeric.NumRange.handle_invalid", false]], "handle_kb_interrupt() (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.handle_kb_interrupt", false]], "handle_long() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_long", false]], "handle_pass_thru() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_pass_thru", false]], "handle_positional() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_positional", false]], "handle_remainder() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_remainder", false]], "handle_short() (cli_command_parser.parser.commandparser method)": [[44, "cli_command_parser.parser.CommandParser.handle_short", false]], "handler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.Handler", false]], "handler (cli_command_parser.error_handling.handler attribute)": [[16, "cli_command_parser.error_handling.Handler.handler", false]], "has_any() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.has_any", false]], "has_choices (cli_command_parser.parameters.base.parameter property)": [[36, "cli_command_parser.parameters.base.Parameter.has_choices", false]], "has_choices (cli_command_parser.parameters.choice_map.choicemap property)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.has_choices", false]], "has_local_choices (cli_command_parser.parameters.choice_map.subcommand property)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.has_local_choices", false]], "has_long() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.has_long", false]], "has_long() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_long", false]], "has_min_opts() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.has_min_opts", false]], "has_min_opts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.has_min_opts", false]], "has_nested_pass_thru (cli_command_parser.command_parameters.commandparameters property)": [[3, "cli_command_parser.command_parameters.CommandParameters.has_nested_pass_thru", false]], "has_parsed_value() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.has_parsed_value", false]], "has_parsed_value() (cli_command_parser.context.contextproxy method)": [[6, "cli_command_parser.context.ContextProxy.has_parsed_value", false]], "has_upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.has_upper_bound", false]], "help (cli_command_parser.conversion.command_builder.baseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.help", false]], "help (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.help", false]], "help (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.help", false]], "help_action() (in module cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.help_action", false]], "hide (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.hide", false]], "hide (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.hide", false]], "ignore (cli_command_parser.config.ambiguouscombomode attribute)": [[5, "cli_command_parser.config.AmbiguousComboMode.IGNORE", false]], "ignore_unknown (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.ignore_unknown", false]], "imp_names() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.imp_names", false]], "import_module() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.import_module", false]], "in_mutually_exclusive_group (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.in_mutually_exclusive_group", false]], "include_max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_max", false]], "include_max (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.include_max", false]], "include_max (cli_command_parser.inputs.utils.rangemixin attribute)": [[31, "cli_command_parser.inputs.utils.RangeMixin.include_max", false]], "include_min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.include_min", false]], "include_min (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.include_min", false]], "include_min (cli_command_parser.inputs.utils.rangemixin attribute)": [[31, "cli_command_parser.inputs.utils.RangeMixin.include_min", false]], "inheritable (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.inheritable", false]], "init (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.init", false]], "init_call_repr() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.init_call_repr", false]], "init_counter() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_counter", false]], "init_flag() (cli_command_parser.conversion.command_builder.flagargs class method)": [[11, "cli_command_parser.conversion.command_builder.FlagArgs.init_flag", false]], "init_for_ast_callable() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_for_ast_callable", false]], "init_func_args (cli_command_parser.conversion.argparse_ast.astcallable property)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_args", false]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_kwargs", false]], "init_func_kwargs (cli_command_parser.conversion.argparse_ast.subparser property)": [[8, "cli_command_parser.conversion.argparse_ast.SubParser.init_func_kwargs", false]], "init_func_name (cli_command_parser.conversion.argparse_ast.astcallable property)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_name", false]], "init_func_raw_kwargs (cli_command_parser.conversion.argparse_ast.astcallable property)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.init_func_raw_kwargs", false]], "init_group() (cli_command_parser.conversion.command_builder.converter class method)": [[11, "cli_command_parser.conversion.command_builder.Converter.init_group", false]], "init_group() (cli_command_parser.conversion.command_builder.paramconverter class method)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.init_group", false]], "init_option() (cli_command_parser.conversion.command_builder.optionargs class method)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.init_option", false]], "init_positional() (cli_command_parser.conversion.command_builder.paramargs class method)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.init_positional", false]], "input (cli_command_parser.conversion.cli.convert attribute)": [[10, "cli_command_parser.conversion.cli.Convert.input", false]], "input (cli_command_parser.conversion.cli.parserconverter attribute)": [[10, "cli_command_parser.conversion.cli.ParserConverter.input", false]], "input (cli_command_parser.conversion.cli.pprint attribute)": [[10, "cli_command_parser.conversion.cli.Pprint.input", false]], "inputparam (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.InputParam", false]], "inputtype (class in cli_command_parser.inputs.base)": [[24, "cli_command_parser.inputs.base.InputType", false]], "inputvalidationerror": [[26, "cli_command_parser.inputs.exceptions.InputValidationError", false]], "int_only (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.int_only", false]], "invalidchoice": [[17, "cli_command_parser.exceptions.InvalidChoice", false]], "invalidchoiceerror": [[26, "cli_command_parser.inputs.exceptions.InvalidChoiceError", false]], "is_option (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_option", false]], "is_pass_thru (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_pass_thru", false]], "is_positional (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.is_positional", false]], "is_sub_parser (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.is_sub_parser", false]], "is_valid_arg() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.is_valid_arg", false]], "is_valid_type() (cli_command_parser.inputs.base.inputtype method)": [[24, "cli_command_parser.inputs.base.InputType.is_valid_type", false]], "is_valid_type() (cli_command_parser.inputs.numeric.numericinput method)": [[28, "cli_command_parser.inputs.numeric.NumericInput.is_valid_type", false]], "iso (cli_command_parser.inputs.time.day attribute)": [[30, "cli_command_parser.inputs.time.Day.iso", false]], "iter_action_flags() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.iter_action_flags", false]], "iter_build() (cli_command_parser.formatting.restructured_text.rsttable method)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.iter_build", false]], "iter_handlers() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.iter_handlers", false]], "iter_module_parents() (in module cli_command_parser.conversion.utils)": [[12, "cli_command_parser.conversion.utils.iter_module_parents", false]], "iter_params() (cli_command_parser.command_parameters.commandparameters method)": [[3, "cli_command_parser.command_parameters.CommandParameters.iter_params", false]], "iter_usage_parts() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.iter_usage_parts", false]], "iter_usage_parts() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.iter_usage_parts", false]], "join() (cli_command_parser.formatting.utils.partwrapper method)": [[22, "cli_command_parser.formatting.utils.PartWrapper.join", false]], "json (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Json", false]], "latest (cli_command_parser.inputs.time.datetimeinput property)": [[30, "cli_command_parser.inputs.time.DateTimeInput.latest", false]], "lazy (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.lazy", false]], "line_iter() (in module cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.line_iter", false]], "link (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.LINK", false]], "link_params() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.link_params", false]], "links (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.links", false]], "list_attr (cli_command_parser.conversion.argparse_ast.addvisitedchild attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AddVisitedChild.list_attr", false]], "literal_eval_or_none() (in module cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.literal_eval_or_none", false]], "load_command() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.load_command", false]], "load_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.load_commands", false]], "local (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.local", false]], "locale (cli_command_parser.inputs.time.date attribute)": [[30, "cli_command_parser.inputs.time.Date.locale", false]], "locale (cli_command_parser.inputs.time.datetime attribute)": [[30, "cli_command_parser.inputs.time.DateTime.locale", false]], "locale (cli_command_parser.inputs.time.datetimeinput attribute)": [[30, "cli_command_parser.inputs.time.DateTimeInput.locale", false]], "locale (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.locale", false]], "locale (cli_command_parser.inputs.time.dtinput attribute)": [[30, "cli_command_parser.inputs.time.DTInput.locale", false]], "locale (cli_command_parser.inputs.time.time attribute)": [[30, "cli_command_parser.inputs.time.Time.locale", false]], "long (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.long", false]], "main() (cli_command_parser.commands.asynccommand method)": [[4, "cli_command_parser.commands.AsyncCommand.main", false]], "main() (cli_command_parser.commands.command method)": [[4, "cli_command_parser.commands.Command.main", false]], "main() (cli_command_parser.conversion.cli.convert method)": [[10, "cli_command_parser.conversion.cli.Convert.main", false]], "main() (cli_command_parser.conversion.cli.pprint method)": [[10, "cli_command_parser.conversion.cli.Pprint.main", false]], "main() (in module cli_command_parser.commands)": [[4, "cli_command_parser.commands.main", false]], "match (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.MATCH", false]], "matches() (cli_command_parser.inputs.utils.statmode method)": [[31, "cli_command_parser.inputs.utils.StatMode.matches", false]], "max (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.max", false]], "max (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.max", false]], "max (cli_command_parser.inputs.utils.rangemixin attribute)": [[31, "cli_command_parser.inputs.utils.RangeMixin.max", false]], "max (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.max", false]], "max_reached() (cli_command_parser.nargs.nargs method)": [[33, "cli_command_parser.nargs.Nargs.max_reached", false]], "max_width (cli_command_parser.formatting.utils.partwrapper attribute)": [[22, "cli_command_parser.formatting.utils.PartWrapper.max_width", false]], "maybe_add_groups() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_groups", false]], "maybe_add_option() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_option", false]], "maybe_add_options() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_options", false]], "maybe_add_positionals() (cli_command_parser.formatting.commands.commandhelpformatter method)": [[19, "cli_command_parser.formatting.commands.CommandHelpFormatter.maybe_add_positionals", false]], "maybe_await() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.maybe_await", false]], "maybe_wrap_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.maybe_wrap_usage", false]], "member_type (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.member_type", false]], "members (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.members", false]], "members (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.members", false]], "message (cli_command_parser.exceptions.missingargument attribute)": [[17, "cli_command_parser.exceptions.MissingArgument.message", false]], "message (cli_command_parser.exceptions.usageerror attribute)": [[17, "cli_command_parser.exceptions.UsageError.message", false]], "meta() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.meta", false]], "metadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.Metadata", false]], "metadatabase (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.MetadataBase", false]], "metavar (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.metavar", false]], "metavar (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.metavar", false]], "min (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.min", false]], "min (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.min", false]], "min (cli_command_parser.inputs.utils.rangemixin attribute)": [[31, "cli_command_parser.inputs.utils.RangeMixin.min", false]], "min (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.min", false]], "missing (cli_command_parser.config.showdefaults attribute)": [[5, "cli_command_parser.config.ShowDefaults.MISSING", false]], "missing_hint (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.missing_hint", false]], "missing_hint (cli_command_parser.parameters.pass_thru.passthru attribute)": [[41, "cli_command_parser.parameters.pass_thru.PassThru.missing_hint", false]], "missing_options_with_env_var() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.missing_options_with_env_var", false]], "missingargument": [[17, "cli_command_parser.exceptions.MissingArgument", false]], "missingmixin (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.MissingMixin", false]], "mod_cls_to_ast_cls_map (cli_command_parser.conversion.argparse_ast.script property)": [[8, "cli_command_parser.conversion.argparse_ast.Script.mod_cls_to_ast_cls_map", false]], "mod_obj_prog_map (cli_command_parser.metadata.progfinder property)": [[32, "cli_command_parser.metadata.ProgFinder.mod_obj_prog_map", false]], "mode (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.mode", false]], "mode (cli_command_parser.inputs.patterns.regex attribute)": [[29, "cli_command_parser.inputs.patterns.Regex.mode", false]], "module": [[2, "module-cli_command_parser.annotations", false], [3, "module-cli_command_parser.command_parameters", false], [4, "module-cli_command_parser.commands", false], [5, "module-cli_command_parser.config", false], [6, "module-cli_command_parser.context", false], [8, "module-cli_command_parser.conversion.argparse_ast", false], [9, "module-cli_command_parser.conversion.argparse_utils", false], [10, "module-cli_command_parser.conversion.cli", false], [11, "module-cli_command_parser.conversion.command_builder", false], [12, "module-cli_command_parser.conversion.utils", false], [13, "module-cli_command_parser.conversion.visitor", false], [14, "module-cli_command_parser.core", false], [15, "module-cli_command_parser.documentation", false], [16, "module-cli_command_parser.error_handling", false], [17, "module-cli_command_parser.exceptions", false], [19, "module-cli_command_parser.formatting.commands", false], [20, "module-cli_command_parser.formatting.params", false], [21, "module-cli_command_parser.formatting.restructured_text", false], [22, "module-cli_command_parser.formatting.utils", false], [24, "module-cli_command_parser.inputs.base", false], [25, "module-cli_command_parser.inputs.choices", false], [26, "module-cli_command_parser.inputs.exceptions", false], [27, "module-cli_command_parser.inputs.files", false], [28, "module-cli_command_parser.inputs.numeric", false], [29, "module-cli_command_parser.inputs.patterns", false], [30, "module-cli_command_parser.inputs.time", false], [31, "module-cli_command_parser.inputs.utils", false], [32, "module-cli_command_parser.metadata", false], [33, "module-cli_command_parser.nargs", false], [35, "module-cli_command_parser.parameters.actions", false], [36, "module-cli_command_parser.parameters.base", false], [37, "module-cli_command_parser.parameters.choice_map", false], [38, "module-cli_command_parser.parameters.groups", false], [39, "module-cli_command_parser.parameters.option_strings", false], [40, "module-cli_command_parser.parameters.options", false], [41, "module-cli_command_parser.parameters.pass_thru", false], [42, "module-cli_command_parser.parameters.positionals", false], [43, "module-cli_command_parser.parse_tree", false], [44, "module-cli_command_parser.parser", false], [45, "module-cli_command_parser.testing", false], [46, "module-cli_command_parser.typing", false], [47, "module-cli_command_parser.utils", false]], "module (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.module", false]], "module (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.module", false]], "month (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Month", false]], "msg (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.msg", false]], "multiparamusageerror": [[17, "cli_command_parser.exceptions.MultiParamUsageError", false]], "multiple_action_flags (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.multiple_action_flags", false]], "mutually_dependent (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.mutually_dependent", false]], "mutually_exclusive (cli_command_parser.parameters.groups.paramgroup attribute)": [[38, "cli_command_parser.parameters.groups.ParamGroup.mutually_exclusive", false]], "mutuallyexclusivegroup (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup", false]], "n (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.n", false]], "name (cli_command_parser.config.configitem attribute)": [[5, "cli_command_parser.config.ConfigItem.name", false]], "name (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.name", false]], "name (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name", false]], "name (cli_command_parser.conversion.visitor.trackedref attribute)": [[13, "cli_command_parser.conversion.visitor.TrackedRef.name", false]], "name (cli_command_parser.inputs.utils.inputparam attribute)": [[31, "cli_command_parser.inputs.utils.InputParam.name", false]], "name (cli_command_parser.metadata.metadatabase attribute)": [[32, "cli_command_parser.metadata.MetadataBase.name", false]], "name (cli_command_parser.parameters.actions.append attribute)": [[35, "cli_command_parser.parameters.actions.Append.name", false]], "name (cli_command_parser.parameters.actions.appendconst attribute)": [[35, "cli_command_parser.parameters.actions.AppendConst.name", false]], "name (cli_command_parser.parameters.actions.basicconstaction attribute)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.name", false]], "name (cli_command_parser.parameters.actions.concatenate attribute)": [[35, "cli_command_parser.parameters.actions.Concatenate.name", false]], "name (cli_command_parser.parameters.actions.count attribute)": [[35, "cli_command_parser.parameters.actions.Count.name", false]], "name (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.name", false]], "name (cli_command_parser.parameters.actions.store attribute)": [[35, "cli_command_parser.parameters.actions.Store.name", false]], "name (cli_command_parser.parameters.actions.storeall attribute)": [[35, "cli_command_parser.parameters.actions.StoreAll.name", false]], "name (cli_command_parser.parameters.actions.storeconst attribute)": [[35, "cli_command_parser.parameters.actions.StoreConst.name", false]], "name (cli_command_parser.parameters.base.allowleadingdashproperty attribute)": [[36, "cli_command_parser.parameters.base.AllowLeadingDashProperty.name", false]], "name (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.name", false]], "name_mode (cli_command_parser.conversion.command_builder.collectionconverter property)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.name_mode", false]], "name_mode (cli_command_parser.conversion.command_builder.optionargs attribute)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs.name_mode", false]], "name_mode (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.name_mode", false]], "name_mode (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.name_mode", false]], "name_mode (cli_command_parser.parameters.option_strings.optionstrings attribute)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.name_mode", false]], "nargs (class in cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.Nargs", false]], "nargs (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.nargs", false]], "nargs (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.nargs", false]], "nargs (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.nargs", false]], "nargs (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.nargs", false]], "nargs (cli_command_parser.parameters.options.flag attribute)": [[40, "cli_command_parser.parameters.options.Flag.nargs", false]], "nargs (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.nargs", false]], "nargs (cli_command_parser.parameters.pass_thru.passthru attribute)": [[41, "cli_command_parser.parameters.pass_thru.PassThru.nargs", false]], "nargs (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.nargs", false]], "nargs_min_and_max() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.nargs_min_and_max", false]], "nargs_min_and_max_sums() (in module cli_command_parser.nargs)": [[33, "cli_command_parser.nargs.nargs_min_and_max_sums", false]], "never (cli_command_parser.config.allowleadingdash attribute)": [[5, "cli_command_parser.config.AllowLeadingDash.NEVER", false]], "never (cli_command_parser.config.showdefaults attribute)": [[5, "cli_command_parser.config.ShowDefaults.NEVER", false]], "newline_between_members (cli_command_parser.conversion.command_builder.converter attribute)": [[11, "cli_command_parser.conversion.command_builder.Converter.newline_between_members", false]], "newline_between_members (cli_command_parser.conversion.command_builder.groupconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.GroupConverter.newline_between_members", false]], "nextcommand": [[17, "cli_command_parser.exceptions.NextCommand", false]], "no_exit_handler (in module cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.no_exit_handler", false]], "no_smart_for (cli_command_parser.conversion.cli.parserconverter attribute)": [[10, "cli_command_parser.conversion.cli.ParserConverter.no_smart_for", false]], "noactivecontext": [[17, "cli_command_parser.exceptions.NoActiveContext", false]], "non_empty (cli_command_parser.config.showdefaults attribute)": [[5, "cli_command_parser.config.ShowDefaults.NON_EMPTY", false]], "none (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.NONE", false]], "normalize() (cli_command_parser.inputs.patterns.regexmode class method)": [[29, "cli_command_parser.inputs.patterns.RegexMode.normalize", false]], "normalize() (cli_command_parser.metadata.progfinder method)": [[32, "cli_command_parser.metadata.ProgFinder.normalize", false]], "normalize_dt() (in module cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.normalize_dt", false]], "normcase (cli_command_parser.inputs.patterns.glob attribute)": [[29, "cli_command_parser.inputs.patterns.Glob.normcase", false]], "nosuchoption": [[17, "cli_command_parser.exceptions.NoSuchOption", false]], "nullerrorhandler (class in cli_command_parser.error_handling)": [[16, "cli_command_parser.error_handling.NullErrorHandler", false]], "num_provided() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.num_provided", false]], "num_provided() (cli_command_parser.context.contextproxy method)": [[6, "cli_command_parser.context.ContextProxy.num_provided", false]], "numeric (cli_command_parser.config.allowleadingdash attribute)": [[5, "cli_command_parser.config.AllowLeadingDash.NUMERIC", false]], "numeric (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.numeric", false]], "numeric (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC", false]], "numeric_iso (cli_command_parser.inputs.time.dtformatmode attribute)": [[30, "cli_command_parser.inputs.time.DTFormatMode.NUMERIC_ISO", false]], "numericinput (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumericInput", false]], "numrange (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.NumRange", false]], "option (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.Option", false]], "option_map (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.option_map", false]], "option_name_mode (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.option_name_mode", false]], "option_name_mode (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.option_name_mode", false]], "option_strs (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.option_strs", false]], "option_strs (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.option_strs", false]], "option_strs() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.option_strs", false]], "option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.option_strs", false]], "optionargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.OptionArgs", false]], "optionhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter", false]], "optionnamemode (class in cli_command_parser.config)": [[5, "cli_command_parser.config.OptionNameMode", false]], "options (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.options", false]], "optionstrings (class in cli_command_parser.parameters.option_strings)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings", false]], "original (cli_command_parser.inputs.time.different_locale attribute)": [[30, "cli_command_parser.inputs.time.different_locale.original", false]], "out_format (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_format", false]], "out_locale (cli_command_parser.inputs.time.calendarunitinput attribute)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.out_locale", false]], "package (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.package", false]], "param (cli_command_parser.formatting.params.choicemaphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.optionhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.positionalhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter.param", false]], "param (cli_command_parser.formatting.params.triflaghelpformatter attribute)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.param", false]], "param (cli_command_parser.parameters.actions.constmixin attribute)": [[35, "cli_command_parser.parameters.actions.ConstMixin.param", false]], "param (cli_command_parser.parameters.actions.paramaction attribute)": [[35, "cli_command_parser.parameters.actions.ParamAction.param", false]], "param (cli_command_parser.parameters.actions.valuemixin attribute)": [[35, "cli_command_parser.parameters.actions.ValueMixin.param", false]], "param (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.param", false]], "param_formatter (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.param_formatter", false]], "paramaction (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ParamAction", false]], "paramargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs", false]], "parambase (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.ParamBase", false]], "parambaseargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs", false]], "paramconflict": [[17, "cli_command_parser.exceptions.ParamConflict", false]], "paramconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter", false]], "paramconvertergroup (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParamConverterGroup", false]], "parameter (class in cli_command_parser.parameters.base)": [[36, "cli_command_parser.parameters.base.Parameter", false]], "parameterdefinitionerror": [[17, "cli_command_parser.exceptions.ParameterDefinitionError", false]], "paramgroup (class in cli_command_parser.parameters.groups)": [[38, "cli_command_parser.parameters.groups.ParamGroup", false]], "paramhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter", false]], "params (cli_command_parser.context.context property)": [[6, "cli_command_parser.context.Context.params", false]], "params (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.params", false]], "params() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.params", false]], "paramsmissing": [[17, "cli_command_parser.exceptions.ParamsMissing", false]], "paramusageerror": [[17, "cli_command_parser.exceptions.ParamUsageError", false]], "parent (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.parent", false]], "parent (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.parent", false]], "parent (cli_command_parser.conversion.argparse_ast.parserarg attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ParserArg.parent", false]], "parent (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[8, "cli_command_parser.conversion.argparse_ast.SubparsersAction.parent", false]], "parent (cli_command_parser.conversion.command_builder.collectionconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.CollectionConverter.parent", false]], "parent (cli_command_parser.conversion.command_builder.convertergroup attribute)": [[11, "cli_command_parser.conversion.command_builder.ConverterGroup.parent", false]], "parent (cli_command_parser.conversion.command_builder.paramconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.parent", false]], "parent (cli_command_parser.conversion.command_builder.parserconverter attribute)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.parent", false]], "parent (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.parent", false]], "parent (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.parent", false]], "parent() (cli_command_parser.core.commandmeta class method)": [[14, "cli_command_parser.core.CommandMeta.parent", false]], "parents (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.parents", false]], "parse() (cli_command_parser.commands.command class method)": [[4, "cli_command_parser.commands.Command.parse", false]], "parse() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse", false]], "parse() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse", false]], "parse_and_await() (cli_command_parser.commands.asynccommand class method)": [[4, "cli_command_parser.commands.AsyncCommand.parse_and_await", false]], "parse_and_run() (cli_command_parser.commands.asynccommand class method)": [[4, "cli_command_parser.commands.AsyncCommand.parse_and_run", false]], "parse_and_run() (cli_command_parser.commands.command class method)": [[4, "cli_command_parser.commands.Command.parse_and_run", false]], "parse_args_and_get_next_cmd() (cli_command_parser.parser.commandparser class method)": [[44, "cli_command_parser.parser.CommandParser.parse_args_and_get_next_cmd", false]], "parse_args_and_get_next_cmd() (in module cli_command_parser.parser)": [[44, "cli_command_parser.parser.parse_args_and_get_next_cmd", false]], "parse_dt() (cli_command_parser.inputs.time.datetimeinput method)": [[30, "cli_command_parser.inputs.time.DateTimeInput.parse_dt", false]], "parse_numeric() (cli_command_parser.inputs.time.calendarunitinput method)": [[30, "cli_command_parser.inputs.time.CalendarUnitInput.parse_numeric", false]], "parse_numeric() (cli_command_parser.inputs.time.day method)": [[30, "cli_command_parser.inputs.time.Day.parse_numeric", false]], "parse_numeric() (cli_command_parser.inputs.time.month method)": [[30, "cli_command_parser.inputs.time.Month.parse_numeric", false]], "parserarg (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.ParserArg", false]], "parserconverter (class in cli_command_parser.conversion.cli)": [[10, "cli_command_parser.conversion.cli.ParserConverter", false]], "parserconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter", false]], "parserexit": [[17, "cli_command_parser.exceptions.ParserExit", false]], "parsers (cli_command_parser.conversion.argparse_ast.script property)": [[8, "cli_command_parser.conversion.argparse_ast.Script.parsers", false]], "parsertest (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.ParserTest", false]], "partwrapper (class in cli_command_parser.formatting.utils)": [[22, "cli_command_parser.formatting.utils.PartWrapper", false]], "pass_file (cli_command_parser.inputs.files.serialized attribute)": [[27, "cli_command_parser.inputs.files.Serialized.pass_file", false]], "pass_thru (cli_command_parser.command_parameters.commandparameters property)": [[3, "cli_command_parser.command_parameters.CommandParameters.pass_thru", false]], "passthru (class in cli_command_parser.parameters.pass_thru)": [[41, "cli_command_parser.parameters.pass_thru.PassThru", false]], "passthruargs (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.PassThruArgs", false]], "passthruhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter", false]], "path (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Path", false]], "path (cli_command_parser.conversion.argparse_ast.script attribute)": [[8, "cli_command_parser.conversion.argparse_ast.Script.path", false]], "path (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.path", false]], "path_repr() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.path_repr", false]], "patterninput (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.PatternInput", false]], "patterns (cli_command_parser.inputs.patterns.patterninput attribute)": [[29, "cli_command_parser.inputs.patterns.PatternInput.patterns", false]], "pep 484": [[69, "index-0", false]], "permissive (cli_command_parser.config.ambiguouscombomode attribute)": [[5, "cli_command_parser.config.AmbiguousComboMode.PERMISSIVE", false]], "pickle (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Pickle", false]], "pkg_doc_str (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.pkg_doc_str", false]], "pop_parsed_value() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.pop_parsed_value", false]], "positional (class in cli_command_parser.parameters.positionals)": [[42, "cli_command_parser.parameters.positionals.Positional", false]], "positionalhelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.PositionalHelpFormatter", false]], "positionals (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.positionals", false]], "positionals (cli_command_parser.parser.commandparser attribute)": [[44, "cli_command_parser.parser.CommandParser.positionals", false]], "positive_int() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.positive_int", false]], "posnode (class in cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.PosNode", false]], "pprint (class in cli_command_parser.conversion.cli)": [[10, "cli_command_parser.conversion.cli.Pprint", false]], "pprint() (cli_command_parser.conversion.argparse_ast.argcollection method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.pprint", false]], "pprint() (cli_command_parser.conversion.argparse_ast.astcallable method)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.pprint", false]], "pre_init (cli_command_parser.context.actionphase attribute)": [[6, "cli_command_parser.context.ActionPhase.PRE_INIT", false]], "prepare() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare", false]], "prepare_aliases() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases", false]], "prepare_combined() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_combined", false]], "prepare_repeated() (cli_command_parser.formatting.params.choicegroup method)": [[20, "cli_command_parser.formatting.params.ChoiceGroup.prepare_repeated", false]], "prepare_value() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.prepare_value", false]], "prepare_value() (cli_command_parser.parameters.options.counter method)": [[40, "cli_command_parser.parameters.options.Counter.prepare_value", false]], "primary_option_strs() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.primary_option_strs", false]], "print_tree() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.print_tree", false]], "process_param() (in module cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.process_param", false]], "process_params() (in module cli_command_parser.parse_tree)": [[43, "cli_command_parser.parse_tree.process_params", false]], "prog (cli_command_parser.context.context attribute)": [[6, "cli_command_parser.context.Context.prog", false]], "prog (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.prog", false]], "prog (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.prog", false]], "progfinder (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgFinder", false]], "programmetadata (class in cli_command_parser.metadata)": [[32, "cli_command_parser.metadata.ProgramMetadata", false]], "python enhancement proposals": [[69, "index-0", false]], "range (class in cli_command_parser.inputs.numeric)": [[28, "cli_command_parser.inputs.numeric.Range", false]], "range (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.range", false]], "range (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.range", false]], "range_str() (in module cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.range_str", false]], "rangemixin (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.RangeMixin", false]], "raw_path (cli_command_parser.parse_tree.posnode property)": [[43, "cli_command_parser.parse_tree.PosNode.raw_path", false]], "read() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.read", false]], "readable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.readable", false]], "record_action() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.record_action", false]], "record_action() (cli_command_parser.context.contextproxy method)": [[6, "cli_command_parser.context.ContextProxy.record_action", false]], "redirectstreams (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.RedirectStreams", false]], "regex (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.Regex", false]], "regexmode (class in cli_command_parser.inputs.patterns)": [[29, "cli_command_parser.inputs.patterns.RegexMode", false]], "register() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.register", false]], "register() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.register", false]], "register() (cli_command_parser.parameters.choice_map.subcommand method)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.register", false]], "register() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.register", false]], "register_action() (cli_command_parser.parameters.choice_map.action method)": [[37, "cli_command_parser.parameters.choice_map.Action.register_action", false]], "register_all() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.register_all", false]], "register_choice() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.register_choice", false]], "register_command() (cli_command_parser.parameters.choice_map.subcommand method)": [[37, "cli_command_parser.parameters.choice_map.SubCommand.register_command", false]], "register_default_cb() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.register_default_cb", false]], "register_default_cb() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.register_default_cb", false]], "register_default_cb() (cli_command_parser.parameters.options.counter method)": [[40, "cli_command_parser.parameters.options.Counter.register_default_cb", false]], "register_default_cb() (cli_command_parser.parameters.options.flag method)": [[40, "cli_command_parser.parameters.options.Flag.register_default_cb", false]], "register_default_cb() (cli_command_parser.parameters.options.triflag method)": [[40, "cli_command_parser.parameters.options.TriFlag.register_default_cb", false]], "register_parser() (cli_command_parser.conversion.argparse_ast.script class method)": [[8, "cli_command_parser.conversion.argparse_ast.Script.register_parser", false]], "reject_ambiguous_pos_combos (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.reject_ambiguous_pos_combos", false]], "remaining (cli_command_parser.parse_tree.anyword attribute)": [[43, "cli_command_parser.parse_tree.AnyWord.remaining", false]], "render_command_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_command_rst", false]], "render_script_rst() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.render_script_rst", false]], "repeat (cli_command_parser.config.subcommandaliashelpmode attribute)": [[5, "cli_command_parser.config.SubcommandAliasHelpMode.REPEAT", false]], "represents (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.represents", false]], "represents (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.represents", false]], "represents() (cli_command_parser.conversion.argparse_ast.arggroup method)": [[8, "cli_command_parser.conversion.argparse_ast.ArgGroup.represents", false]], "represents() (cli_command_parser.conversion.argparse_ast.mutuallyexclusivegroup method)": [[8, "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup.represents", false]], "represents() (cli_command_parser.conversion.argparse_ast.parserarg method)": [[8, "cli_command_parser.conversion.argparse_ast.ParserArg.represents", false]], "represents() (cli_command_parser.conversion.argparse_ast.subparser method)": [[8, "cli_command_parser.conversion.argparse_ast.SubParser.represents", false]], "represents() (cli_command_parser.conversion.argparse_ast.subparsersaction method)": [[8, "cli_command_parser.conversion.argparse_ast.SubparsersAction.represents", false]], "required (cli_command_parser.conversion.command_builder.parambaseargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.required", false]], "required (cli_command_parser.parameters.base.parambase attribute)": [[36, "cli_command_parser.parameters.base.ParamBase.required", false]], "required_check_params() (cli_command_parser.command_parameters.commandparameters method)": [[3, "cli_command_parser.command_parameters.CommandParameters.required_check_params", false]], "required_formatter_map (cli_command_parser.formatting.params.grouphelpformatter attribute)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.required_formatter_map", false]], "required_formatter_map (cli_command_parser.formatting.params.paramhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.required_formatter_map", false]], "required_formatter_map (cli_command_parser.formatting.params.passthruhelpformatter attribute)": [[20, "cli_command_parser.formatting.params.PassThruHelpFormatter.required_formatter_map", false]], "resolve (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.resolve", false]], "resolve_ref() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.resolve_ref", false]], "result() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.result", false]], "result() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.result", false]], "roll_back_parsed_values() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.roll_back_parsed_values", false]], "rows (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.rows", false]], "rst_bar() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_bar", false]], "rst_directive() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_directive", false]], "rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_header", false]], "rst_list_table() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_list_table", false]], "rst_row() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_row", false]], "rst_rows() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_rows", false]], "rst_rows() (cli_command_parser.formatting.params.triflaghelpformatter method)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter.rst_rows", false]], "rst_table() (cli_command_parser.formatting.params.choicemaphelpformatter method)": [[20, "cli_command_parser.formatting.params.ChoiceMapHelpFormatter.rst_table", false]], "rst_table() (cli_command_parser.formatting.params.grouphelpformatter method)": [[20, "cli_command_parser.formatting.params.GroupHelpFormatter.rst_table", false]], "rst_toc_tree() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.rst_toc_tree", false]], "rst_usage() (cli_command_parser.formatting.params.optionhelpformatter method)": [[20, "cli_command_parser.formatting.params.OptionHelpFormatter.rst_usage", false]], "rst_usage() (cli_command_parser.formatting.params.paramhelpformatter method)": [[20, "cli_command_parser.formatting.params.ParamHelpFormatter.rst_usage", false]], "rsttable (class in cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.RstTable", false]], "rstwriter (class in cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.RstWriter", false]], "satisfied() (cli_command_parser.nargs.nargs method)": [[33, "cli_command_parser.nargs.Nargs.satisfied", false]], "scoped() (in module cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.scoped", false]], "scopedvisit (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScopedVisit", false]], "script (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.Script", false]], "script (cli_command_parser.conversion.cli.parserconverter property)": [[10, "cli_command_parser.conversion.cli.ParserConverter.script", false]], "scriptconverter (class in cli_command_parser.conversion.command_builder)": [[11, "cli_command_parser.conversion.command_builder.ScriptConverter", false]], "scriptvisitor (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor", false]], "sealed_mock() (in module cli_command_parser.testing)": [[45, "cli_command_parser.testing.sealed_mock", false]], "serialized (class in cli_command_parser.inputs.files)": [[27, "cli_command_parser.inputs.files.Serialized", false]], "set_const() (cli_command_parser.parameters.actions.constmixin method)": [[35, "cli_command_parser.parameters.actions.ConstMixin.set_const", false]], "set_parsed_value() (cli_command_parser.context.context method)": [[6, "cli_command_parser.context.Context.set_parsed_value", false]], "set_parsed_value() (cli_command_parser.context.contextproxy method)": [[6, "cli_command_parser.context.ContextProxy.set_parsed_value", false]], "set_value() (cli_command_parser.parameters.actions.valuemixin method)": [[35, "cli_command_parser.parameters.actions.ValueMixin.set_value", false]], "short (cli_command_parser.parameters.option_strings.optionstrings property)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.short", false]], "short_alt (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_alt", false]], "short_option_to_param_value_pairs() (cli_command_parser.command_parameters.commandparameters method)": [[3, "cli_command_parser.command_parameters.CommandParameters.short_option_to_param_value_pairs", false]], "short_primary (cli_command_parser.parameters.option_strings.triflagoptionstrings property)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.short_primary", false]], "short_repr() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.short_repr", false]], "show() (cli_command_parser.exceptions.commandparserexception method)": [[17, "cli_command_parser.exceptions.CommandParserException.show", false]], "show_default (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.show_default", false]], "show_defaults (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_defaults", false]], "show_docstring (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_docstring", false]], "show_env_var (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.show_env_var", false]], "show_env_vars (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_env_vars", false]], "show_group_tree (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_group_tree", false]], "show_group_type (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_group_type", false]], "show_in_help (cli_command_parser.parameters.base.parambase property)": [[36, "cli_command_parser.parameters.base.ParamBase.show_in_help", false]], "show_in_help (cli_command_parser.parameters.base.parameter property)": [[36, "cli_command_parser.parameters.base.Parameter.show_in_help", false]], "show_in_help (cli_command_parser.parameters.choice_map.choicemap property)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.show_in_help", false]], "show_in_help (cli_command_parser.parameters.groups.paramgroup property)": [[38, "cli_command_parser.parameters.groups.ParamGroup.show_in_help", false]], "show_inherited_descriptions (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.show_inherited_descriptions", false]], "show_title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.show_title", false]], "showdefaults (class in cli_command_parser.config)": [[5, "cli_command_parser.config.ShowDefaults", false]], "signature (cli_command_parser.conversion.argparse_ast.astcallable property)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.signature", false]], "snap (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.snap", false]], "snap (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.snap", false]], "socket (cli_command_parser.inputs.utils.statmode attribute)": [[31, "cli_command_parser.inputs.utils.StatMode.SOCKET", false]], "sort_choices (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.sort_choices", false]], "sp_parent (cli_command_parser.conversion.argparse_ast.subparser attribute)": [[8, "cli_command_parser.conversion.argparse_ast.SubParser.sp_parent", false]], "spaced_rst_header() (in module cli_command_parser.formatting.restructured_text)": [[21, "cli_command_parser.formatting.restructured_text.spaced_rst_header", false]], "split_action_flags (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.split_action_flags", false]], "statmode (class in cli_command_parser.inputs.utils)": [[31, "cli_command_parser.inputs.utils.StatMode", false]], "stderr (cli_command_parser.testing.redirectstreams property)": [[45, "cli_command_parser.testing.RedirectStreams.stderr", false]], "stdout (cli_command_parser.testing.redirectstreams property)": [[45, "cli_command_parser.testing.RedirectStreams.stdout", false]], "store (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.Store", false]], "storeall (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.StoreAll", false]], "storeconst (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.StoreConst", false]], "str_to_bool() (in module cli_command_parser.utils)": [[47, "cli_command_parser.utils.str_to_bool", false]], "strict (cli_command_parser.config.ambiguouscombomode attribute)": [[5, "cli_command_parser.config.AmbiguousComboMode.STRICT", false]], "strict_default (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.strict_default", false]], "strict_env (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.strict_env", false]], "strict_usage_column_width (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.strict_usage_column_width", false]], "string (cli_command_parser.inputs.patterns.regexmode attribute)": [[29, "cli_command_parser.inputs.patterns.RegexMode.STRING", false]], "sub_cmd_doc_depth (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.sub_cmd_doc_depth", false]], "sub_command (cli_command_parser.command_parameters.commandparameters attribute)": [[3, "cli_command_parser.command_parameters.CommandParameters.sub_command", false]], "sub_parser_converters (cli_command_parser.conversion.command_builder.parserconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParserConverter.sub_parser_converters", false]], "sub_parsers (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.sub_parsers", false]], "subcommand (class in cli_command_parser.parameters.choice_map)": [[37, "cli_command_parser.parameters.choice_map.SubCommand", false]], "subcommandaliashelpmode (class in cli_command_parser.config)": [[5, "cli_command_parser.config.SubcommandAliasHelpMode", false]], "subparser (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.SubParser", false]], "subparsersaction (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.SubparsersAction", false]], "subparsersaction (class in cli_command_parser.conversion.argparse_utils)": [[9, "cli_command_parser.conversion.argparse_utils.SubParsersAction", false]], "subtitle (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.subtitle", false]], "target (cli_command_parser.parameters.choice_map.choice attribute)": [[37, "cli_command_parser.parameters.choice_map.Choice.target", false]], "target (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.target", false]], "target() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.target", false]], "temporarydir (class in cli_command_parser.testing)": [[45, "cli_command_parser.testing.TemporaryDir", false]], "terminal (class in cli_command_parser.utils)": [[47, "cli_command_parser.utils.Terminal", false]], "terminal_width (cli_command_parser.context.context property)": [[6, "cli_command_parser.context.Context.terminal_width", false]], "terminal_width (cli_command_parser.context.contextproxy property)": [[6, "cli_command_parser.context.ContextProxy.terminal_width", false]], "test_case (cli_command_parser.testing.assertraiseswithstringcontext attribute)": [[45, "cli_command_parser.testing.AssertRaisesWithStringContext.test_case", false]], "time (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.Time", false]], "timedelta (class in cli_command_parser.inputs.time)": [[30, "cli_command_parser.inputs.time.TimeDelta", false]], "title (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.title", false]], "title (cli_command_parser.parameters.choice_map.choicemap attribute)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.title", false]], "to_str() (cli_command_parser.conversion.command_builder.baseargs method)": [[11, "cli_command_parser.conversion.command_builder.BaseArgs.to_str", false]], "to_str() (cli_command_parser.conversion.command_builder.parambaseargs method)": [[11, "cli_command_parser.conversion.command_builder.ParamBaseArgs.to_str", false]], "toomanyarguments": [[17, "cli_command_parser.exceptions.TooManyArguments", false]], "top_level_commands() (in module cli_command_parser.documentation)": [[15, "cli_command_parser.documentation.top_level_commands", false]], "track_callable() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_callable", false]], "track_refs_to() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.track_refs_to", false]], "trackedref (class in cli_command_parser.conversion.visitor)": [[13, "cli_command_parser.conversion.visitor.TrackedRef", false]], "triflag (class in cli_command_parser.parameters.options)": [[40, "cli_command_parser.parameters.options.TriFlag", false]], "triflaghelpformatter (class in cli_command_parser.formatting.params)": [[20, "cli_command_parser.formatting.params.TriFlagHelpFormatter", false]], "triflagoptionstrings (class in cli_command_parser.parameters.option_strings)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings", false]], "truthy (cli_command_parser.config.showdefaults attribute)": [[5, "cli_command_parser.config.ShowDefaults.TRUTHY", false]], "type (cli_command_parser.config.configitem attribute)": [[5, "cli_command_parser.config.ConfigItem.type", false]], "type (cli_command_parser.conversion.command_builder.paramargs attribute)": [[11, "cli_command_parser.conversion.command_builder.ParamArgs.type", false]], "type (cli_command_parser.inputs.files.file attribute)": [[27, "cli_command_parser.inputs.files.File.type", false]], "type (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.type", false]], "type (cli_command_parser.inputs.numeric.numericinput attribute)": [[28, "cli_command_parser.inputs.numeric.NumericInput.type", false]], "type (cli_command_parser.inputs.numeric.numrange attribute)": [[28, "cli_command_parser.inputs.numeric.NumRange.type", false]], "type (cli_command_parser.inputs.numeric.range attribute)": [[28, "cli_command_parser.inputs.numeric.Range.type", false]], "type (cli_command_parser.parameters.base.parameter attribute)": [[36, "cli_command_parser.parameters.base.Parameter.type", false]], "type (cli_command_parser.parameters.options.counter attribute)": [[40, "cli_command_parser.parameters.options.Counter.type", false]], "type() (cli_command_parser.parameters.options.flag static method)": [[40, "cli_command_parser.parameters.options.Flag.type", false]], "type() (cli_command_parser.parameters.options.triflag static method)": [[40, "cli_command_parser.parameters.options.TriFlag.type", false]], "underscore (cli_command_parser.config.optionnamemode attribute)": [[5, "cli_command_parser.config.OptionNameMode.UNDERSCORE", false]], "unit (cli_command_parser.inputs.time.timedelta attribute)": [[30, "cli_command_parser.inputs.time.TimeDelta.unit", false]], "unregister() (cli_command_parser.error_handling.errorhandler method)": [[16, "cli_command_parser.error_handling.ErrorHandler.unregister", false]], "update() (cli_command_parser.parameters.option_strings.optionstrings method)": [[39, "cli_command_parser.parameters.option_strings.OptionStrings.update", false]], "update_alts() (cli_command_parser.parameters.option_strings.triflagoptionstrings method)": [[39, "cli_command_parser.parameters.option_strings.TriFlagOptionStrings.update_alts", false]], "update_node() (cli_command_parser.parse_tree.posnode method)": [[43, "cli_command_parser.parse_tree.PosNode.update_node", false]], "upper_bound (cli_command_parser.nargs.nargs property)": [[33, "cli_command_parser.nargs.Nargs.upper_bound", false]], "url (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.url", false]], "usage (cli_command_parser.conversion.command_builder.commandargs attribute)": [[11, "cli_command_parser.conversion.command_builder.CommandArgs.usage", false]], "usage (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.usage", false]], "usage_column_width (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.usage_column_width", false]], "usageerror": [[17, "cli_command_parser.exceptions.UsageError", false]], "use_auto_long_opt_str (cli_command_parser.conversion.command_builder.paramconverter property)": [[11, "cli_command_parser.conversion.command_builder.ParamConverter.use_auto_long_opt_str", false]], "use_cmd (cli_command_parser.parameters.base.defaultcallback attribute)": [[36, "cli_command_parser.parameters.base.DefaultCallback.use_cmd", false]], "use_env_value (cli_command_parser.parameters.base.baseoption attribute)": [[36, "cli_command_parser.parameters.base.BaseOption.use_env_value", false]], "use_env_value (cli_command_parser.parameters.options.flag attribute)": [[40, "cli_command_parser.parameters.options.Flag.use_env_value", false]], "use_env_value (cli_command_parser.parameters.options.triflag attribute)": [[40, "cli_command_parser.parameters.options.TriFlag.use_env_value", false]], "use_table_directive (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.use_table_directive", false]], "use_type_metavar (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.use_type_metavar", false]], "use_windows_fix (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.use_windows_fix", false]], "validate() (cli_command_parser.parameters.base.parameter method)": [[36, "cli_command_parser.parameters.base.Parameter.validate", false]], "validate() (cli_command_parser.parameters.choice_map.choicemap method)": [[37, "cli_command_parser.parameters.choice_map.ChoiceMap.validate", false]], "validate() (cli_command_parser.parameters.groups.paramgroup method)": [[38, "cli_command_parser.parameters.groups.ParamGroup.validate", false]], "validate() (cli_command_parser.parameters.options.counter method)": [[40, "cli_command_parser.parameters.options.Counter.validate", false]], "validated_path() (cli_command_parser.inputs.files.fileinput method)": [[27, "cli_command_parser.inputs.files.FileInput.validated_path", false]], "value_gt_max() (cli_command_parser.inputs.utils.rangemixin method)": [[31, "cli_command_parser.inputs.utils.RangeMixin.value_gt_max", false]], "value_lt_min() (cli_command_parser.inputs.utils.rangemixin method)": [[31, "cli_command_parser.inputs.utils.RangeMixin.value_lt_min", false]], "valuemixin (class in cli_command_parser.parameters.actions)": [[35, "cli_command_parser.parameters.actions.ValueMixin", false]], "variable (cli_command_parser.nargs.nargs attribute)": [[33, "cli_command_parser.nargs.Nargs.variable", false]], "verbose (cli_command_parser.conversion.cli.parserconverter attribute)": [[10, "cli_command_parser.conversion.cli.ParserConverter.verbose", false]], "version (cli_command_parser.metadata.programmetadata attribute)": [[32, "cli_command_parser.metadata.ProgramMetadata.version", false]], "visit_assign() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Assign", false]], "visit_asyncfor() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFor", false]], "visit_asyncfunctiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_AsyncFunctionDef", false]], "visit_call() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Call", false]], "visit_classdef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ClassDef", false]], "visit_for() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_For", false]], "visit_func (class in cli_command_parser.conversion.argparse_ast)": [[8, "cli_command_parser.conversion.argparse_ast.visit_func", false]], "visit_funcs (cli_command_parser.conversion.argparse_ast.argcollection attribute)": [[8, "cli_command_parser.conversion.argparse_ast.ArgCollection.visit_funcs", false]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astargumentparser attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstArgumentParser.visit_funcs", false]], "visit_funcs (cli_command_parser.conversion.argparse_ast.astcallable attribute)": [[8, "cli_command_parser.conversion.argparse_ast.AstCallable.visit_funcs", false]], "visit_funcs (cli_command_parser.conversion.argparse_ast.subparsersaction attribute)": [[8, "cli_command_parser.conversion.argparse_ast.SubparsersAction.visit_funcs", false]], "visit_functiondef (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_FunctionDef", false]], "visit_import() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Import", false]], "visit_importfrom() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_ImportFrom", false]], "visit_lambda (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_Lambda", false]], "visit_while (cli_command_parser.conversion.visitor.scriptvisitor attribute)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_While", false]], "visit_withitem() (cli_command_parser.conversion.visitor.scriptvisitor method)": [[13, "cli_command_parser.conversion.visitor.ScriptVisitor.visit_withitem", false]], "width (cli_command_parser.utils.terminal property)": [[47, "cli_command_parser.utils.Terminal.width", false]], "widths (cli_command_parser.formatting.restructured_text.rsttable attribute)": [[21, "cli_command_parser.formatting.restructured_text.RstTable.widths", false]], "word (cli_command_parser.parse_tree.posnode attribute)": [[43, "cli_command_parser.parse_tree.PosNode.word", false]], "would_accept() (cli_command_parser.parameters.actions.append method)": [[35, "cli_command_parser.parameters.actions.Append.would_accept", false]], "would_accept() (cli_command_parser.parameters.actions.basicconstaction method)": [[35, "cli_command_parser.parameters.actions.BasicConstAction.would_accept", false]], "would_accept() (cli_command_parser.parameters.actions.paramaction method)": [[35, "cli_command_parser.parameters.actions.ParamAction.would_accept", false]], "would_accept() (cli_command_parser.parameters.actions.store method)": [[35, "cli_command_parser.parameters.actions.Store.would_accept", false]], "wrap_usage_str (cli_command_parser.config.commandconfig attribute)": [[5, "cli_command_parser.config.CommandConfig.wrap_usage_str", false]], "writable (cli_command_parser.inputs.files.fileinput attribute)": [[27, "cli_command_parser.inputs.files.FileInput.writable", false]], "write() (cli_command_parser.inputs.utils.filewrapper method)": [[31, "cli_command_parser.inputs.utils.FileWrapper.write", false]], "write_index() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_index", false]], "write_rst() (cli_command_parser.documentation.rstwriter method)": [[15, "cli_command_parser.documentation.RstWriter.write_rst", false]]}, "objects": {"cli_command_parser": [[2, 0, 0, "-", "annotations"], [3, 0, 0, "-", "command_parameters"], [4, 0, 0, "-", "commands"], [5, 0, 0, "-", "config"], [6, 0, 0, "-", "context"], [14, 0, 0, "-", "core"], [15, 0, 0, "-", "documentation"], [16, 0, 0, "-", "error_handling"], [17, 0, 0, "-", "exceptions"], [32, 0, 0, "-", "metadata"], [33, 0, 0, "-", "nargs"], [43, 0, 0, "-", "parse_tree"], [44, 0, 0, "-", "parser"], [45, 0, 0, "-", "testing"], [46, 0, 0, "-", "typing"], [47, 0, 0, "-", "utils"]], "cli_command_parser.annotations": [[2, 1, 1, "", "get_annotation_value_type"], [2, 1, 1, "", "get_args"], [2, 1, 1, "", "get_descriptor_value_type"]], "cli_command_parser.command_parameters": [[3, 2, 1, "", "CommandParameters"]], "cli_command_parser.command_parameters.CommandParameters": [[3, 3, 1, "", "action"], [3, 3, 1, "", "action_flags"], [3, 4, 1, "", "all_positionals"], [3, 3, 1, "", "combo_option_map"], [3, 3, 1, "", "command"], [3, 3, 1, "", "command_parent"], [3, 4, 1, "", "formatter"], [3, 5, 1, "", "get_positionals_to_parse"], [3, 3, 1, "", "groups"], [3, 4, 1, "", "has_nested_pass_thru"], [3, 5, 1, "", "iter_params"], [3, 3, 1, "", "option_map"], [3, 3, 1, "", "options"], [3, 3, 1, "", "parent"], [3, 4, 1, "", "pass_thru"], [3, 3, 1, "", "positionals"], [3, 5, 1, "", "required_check_params"], [3, 5, 1, "", "short_option_to_param_value_pairs"], [3, 3, 1, "", "split_action_flags"], [3, 3, 1, "", "sub_command"]], "cli_command_parser.commands": [[4, 2, 1, "", "AsyncCommand"], [4, 2, 1, "", "Command"], [4, 1, 1, "", "main"]], "cli_command_parser.commands.AsyncCommand": [[4, 5, 1, "", "__call__"], [4, 5, 1, "", "_after_main_"], [4, 5, 1, "", "_before_main_"], [4, 5, 1, "", "_pre_init_actions_"], [4, 5, 1, "", "main"], [4, 5, 1, "", "parse_and_await"], [4, 5, 1, "", "parse_and_run"]], "cli_command_parser.commands.Command": [[4, 5, 1, "", "__call__"], [4, 5, 1, "", "_after_main_"], [4, 5, 1, "", "_before_main_"], [4, 5, 1, "", "_init_command_"], [4, 5, 1, "", "_pre_init_actions_"], [4, 3, 1, "", "ctx"], [4, 5, 1, "", "main"], [4, 5, 1, "", "parse"], [4, 5, 1, "", "parse_and_run"]], "cli_command_parser.commands.Command.__call__.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._after_main_.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._before_main_.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._init_command_.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command._pre_init_actions_.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.main.params": [[4, 6, 1, "", "args"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.Command.parse.params": [[4, 6, 1, "", "argv"]], "cli_command_parser.commands.Command.parse_and_run.params": [[4, 6, 1, "", "argv"], [4, 6, 1, "", "kwargs"]], "cli_command_parser.commands.main.params": [[4, 6, 1, "", "argv"], [4, 6, 1, "", "kwargs"], [4, 6, 1, "", "return_command"]], "cli_command_parser.config": [[5, 2, 1, "", "AllowLeadingDash"], [5, 2, 1, "", "AmbiguousComboMode"], [5, 2, 1, "", "CommandConfig"], [5, 2, 1, "", "ConfigItem"], [5, 2, 1, "", "DynamicConfigItem"], [5, 2, 1, "", "OptionNameMode"], [5, 2, 1, "", "ShowDefaults"], [5, 2, 1, "", "SubcommandAliasHelpMode"], [5, 1, 1, "", "config_item"]], "cli_command_parser.config.AllowLeadingDash": [[5, 3, 1, "", "ALWAYS"], [5, 3, 1, "", "NEVER"], [5, 3, 1, "", "NUMERIC"]], "cli_command_parser.config.AmbiguousComboMode": [[5, 3, 1, "", "IGNORE"], [5, 3, 1, "", "PERMISSIVE"], [5, 3, 1, "", "STRICT"]], "cli_command_parser.config.CommandConfig": [[5, 3, 1, "", "FIELDS"], [5, 3, 1, "", "action_after_action_flags"], [5, 3, 1, "", "add_help"], [5, 3, 1, "", "allow_annotation_type"], [5, 3, 1, "", "allow_backtrack"], [5, 3, 1, "", "allow_missing"], [5, 3, 1, "", "always_run_after_main"], [5, 3, 1, "", "ambiguous_short_combos"], [5, 5, 1, "", "as_dict"], [5, 3, 1, "", "choice_delim"], [5, 3, 1, "", "cmd_alias_mode"], [5, 3, 1, "", "command_formatter"], [5, 3, 1, "", "error_handler"], [5, 3, 1, "", "extended_epilog"], [5, 3, 1, "", "group_tree_spacers"], [5, 3, 1, "", "ignore_unknown"], [5, 3, 1, "", "multiple_action_flags"], [5, 3, 1, "", "option_name_mode"], [5, 3, 1, "", "param_formatter"], [5, 3, 1, "", "reject_ambiguous_pos_combos"], [5, 3, 1, "", "show_defaults"], [5, 3, 1, "", "show_docstring"], [5, 3, 1, "", "show_env_vars"], [5, 3, 1, "", "show_group_tree"], [5, 3, 1, "", "show_group_type"], [5, 3, 1, "", "show_inherited_descriptions"], [5, 3, 1, "", "sort_choices"], [5, 3, 1, "", "strict_usage_column_width"], [5, 3, 1, "", "sub_cmd_doc_depth"], [5, 3, 1, "", "usage_column_width"], [5, 3, 1, "", "use_type_metavar"], [5, 3, 1, "", "wrap_usage_str"]], "cli_command_parser.config.ConfigItem": [[5, 3, 1, "", "default"], [5, 3, 1, "", "name"], [5, 3, 1, "", "type"]], "cli_command_parser.config.ConfigItem.params": [[5, 6, 1, "", "default"], [5, 6, 1, "", "type"]], "cli_command_parser.config.OptionNameMode": [[5, 3, 1, "", "BOTH"], [5, 3, 1, "", "BOTH_DASH"], [5, 3, 1, "", "BOTH_UNDERSCORE"], [5, 3, 1, "", "DASH"], [5, 3, 1, "", "NONE"], [5, 3, 1, "", "UNDERSCORE"]], "cli_command_parser.config.ShowDefaults": [[5, 3, 1, "", "ANY"], [5, 3, 1, "", "MISSING"], [5, 3, 1, "", "NEVER"], [5, 3, 1, "", "NON_EMPTY"], [5, 3, 1, "", "TRUTHY"]], "cli_command_parser.config.SubcommandAliasHelpMode": [[5, 3, 1, "", "ALIAS"], [5, 3, 1, "", "COMBINE"], [5, 3, 1, "", "REPEAT"]], "cli_command_parser.context": [[6, 2, 1, "", "ActionPhase"], [6, 2, 1, "", "Context"], [6, 2, 1, "", "ContextProxy"], [6, 1, 1, "", "get_context"], [6, 1, 1, "", "get_current_context"], [6, 1, 1, "", "get_or_create_context"], [6, 1, 1, "", "get_parsed"], [6, 1, 1, "", "get_raw_arg"]], "cli_command_parser.context.ActionPhase": [[6, 3, 1, "", "AFTER_MAIN"], [6, 3, 1, "", "BEFORE_MAIN"], [6, 3, 1, "", "PRE_INIT"]], "cli_command_parser.context.Context": [[6, 4, 1, "", "action_flag_count"], [6, 4, 1, "", "all_action_flags"], [6, 3, 1, "", "allow_argv_prog"], [6, 4, 1, "", "categorized_action_flags"], [6, 3, 1, "", "config"], [6, 5, 1, "", "for_prog"], [6, 5, 1, "", "get_error_handler"], [6, 5, 1, "", "get_missing"], [6, 5, 1, "", "get_parsed"], [6, 5, 1, "", "get_parsed_value"], [6, 5, 1, "", "has_parsed_value"], [6, 5, 1, "", "iter_action_flags"], [6, 5, 1, "", "missing_options_with_env_var"], [6, 5, 1, "", "num_provided"], [6, 4, 1, "", "params"], [6, 5, 1, "", "pop_parsed_value"], [6, 3, 1, "", "prog"], [6, 5, 1, "", "record_action"], [6, 5, 1, "", "roll_back_parsed_values"], [6, 5, 1, "", "set_parsed_value"], [6, 4, 1, "", "terminal_width"]], "cli_command_parser.context.Context.get_parsed.params": [[6, 6, 1, "", "command"], [6, 6, 1, "", "default"], [6, 6, 1, "", "exclude"], [6, 6, 1, "", "include_defaults"], [6, 6, 1, "", "recursive"]], "cli_command_parser.context.Context.iter_action_flags.params": [[6, 6, 1, "", "phase"]], "cli_command_parser.context.ContextProxy": [[6, 4, 1, "", "config"], [6, 5, 1, "", "get_parsed_value"], [6, 5, 1, "", "has_parsed_value"], [6, 5, 1, "", "num_provided"], [6, 5, 1, "", "record_action"], [6, 5, 1, "", "set_parsed_value"], [6, 4, 1, "", "terminal_width"]], "cli_command_parser.context.get_context.params": [[6, 6, 1, "", "command"]], "cli_command_parser.context.get_current_context.params": [[6, 6, 1, "", "silent"]], "cli_command_parser.context.get_parsed.params": [[6, 6, 1, "", "command"], [6, 6, 1, "", "default"], [6, 6, 1, "", "include_defaults"], [6, 6, 1, "", "to_call"]], "cli_command_parser.conversion": [[8, 0, 0, "-", "argparse_ast"], [9, 0, 0, "-", "argparse_utils"], [10, 0, 0, "-", "cli"], [11, 0, 0, "-", "command_builder"], [12, 0, 0, "-", "utils"], [13, 0, 0, "-", "visitor"]], "cli_command_parser.conversion.argparse_ast": [[8, 2, 1, "", "AddVisitedChild"], [8, 2, 1, "", "ArgCollection"], [8, 2, 1, "", "ArgGroup"], [8, 2, 1, "", "AstArgumentParser"], [8, 2, 1, "", "AstCallable"], [8, 2, 1, "", "MutuallyExclusiveGroup"], [8, 2, 1, "", "ParserArg"], [8, 2, 1, "", "Script"], [8, 2, 1, "", "SubParser"], [8, 2, 1, "", "SubparsersAction"], [8, 2, 1, "", "visit_func"]], "cli_command_parser.conversion.argparse_ast.AddVisitedChild": [[8, 3, 1, "", "child_cls"], [8, 3, 1, "", "list_attr"]], "cli_command_parser.conversion.argparse_ast.ArgCollection": [[8, 5, 1, "", "__init_subclass__"], [8, 3, 1, "", "add_argument"], [8, 5, 1, "", "add_argument_group"], [8, 5, 1, "", "add_mutually_exclusive_group"], [8, 3, 1, "", "args"], [8, 5, 1, "", "grouped_children"], [8, 3, 1, "", "groups"], [8, 3, 1, "", "parent"], [8, 5, 1, "", "pprint"], [8, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.ArgGroup": [[8, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.AstArgumentParser": [[8, 3, 1, "", "add_subparsers"], [8, 3, 1, "", "represents"], [8, 3, 1, "", "sub_parsers"], [8, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.AstCallable": [[8, 5, 1, "", "__init_subclass__"], [8, 5, 1, "", "get_tracked_refs"], [8, 5, 1, "", "init_call_repr"], [8, 4, 1, "", "init_func_args"], [8, 4, 1, "", "init_func_kwargs"], [8, 4, 1, "", "init_func_name"], [8, 4, 1, "", "init_func_raw_kwargs"], [8, 5, 1, "", "pprint"], [8, 3, 1, "", "represents"], [8, 4, 1, "", "signature"], [8, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.MutuallyExclusiveGroup": [[8, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.ParserArg": [[8, 3, 1, "", "parent"], [8, 5, 1, "", "represents"]], "cli_command_parser.conversion.argparse_ast.Script": [[8, 5, 1, "", "add_parser"], [8, 4, 1, "", "mod_cls_to_ast_cls_map"], [8, 4, 1, "", "parsers"], [8, 3, 1, "", "path"], [8, 5, 1, "", "register_parser"]], "cli_command_parser.conversion.argparse_ast.SubParser": [[8, 4, 1, "", "init_func_kwargs"], [8, 5, 1, "", "represents"], [8, 3, 1, "", "sp_parent"]], "cli_command_parser.conversion.argparse_ast.SubparsersAction": [[8, 5, 1, "", "add_parser"], [8, 3, 1, "", "parent"], [8, 5, 1, "", "represents"], [8, 3, 1, "", "visit_funcs"]], "cli_command_parser.conversion.argparse_ast.visit_func": [[8, 3, 1, "", "func"]], "cli_command_parser.conversion.argparse_utils": [[9, 2, 1, "", "ArgumentParser"], [9, 2, 1, "", "SubParsersAction"]], "cli_command_parser.conversion.argparse_utils.ArgumentParser": [[9, 5, 1, "", "add_argument_group"], [9, 5, 1, "", "add_mutually_exclusive_group"], [9, 5, 1, "", "add_subparsers"]], "cli_command_parser.conversion.argparse_utils.SubParsersAction": [[9, 5, 1, "", "add_parser"]], "cli_command_parser.conversion.cli": [[10, 2, 1, "", "Convert"], [10, 2, 1, "", "ParserConverter"], [10, 2, 1, "", "Pprint"]], "cli_command_parser.conversion.cli.Convert": [[10, 3, 1, "", "add_methods"], [10, 3, 1, "", "input"], [10, 5, 1, "", "main"]], "cli_command_parser.conversion.cli.ParserConverter": [[10, 5, 1, "", "_init_command_"], [10, 3, 1, "", "action"], [10, 3, 1, "", "dry_run"], [10, 3, 1, "", "input"], [10, 3, 1, "", "no_smart_for"], [10, 4, 1, "", "script"], [10, 3, 1, "", "verbose"]], "cli_command_parser.conversion.cli.Pprint": [[10, 3, 1, "", "input"], [10, 5, 1, "", "main"]], "cli_command_parser.conversion.command_builder": [[11, 2, 1, "", "BaseArgs"], [11, 2, 1, "", "CollectionConverter"], [11, 2, 1, "", "CommandArgs"], [11, 7, 1, "", "ConversionError"], [11, 2, 1, "", "Converter"], [11, 2, 1, "", "ConverterGroup"], [11, 2, 1, "", "FlagArgs"], [11, 2, 1, "", "GroupConverter"], [11, 2, 1, "", "OptionArgs"], [11, 2, 1, "", "ParamArgs"], [11, 2, 1, "", "ParamBaseArgs"], [11, 2, 1, "", "ParamConverter"], [11, 2, 1, "", "ParamConverterGroup"], [11, 2, 1, "", "ParserConverter"], [11, 2, 1, "", "PassThruArgs"], [11, 2, 1, "", "ScriptConverter"], [11, 1, 1, "", "convert_script"], [11, 1, 1, "", "literal_eval_or_none"]], "cli_command_parser.conversion.command_builder.BaseArgs": [[11, 5, 1, "", "from_kwargs"], [11, 3, 1, "", "help"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.CollectionConverter": [[11, 3, 1, "", "ast_obj"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_members"], [11, 4, 1, "", "grouped_children"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.CommandArgs": [[11, 3, 1, "", "add_help"], [11, 3, 1, "", "choice"], [11, 3, 1, "", "choices"], [11, 3, 1, "", "description"], [11, 3, 1, "", "docs_url"], [11, 3, 1, "", "email"], [11, 3, 1, "", "epilog"], [11, 3, 1, "", "option_name_mode"], [11, 3, 1, "", "prog"], [11, 3, 1, "", "usage"]], "cli_command_parser.conversion.command_builder.Converter": [[11, 5, 1, "", "__init_subclass__"], [11, 5, 1, "", "convert"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "for_ast_callable"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "init_for_ast_callable"], [11, 5, 1, "", "init_group"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.ConverterGroup": [[11, 5, 1, "", "format_all"], [11, 3, 1, "", "member_type"], [11, 3, 1, "", "members"], [11, 3, 1, "", "parent"]], "cli_command_parser.conversion.command_builder.FlagArgs": [[11, 3, 1, "", "const"], [11, 5, 1, "", "init_counter"], [11, 5, 1, "", "init_flag"]], "cli_command_parser.conversion.command_builder.GroupConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"], [11, 3, 1, "", "newline_between_members"]], "cli_command_parser.conversion.command_builder.OptionArgs": [[11, 5, 1, "", "init_option"], [11, 3, 1, "", "name_mode"]], "cli_command_parser.conversion.command_builder.ParamArgs": [[11, 3, 1, "", "action"], [11, 3, 1, "", "choices"], [11, 5, 1, "", "init_positional"], [11, 3, 1, "", "nargs"], [11, 3, 1, "", "type"]], "cli_command_parser.conversion.command_builder.ParamBaseArgs": [[11, 3, 1, "", "default"], [11, 3, 1, "", "hide"], [11, 3, 1, "", "metavar"], [11, 3, 1, "", "name"], [11, 3, 1, "", "required"], [11, 5, 1, "", "to_str"]], "cli_command_parser.conversion.command_builder.ParamConverter": [[11, 3, 1, "", "ast_obj"], [11, 4, 1, "", "attr_name"], [11, 4, 1, "", "cmd_option_strs"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "format"], [11, 5, 1, "", "format_lines"], [11, 5, 1, "", "get_cls_and_kwargs"], [11, 5, 1, "", "get_pos_args"], [11, 5, 1, "", "init_group"], [11, 4, 1, "", "is_option"], [11, 4, 1, "", "is_pass_thru"], [11, 4, 1, "", "is_positional"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "use_auto_long_opt_str"]], "cli_command_parser.conversion.command_builder.ParamConverterGroup": [[11, 5, 1, "", "format_all"]], "cli_command_parser.conversion.command_builder.ParserConverter": [[11, 3, 1, "", "ast_obj"], [11, 3, 1, "", "converts"], [11, 5, 1, "", "descendant_args"], [11, 5, 1, "", "finalize"], [11, 5, 1, "", "format_lines"], [11, 4, 1, "", "is_sub_parser"], [11, 4, 1, "", "name"], [11, 4, 1, "", "name_mode"], [11, 3, 1, "", "parent"], [11, 4, 1, "", "sub_parser_converters"]], "cli_command_parser.conversion.command_builder.ScriptConverter": [[11, 3, 1, "", "converts"], [11, 5, 1, "", "format_lines"]], "cli_command_parser.conversion.utils": [[12, 1, 1, "", "collection_contents"], [12, 1, 1, "", "get_name_repr"], [12, 1, 1, "", "iter_module_parents"]], "cli_command_parser.conversion.visitor": [[13, 2, 1, "", "ScopedVisit"], [13, 2, 1, "", "ScriptVisitor"], [13, 2, 1, "", "TrackedRef"], [13, 1, 1, "", "imp_names"], [13, 1, 1, "", "scoped"]], "cli_command_parser.conversion.visitor.ScriptVisitor": [[13, 5, 1, "", "get_tracked_refs"], [13, 5, 1, "", "resolve_ref"], [13, 5, 1, "", "track_callable"], [13, 5, 1, "", "track_refs_to"], [13, 5, 1, "", "visit_Assign"], [13, 5, 1, "", "visit_AsyncFor"], [13, 3, 1, "", "visit_AsyncFunctionDef"], [13, 5, 1, "", "visit_Call"], [13, 3, 1, "", "visit_ClassDef"], [13, 5, 1, "", "visit_For"], [13, 3, 1, "", "visit_FunctionDef"], [13, 5, 1, "", "visit_Import"], [13, 5, 1, "", "visit_ImportFrom"], [13, 3, 1, "", "visit_Lambda"], [13, 3, 1, "", "visit_While"], [13, 5, 1, "", "visit_withitem"]], "cli_command_parser.conversion.visitor.TrackedRef": [[13, 3, 1, "", "module"], [13, 3, 1, "", "name"]], "cli_command_parser.core": [[14, 2, 1, "", "CommandMeta"], [14, 1, 1, "", "get_config"], [14, 1, 1, "", "get_metadata"], [14, 1, 1, "", "get_params"], [14, 1, 1, "", "get_parent"], [14, 1, 1, "", "get_top_level_commands"]], "cli_command_parser.core.CommandMeta": [[14, 5, 1, "", "config"], [14, 5, 1, "", "meta"], [14, 5, 1, "", "params"], [14, 5, 1, "", "parent"]], "cli_command_parser.core.CommandMeta.params": [[14, 6, 1, "", "action_after_action_flags"], [14, 6, 1, "", "add_help"], [14, 6, 1, "", "allow_missing"], [14, 6, 1, "", "always_run_after_main"], [14, 6, 1, "", "choice"], [14, 6, 1, "", "choices"], [14, 6, 1, "", "description"], [14, 6, 1, "", "doc_name"], [14, 6, 1, "", "epilog"], [14, 6, 1, "", "error_handler"], [14, 6, 1, "", "help"], [14, 6, 1, "", "ignore_unknown"], [14, 6, 1, "", "multiple_action_flags"], [14, 6, 1, "", "prog"], [14, 6, 1, "", "usage"]], "cli_command_parser.core.CommandMeta.parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.core.get_parent.params": [[14, 6, 1, "", "cls"], [14, 6, 1, "", "include_abc"]], "cli_command_parser.documentation": [[15, 2, 1, "", "RstWriter"], [15, 1, 1, "", "filtered_commands"], [15, 1, 1, "", "import_module"], [15, 1, 1, "", "load_commands"], [15, 1, 1, "", "render_command_rst"], [15, 1, 1, "", "render_script_rst"], [15, 1, 1, "", "top_level_commands"]], "cli_command_parser.documentation.RstWriter": [[15, 5, 1, "", "document_module"], [15, 5, 1, "", "document_package"], [15, 5, 1, "", "document_script"], [15, 5, 1, "", "document_scripts"], [15, 5, 1, "", "write_index"], [15, 5, 1, "", "write_rst"]], "cli_command_parser.documentation.RstWriter.document_module.params": [[15, 6, 1, "", "module"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_package.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "empty"], [15, 6, 1, "", "header"], [15, 6, 1, "", "index"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "pkg_name"], [15, 6, 1, "", "pkg_path"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.RstWriter.document_script.params": [[15, 6, 1, "", "kwargs"], [15, 6, 1, "", "name"], [15, 6, 1, "", "path"], [15, 6, 1, "", "replacements"], [15, 6, 1, "", "subdir"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.RstWriter.params": [[15, 6, 1, "", "dry_run"], [15, 6, 1, "", "encoding"], [15, 6, 1, "", "ext"], [15, 6, 1, "", "module_template"], [15, 6, 1, "", "newline"], [15, 6, 1, "", "output_dir"], [15, 6, 1, "", "skip_modules"]], "cli_command_parser.documentation.RstWriter.write_index.params": [[15, 6, 1, "", "caption"], [15, 6, 1, "", "content_subdir"], [15, 6, 1, "", "contents"], [15, 6, 1, "", "header"], [15, 6, 1, "", "kwargs"], [15, 6, 1, "", "max_depth"], [15, 6, 1, "", "name"], [15, 6, 1, "", "subdir"]], "cli_command_parser.documentation.load_commands.params": [[15, 6, 1, "", "include_abc"], [15, 6, 1, "", "path"], [15, 6, 1, "", "top_only"]], "cli_command_parser.documentation.render_command_rst.params": [[15, 6, 1, "", "command"], [15, 6, 1, "", "fix_name"], [15, 6, 1, "", "fix_name_func"]], "cli_command_parser.error_handling": [[16, 2, 1, "", "ErrorHandler"], [16, 2, 1, "", "Handler"], [16, 2, 1, "", "NullErrorHandler"], [16, 8, 1, "", "error_handler"], [16, 8, 1, "", "extended_error_handler"], [16, 1, 1, "", "handle_kb_interrupt"], [16, 8, 1, "", "no_exit_handler"]], "cli_command_parser.error_handling.ErrorHandler": [[16, 5, 1, "", "__call__"], [16, 5, 1, "", "cls_handler"], [16, 5, 1, "", "copy"], [16, 3, 1, "", "exc_handler_map"], [16, 5, 1, "", "iter_handlers"], [16, 5, 1, "", "register"], [16, 5, 1, "", "unregister"]], "cli_command_parser.error_handling.Handler": [[16, 3, 1, "", "exc_cls"], [16, 3, 1, "", "handler"]], "cli_command_parser.exceptions": [[17, 7, 1, "", "AmbiguousCombo"], [17, 7, 1, "", "AmbiguousParseTree"], [17, 7, 1, "", "AmbiguousShortForm"], [17, 7, 1, "", "Backtrack"], [17, 7, 1, "", "BadArgument"], [17, 7, 1, "", "CommandDefinitionError"], [17, 7, 1, "", "CommandParserException"], [17, 7, 1, "", "InvalidChoice"], [17, 7, 1, "", "MissingArgument"], [17, 7, 1, "", "MultiParamUsageError"], [17, 7, 1, "", "NextCommand"], [17, 7, 1, "", "NoActiveContext"], [17, 7, 1, "", "NoSuchOption"], [17, 7, 1, "", "ParamConflict"], [17, 7, 1, "", "ParamUsageError"], [17, 7, 1, "", "ParameterDefinitionError"], [17, 7, 1, "", "ParamsMissing"], [17, 7, 1, "", "ParserExit"], [17, 7, 1, "", "TooManyArguments"], [17, 7, 1, "", "UsageError"]], "cli_command_parser.exceptions.CommandParserException": [[17, 3, 1, "", "code"], [17, 5, 1, "", "exit"], [17, 5, 1, "", "show"]], "cli_command_parser.exceptions.MissingArgument": [[17, 3, 1, "", "message"]], "cli_command_parser.exceptions.UsageError": [[17, 3, 1, "", "message"]], "cli_command_parser.formatting": [[19, 0, 0, "-", "commands"], [20, 0, 0, "-", "params"], [21, 0, 0, "-", "restructured_text"], [22, 0, 0, "-", "utils"]], "cli_command_parser.formatting.commands": [[19, 2, 1, "", "CommandHelpFormatter"], [19, 1, 1, "", "get_formatter"], [19, 1, 1, "", "get_usage_sub_cmds"]], "cli_command_parser.formatting.commands.CommandHelpFormatter": [[19, 5, 1, "", "format_help"], [19, 5, 1, "", "format_rst"], [19, 5, 1, "", "format_usage"], [19, 5, 1, "", "maybe_add_groups"], [19, 5, 1, "", "maybe_add_option"], [19, 5, 1, "", "maybe_add_options"], [19, 5, 1, "", "maybe_add_positionals"]], "cli_command_parser.formatting.params": [[20, 2, 1, "", "ChoiceGroup"], [20, 2, 1, "", "ChoiceMapHelpFormatter"], [20, 2, 1, "", "GroupHelpFormatter"], [20, 2, 1, "", "OptionHelpFormatter"], [20, 2, 1, "", "ParamHelpFormatter"], [20, 2, 1, "", "PassThruHelpFormatter"], [20, 2, 1, "", "PositionalHelpFormatter"], [20, 2, 1, "", "TriFlagHelpFormatter"]], "cli_command_parser.formatting.params.ChoiceGroup": [[20, 5, 1, "", "add"], [20, 3, 1, "", "choice_strs"], [20, 3, 1, "", "choices"], [20, 5, 1, "", "format"], [20, 5, 1, "", "group_choices"], [20, 5, 1, "", "prepare"], [20, 5, 1, "", "prepare_aliases"], [20, 5, 1, "", "prepare_combined"], [20, 5, 1, "", "prepare_repeated"]], "cli_command_parser.formatting.params.ChoiceGroup.format.params": [[20, 6, 1, "", "default_mode"], [20, 6, 1, "", "prefix"]], "cli_command_parser.formatting.params.ChoiceGroup.group_choices.params": [[20, 6, 1, "", "choices"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare.params": [[20, 6, 1, "", "default_mode"]], "cli_command_parser.formatting.params.ChoiceGroup.prepare_aliases.params": [[20, 6, 1, "", "format_str"]], "cli_command_parser.formatting.params.ChoiceMapHelpFormatter": [[20, 4, 1, "", "choice_groups"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_table"]], "cli_command_parser.formatting.params.GroupHelpFormatter.format_help.params": [[20, 6, 1, "", "clean"], [20, 6, 1, "", "prefix"]], "cli_command_parser.formatting.params.OptionHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.ParamHelpFormatter": [[20, 5, 1, "", "__init_subclass__"], [20, 5, 1, "", "for_param_cls"], [20, 5, 1, "", "format_basic_usage"], [20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_metavar"], [20, 5, 1, "", "format_usage"], [20, 5, 1, "", "iter_usage_parts"], [20, 5, 1, "", "maybe_wrap_usage"], [20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"], [20, 5, 1, "", "rst_row"], [20, 5, 1, "", "rst_rows"], [20, 5, 1, "", "rst_usage"]], "cli_command_parser.formatting.params.PassThruHelpFormatter": [[20, 3, 1, "", "param"], [20, 3, 1, "", "required_formatter_map"]], "cli_command_parser.formatting.params.PositionalHelpFormatter": [[20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"]], "cli_command_parser.formatting.params.TriFlagHelpFormatter": [[20, 5, 1, "", "format_description"], [20, 5, 1, "", "format_help"], [20, 5, 1, "", "format_usage"], [20, 3, 1, "", "param"], [20, 5, 1, "", "rst_rows"]], "cli_command_parser.formatting.restructured_text": [[21, 2, 1, "", "RstTable"], [21, 1, 1, "", "rst_bar"], [21, 1, 1, "", "rst_directive"], [21, 1, 1, "", "rst_header"], [21, 1, 1, "", "rst_list_table"], [21, 1, 1, "", "rst_toc_tree"], [21, 1, 1, "", "spaced_rst_header"]], "cli_command_parser.formatting.restructured_text.RstTable": [[21, 5, 1, "", "add_dict_rows"], [21, 5, 1, "", "add_kv_rows"], [21, 5, 1, "", "add_row"], [21, 5, 1, "", "add_rows"], [21, 5, 1, "", "bar"], [21, 5, 1, "", "from_dict"], [21, 5, 1, "", "from_dicts"], [21, 5, 1, "", "iter_build"], [21, 3, 1, "", "rows"], [21, 3, 1, "", "show_title"], [21, 3, 1, "", "subtitle"], [21, 3, 1, "", "title"], [21, 3, 1, "", "use_table_directive"], [21, 3, 1, "", "widths"]], "cli_command_parser.formatting.restructured_text.RstTable.add_row.params": [[21, 6, 1, "", "columns"], [21, 6, 1, "", "header"], [21, 6, 1, "", "index"]], "cli_command_parser.formatting.restructured_text.RstTable.bar.params": [[21, 6, 1, "", "char"]], "cli_command_parser.formatting.restructured_text.RstTable.params": [[21, 6, 1, "", "headers"], [21, 6, 1, "", "show_title"], [21, 6, 1, "", "subtitle"], [21, 6, 1, "", "title"], [21, 6, 1, "", "use_table_directive"]], "cli_command_parser.formatting.restructured_text.rst_toc_tree.params": [[21, 6, 1, "", "content_fmt"], [21, 6, 1, "", "contents"], [21, 6, 1, "", "kwargs"], [21, 6, 1, "", "max_depth"], [21, 6, 1, "", "name"]], "cli_command_parser.formatting.utils": [[22, 2, 1, "", "PartWrapper"], [22, 1, 1, "", "format_help_entry"], [22, 1, 1, "", "line_iter"]], "cli_command_parser.formatting.utils.PartWrapper": [[22, 5, 1, "", "combine_and_wrap"], [22, 3, 1, "", "cont_indent"], [22, 3, 1, "", "delim"], [22, 5, 1, "", "format_help_entry"], [22, 5, 1, "", "join"], [22, 3, 1, "", "max_width"]], "cli_command_parser.formatting.utils.format_help_entry.params": [[22, 6, 1, "", "description"], [22, 6, 1, "", "lpad"], [22, 6, 1, "", "prefix"], [22, 6, 1, "", "usage_cont_indent"], [22, 6, 1, "", "usage_delim"], [22, 6, 1, "", "usage_parts"]], "cli_command_parser.inputs": [[24, 0, 0, "-", "base"], [25, 0, 0, "-", "choices"], [26, 0, 0, "-", "exceptions"], [27, 0, 0, "-", "files"], [28, 0, 0, "-", "numeric"], [29, 0, 0, "-", "patterns"], [30, 0, 0, "-", "time"], [31, 0, 0, "-", "utils"]], "cli_command_parser.inputs.base": [[24, 2, 1, "", "InputType"]], "cli_command_parser.inputs.base.InputType": [[24, 5, 1, "", "__call__"], [24, 5, 1, "", "fix_default"], [24, 5, 1, "", "format_metavar"], [24, 5, 1, "", "is_valid_type"]], "cli_command_parser.inputs.base.InputType.is_valid_type.params": [[24, 6, 1, "", "value"]], "cli_command_parser.inputs.choices": [[25, 2, 1, "", "ChoiceMap"], [25, 2, 1, "", "Choices"], [25, 2, 1, "", "EnumChoices"]], "cli_command_parser.inputs.choices.ChoiceMap": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.ChoiceMap.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.Choices": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.Choices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "choices"], [25, 6, 1, "", "type"]], "cli_command_parser.inputs.choices.EnumChoices": [[25, 5, 1, "", "__call__"]], "cli_command_parser.inputs.choices.EnumChoices.params": [[25, 6, 1, "", "case_sensitive"], [25, 6, 1, "", "enum"]], "cli_command_parser.inputs.exceptions": [[26, 7, 1, "", "InputValidationError"], [26, 7, 1, "", "InvalidChoiceError"]], "cli_command_parser.inputs.files": [[27, 2, 1, "", "File"], [27, 2, 1, "", "FileInput"], [27, 2, 1, "", "Json"], [27, 2, 1, "", "Path"], [27, 2, 1, "", "Pickle"], [27, 2, 1, "", "Serialized"]], "cli_command_parser.inputs.files.File": [[27, 5, 1, "", "__call__"], [27, 3, 1, "", "encoding"], [27, 3, 1, "", "errors"], [27, 3, 1, "", "lazy"], [27, 3, 1, "", "mode"], [27, 3, 1, "", "parents"], [27, 3, 1, "", "type"]], "cli_command_parser.inputs.files.File.params": [[27, 6, 1, "", "encoding"], [27, 6, 1, "", "errors"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "lazy"], [27, 6, 1, "", "mode"], [27, 6, 1, "", "parents"]], "cli_command_parser.inputs.files.FileInput": [[27, 3, 1, "", "allow_dash"], [27, 3, 1, "", "exists"], [27, 3, 1, "", "expand"], [27, 5, 1, "", "fix_default"], [27, 3, 1, "", "readable"], [27, 3, 1, "", "resolve"], [27, 3, 1, "", "type"], [27, 3, 1, "", "use_windows_fix"], [27, 5, 1, "", "validated_path"], [27, 3, 1, "", "writable"]], "cli_command_parser.inputs.files.Json.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Path": [[27, 5, 1, "", "__call__"]], "cli_command_parser.inputs.files.Path.params": [[27, 6, 1, "", "allow_dash"], [27, 6, 1, "", "exists"], [27, 6, 1, "", "expand"], [27, 6, 1, "", "fix_default"], [27, 6, 1, "", "readable"], [27, 6, 1, "", "resolve"], [27, 6, 1, "", "type"], [27, 6, 1, "", "use_windows_fix"], [27, 6, 1, "", "writable"]], "cli_command_parser.inputs.files.Pickle.params": [[27, 6, 1, "", "kwargs"]], "cli_command_parser.inputs.files.Serialized": [[27, 3, 1, "", "converter"], [27, 3, 1, "", "pass_file"]], "cli_command_parser.inputs.files.Serialized.params": [[27, 6, 1, "", "converter"], [27, 6, 1, "", "kwargs"], [27, 6, 1, "", "pass_file"]], "cli_command_parser.inputs.numeric": [[28, 2, 1, "", "NumRange"], [28, 2, 1, "", "NumericInput"], [28, 2, 1, "", "Range"]], "cli_command_parser.inputs.numeric.NumRange": [[28, 5, 1, "", "__call__"], [28, 5, 1, "", "handle_invalid"], [28, 3, 1, "", "include_max"], [28, 3, 1, "", "include_min"], [28, 3, 1, "", "max"], [28, 3, 1, "", "min"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumRange.handle_invalid.params": [[28, 6, 1, "", "bound"], [28, 6, 1, "", "inclusive"], [28, 6, 1, "", "snap_dir"]], "cli_command_parser.inputs.numeric.NumRange.params": [[28, 6, 1, "", "fix_default"], [28, 6, 1, "", "include_max"], [28, 6, 1, "", "include_min"], [28, 6, 1, "", "max"], [28, 6, 1, "", "min"], [28, 6, 1, "", "snap"], [28, 6, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput": [[28, 5, 1, "", "fix_default"], [28, 5, 1, "", "format_metavar"], [28, 5, 1, "", "is_valid_type"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.NumericInput.is_valid_type.params": [[28, 6, 1, "", "value"]], "cli_command_parser.inputs.numeric.Range": [[28, 5, 1, "", "__call__"], [28, 3, 1, "", "range"], [28, 3, 1, "", "snap"], [28, 3, 1, "", "type"]], "cli_command_parser.inputs.numeric.Range.params": [[28, 6, 1, "", "fix_default"], [28, 6, 1, "", "range"], [28, 6, 1, "", "snap"], [28, 6, 1, "", "type"]], "cli_command_parser.inputs.patterns": [[29, 2, 1, "", "Glob"], [29, 2, 1, "", "PatternInput"], [29, 2, 1, "", "Regex"], [29, 2, 1, "", "RegexMode"]], "cli_command_parser.inputs.patterns.Glob": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "normcase"]], "cli_command_parser.inputs.patterns.Glob.params": [[29, 6, 1, "", "match_case"], [29, 6, 1, "", "normcase"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.PatternInput": [[29, 5, 1, "", "format_metavar"], [29, 3, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.Regex": [[29, 5, 1, "", "__call__"], [29, 3, 1, "", "group"], [29, 3, 1, "", "groups"], [29, 3, 1, "", "mode"]], "cli_command_parser.inputs.patterns.Regex.params": [[29, 6, 1, "", "group"], [29, 6, 1, "", "groups"], [29, 6, 1, "", "mode"], [29, 6, 1, "", "patterns"]], "cli_command_parser.inputs.patterns.RegexMode": [[29, 3, 1, "", "DICT"], [29, 3, 1, "", "GROUP"], [29, 3, 1, "", "GROUPS"], [29, 3, 1, "", "MATCH"], [29, 3, 1, "", "STRING"], [29, 5, 1, "", "normalize"]], "cli_command_parser.inputs.time": [[30, 2, 1, "", "CalendarUnitInput"], [30, 2, 1, "", "DTFormatMode"], [30, 2, 1, "", "DTInput"], [30, 2, 1, "", "Date"], [30, 2, 1, "", "DateTime"], [30, 2, 1, "", "DateTimeInput"], [30, 2, 1, "", "Day"], [30, 2, 1, "", "Month"], [30, 2, 1, "", "Time"], [30, 2, 1, "", "TimeDelta"], [30, 2, 1, "", "different_locale"], [30, 1, 1, "", "dt_repr"], [30, 1, 1, "", "normalize_dt"]], "cli_command_parser.inputs.time.CalendarUnitInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 3, 1, "", "abbreviation"], [30, 5, 1, "", "choice_str"], [30, 5, 1, "", "choices"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "full"], [30, 3, 1, "", "numeric"], [30, 3, 1, "", "out_format"], [30, 3, 1, "", "out_locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.CalendarUnitInput.parse.params": [[30, 6, 1, "", "value"]], "cli_command_parser.inputs.time.DTFormatMode": [[30, 3, 1, "", "ABBREVIATION"], [30, 3, 1, "", "FULL"], [30, 3, 1, "", "NUMERIC"], [30, 3, 1, "", "NUMERIC_ISO"]], "cli_command_parser.inputs.time.DTInput": [[30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 5, 1, "", "fix_default"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DTInput.__init_subclass__.params": [[30, 6, 1, "", "dt_type"]], "cli_command_parser.inputs.time.Date": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTime": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.DateTimeInput": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "__init_subclass__"], [30, 5, 1, "", "choice_str"], [30, 3, 1, "", "dt_type"], [30, 4, 1, "", "earliest"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "formats"], [30, 4, 1, "", "latest"], [30, 3, 1, "", "locale"], [30, 5, 1, "", "parse"], [30, 5, 1, "", "parse_dt"]], "cli_command_parser.inputs.time.Day": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "iso"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Month": [[30, 3, 1, "", "dt_type"], [30, 5, 1, "", "parse_numeric"]], "cli_command_parser.inputs.time.Time": [[30, 3, 1, "", "dt_type"], [30, 3, 1, "", "locale"]], "cli_command_parser.inputs.time.TimeDelta": [[30, 5, 1, "", "__call__"], [30, 5, 1, "", "fix_default"], [30, 5, 1, "", "format_metavar"], [30, 3, 1, "", "include_max"], [30, 3, 1, "", "include_min"], [30, 3, 1, "", "int_only"], [30, 3, 1, "", "max"], [30, 3, 1, "", "min"], [30, 3, 1, "", "unit"]], "cli_command_parser.inputs.time.different_locale": [[30, 3, 1, "", "locale"], [30, 3, 1, "", "original"]], "cli_command_parser.inputs.utils": [[31, 2, 1, "", "FileWrapper"], [31, 2, 1, "", "InputParam"], [31, 2, 1, "", "RangeMixin"], [31, 2, 1, "", "StatMode"], [31, 1, 1, "", "allows_write"], [31, 1, 1, "", "fix_windows_path"], [31, 1, 1, "", "range_str"]], "cli_command_parser.inputs.utils.FileWrapper": [[31, 5, 1, "", "close"], [31, 5, 1, "", "read"], [31, 5, 1, "", "write"]], "cli_command_parser.inputs.utils.InputParam": [[31, 3, 1, "", "default"], [31, 3, 1, "", "name"]], "cli_command_parser.inputs.utils.RangeMixin": [[31, 3, 1, "", "include_max"], [31, 3, 1, "", "include_min"], [31, 3, 1, "", "max"], [31, 3, 1, "", "min"], [31, 5, 1, "", "value_gt_max"], [31, 5, 1, "", "value_lt_min"]], "cli_command_parser.inputs.utils.StatMode": [[31, 3, 1, "", "ANY"], [31, 3, 1, "", "BLOCK"], [31, 3, 1, "", "CHARACTER"], [31, 3, 1, "", "DIR"], [31, 3, 1, "", "FIFO"], [31, 3, 1, "", "FILE"], [31, 3, 1, "", "LINK"], [31, 3, 1, "", "SOCKET"], [31, 5, 1, "", "matches"]], "cli_command_parser.metadata": [[32, 2, 1, "", "DistributionFinder"], [32, 2, 1, "", "DynamicMetadata"], [32, 2, 1, "", "Metadata"], [32, 2, 1, "", "MetadataBase"], [32, 2, 1, "", "ProgFinder"], [32, 2, 1, "", "ProgramMetadata"], [32, 1, 1, "", "dynamic_metadata"]], "cli_command_parser.metadata.DistributionFinder": [[32, 5, 1, "", "dist_for_obj"], [32, 5, 1, "", "dist_for_pkg"], [32, 5, 1, "", "get_urls"]], "cli_command_parser.metadata.DynamicMetadata": [[32, 3, 1, "", "func"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.Metadata": [[32, 3, 1, "", "default"], [32, 5, 1, "", "get_value"]], "cli_command_parser.metadata.MetadataBase": [[32, 5, 1, "", "get_parent"], [32, 5, 1, "", "get_value"], [32, 3, 1, "", "inheritable"], [32, 3, 1, "", "name"]], "cli_command_parser.metadata.ProgFinder": [[32, 4, 1, "", "mod_obj_prog_map"], [32, 5, 1, "", "normalize"]], "cli_command_parser.metadata.ProgramMetadata": [[32, 3, 1, "", "cmd_module"], [32, 3, 1, "", "command"], [32, 3, 1, "", "description"], [32, 3, 1, "", "distribution"], [32, 3, 1, "", "doc_name"], [32, 3, 1, "", "doc_str"], [32, 3, 1, "", "docs_url"], [32, 3, 1, "", "email"], [32, 3, 1, "", "epilog"], [32, 5, 1, "", "for_command"], [32, 5, 1, "", "format_epilog"], [32, 5, 1, "", "get_description"], [32, 5, 1, "", "get_doc_str"], [32, 5, 1, "", "get_prog"], [32, 3, 1, "", "module"], [32, 3, 1, "", "package"], [32, 3, 1, "", "parent"], [32, 3, 1, "", "path"], [32, 3, 1, "", "pkg_doc_str"], [32, 3, 1, "", "prog"], [32, 3, 1, "", "url"], [32, 3, 1, "", "usage"], [32, 3, 1, "", "version"]], "cli_command_parser.nargs": [[33, 2, 1, "", "Nargs"], [33, 1, 1, "", "nargs_min_and_max_sums"]], "cli_command_parser.nargs.Nargs": [[33, 3, 1, "", "allowed"], [33, 4, 1, "", "has_upper_bound"], [33, 3, 1, "", "max"], [33, 5, 1, "", "max_reached"], [33, 3, 1, "", "min"], [33, 3, 1, "", "range"], [33, 5, 1, "", "satisfied"], [33, 4, 1, "", "upper_bound"], [33, 3, 1, "", "variable"]], "cli_command_parser.nargs.Nargs.max_reached.params": [[33, 6, 1, "", "parsed_values"]], "cli_command_parser.parameters": [[35, 0, 0, "-", "actions"], [36, 0, 0, "-", "base"], [37, 0, 0, "-", "choice_map"], [38, 0, 0, "-", "groups"], [39, 0, 0, "-", "option_strings"], [40, 0, 0, "-", "options"], [41, 0, 0, "-", "pass_thru"], [42, 0, 0, "-", "positionals"]], "cli_command_parser.parameters.actions": [[35, 2, 1, "", "Append"], [35, 2, 1, "", "AppendConst"], [35, 2, 1, "", "BasicConstAction"], [35, 2, 1, "", "Concatenate"], [35, 2, 1, "", "ConstMixin"], [35, 2, 1, "", "Count"], [35, 2, 1, "", "ParamAction"], [35, 2, 1, "", "Store"], [35, 2, 1, "", "StoreAll"], [35, 2, 1, "", "StoreConst"], [35, 2, 1, "", "ValueMixin"]], "cli_command_parser.parameters.actions.Append": [[35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_value"], [35, 5, 1, "", "can_reset"], [35, 3, 1, "", "default_nargs"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 5, 1, "", "get_default"], [35, 5, 1, "", "get_maybe_poppable_counts"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.AppendConst": [[35, 5, 1, "", "add_const"], [35, 5, 1, "", "get_default"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.BasicConstAction": [[35, 3, 1, "", "accepts_consts"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.Concatenate": [[35, 5, 1, "", "add_value"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.ConstMixin": [[35, 5, 1, "", "__init_subclass__"], [35, 3, 1, "", "add_const"], [35, 5, 1, "", "add_env_value"], [35, 3, 1, "", "add_value"], [35, 5, 1, "", "append_const"], [35, 3, 1, "", "get_default"], [35, 3, 1, "", "param"], [35, 5, 1, "", "set_const"]], "cli_command_parser.parameters.actions.Count": [[35, 3, 1, "", "accepts_consts"], [35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_const"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.ParamAction": [[35, 5, 1, "", "__init_subclass__"], [35, 3, 1, "", "accepts_consts"], [35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_const"], [35, 5, 1, "", "add_env_value"], [35, 5, 1, "", "add_value"], [35, 5, 1, "", "can_reset"], [35, 3, 1, "", "default"], [35, 4, 1, "", "default_nargs"], [35, 5, 1, "", "finalize_default"], [35, 5, 1, "", "finalize_value"], [35, 5, 1, "", "get_default"], [35, 5, 1, "", "get_maybe_poppable_counts"], [35, 3, 1, "", "name"], [35, 3, 1, "", "param"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.ParamAction.add_value.params": [[35, 6, 1, "", "combo"], [35, 6, 1, "", "joined"], [35, 6, 1, "", "opt"], [35, 6, 1, "", "value"]], "cli_command_parser.parameters.actions.Store": [[35, 3, 1, "", "accepts_values"], [35, 5, 1, "", "add_value"], [35, 3, 1, "", "default"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"], [35, 5, 1, "", "would_accept"]], "cli_command_parser.parameters.actions.StoreAll": [[35, 5, 1, "", "add_values"], [35, 3, 1, "", "default_nargs"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.StoreConst": [[35, 5, 1, "", "add_const"], [35, 3, 1, "", "default"], [35, 3, 1, "", "name"]], "cli_command_parser.parameters.actions.ValueMixin": [[35, 5, 1, "", "append_value"], [35, 3, 1, "", "get_default"], [35, 3, 1, "", "param"], [35, 5, 1, "", "set_value"]], "cli_command_parser.parameters.base": [[36, 2, 1, "", "AllowLeadingDashProperty"], [36, 2, 1, "", "BaseOption"], [36, 2, 1, "", "BasePositional"], [36, 2, 1, "", "DefaultCallback"], [36, 2, 1, "", "ParamBase"], [36, 2, 1, "", "Parameter"]], "cli_command_parser.parameters.base.AllowLeadingDashProperty": [[36, 3, 1, "", "default"], [36, 3, 1, "", "name"]], "cli_command_parser.parameters.base.BaseOption": [[36, 3, 1, "", "const"], [36, 3, 1, "", "env_var"], [36, 5, 1, "", "env_vars"], [36, 5, 1, "", "get_const"], [36, 3, 1, "", "option_strs"], [36, 3, 1, "", "show_env_var"], [36, 3, 1, "", "strict_env"], [36, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.base.BaseOption.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "env_var"], [36, 6, 1, "", "kwargs"], [36, 6, 1, "", "name_mode"], [36, 6, 1, "", "option_strs"], [36, 6, 1, "", "strict_env"], [36, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.base.BasePositional": [[36, 5, 1, "", "__init_subclass__"]], "cli_command_parser.parameters.base.BasePositional.__init_subclass__.params": [[36, 6, 1, "", "default_ok"], [36, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.BasePositional.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.base.DefaultCallback": [[36, 5, 1, "", "__call__"], [36, 3, 1, "", "func"], [36, 3, 1, "", "use_cmd"]], "cli_command_parser.parameters.base.ParamBase": [[36, 3, 1, "", "command"], [36, 5, 1, "", "format_help"], [36, 5, 1, "", "format_usage"], [36, 4, 1, "", "formatter"], [36, 3, 1, "", "group"], [36, 3, 1, "", "help"], [36, 3, 1, "", "hide"], [36, 3, 1, "", "missing_hint"], [36, 4, 1, "", "name"], [36, 3, 1, "", "required"], [36, 4, 1, "", "show_in_help"]], "cli_command_parser.parameters.base.ParamBase.params": [[36, 6, 1, "", "help"], [36, 6, 1, "", "hide"], [36, 6, 1, "", "name"], [36, 6, 1, "", "required"]], "cli_command_parser.parameters.base.Parameter": [[36, 5, 1, "", "__init_subclass__"], [36, 3, 1, "", "allow_leading_dash"], [36, 3, 1, "", "default"], [36, 3, 1, "", "default_cb"], [36, 5, 1, "", "get_const"], [36, 5, 1, "", "get_env_const"], [36, 4, 1, "", "has_choices"], [36, 5, 1, "", "is_valid_arg"], [36, 3, 1, "", "metavar"], [36, 3, 1, "", "nargs"], [36, 5, 1, "", "prepare_value"], [36, 5, 1, "", "register_default_cb"], [36, 5, 1, "", "result"], [36, 3, 1, "", "show_default"], [36, 4, 1, "", "show_in_help"], [36, 3, 1, "", "strict_default"], [36, 3, 1, "", "type"], [36, 5, 1, "", "validate"]], "cli_command_parser.parameters.base.Parameter.__init_subclass__.params": [[36, 6, 1, "", "actions"], [36, 6, 1, "", "repr_attrs"]], "cli_command_parser.parameters.base.Parameter.params": [[36, 6, 1, "", "action"], [36, 6, 1, "", "cb_with_cmd"], [36, 6, 1, "", "default"], [36, 6, 1, "", "default_cb"], [36, 6, 1, "", "help"], [36, 6, 1, "", "hide"], [36, 6, 1, "", "metavar"], [36, 6, 1, "", "name"], [36, 6, 1, "", "required"], [36, 6, 1, "", "show_default"]], "cli_command_parser.parameters.base.Parameter.register_default_cb.params": [[36, 6, 1, "", "method"]], "cli_command_parser.parameters.choice_map": [[37, 2, 1, "", "Action"], [37, 2, 1, "", "Choice"], [37, 2, 1, "", "ChoiceMap"], [37, 2, 1, "", "SubCommand"]], "cli_command_parser.parameters.choice_map.Action": [[37, 5, 1, "", "__call__"], [37, 5, 1, "", "register"], [37, 5, 1, "", "register_action"]], "cli_command_parser.parameters.choice_map.Action.__call__.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "default"], [37, 6, 1, "", "help"], [37, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Action.register.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "default"], [37, 6, 1, "", "help"], [37, 6, 1, "", "method_or_choice"]], "cli_command_parser.parameters.choice_map.Choice": [[37, 3, 1, "", "choice"], [37, 5, 1, "", "format_help"], [37, 5, 1, "", "format_usage"], [37, 3, 1, "", "help"], [37, 3, 1, "", "local"], [37, 3, 1, "", "target"]], "cli_command_parser.parameters.choice_map.ChoiceMap": [[37, 5, 1, "", "__init_subclass__"], [37, 3, 1, "", "choices"], [37, 3, 1, "", "description"], [37, 4, 1, "", "has_choices"], [37, 3, 1, "", "nargs"], [37, 5, 1, "", "register_choice"], [37, 5, 1, "", "register_default_cb"], [37, 5, 1, "", "result"], [37, 4, 1, "", "show_in_help"], [37, 5, 1, "", "target"], [37, 3, 1, "", "title"], [37, 5, 1, "", "validate"]], "cli_command_parser.parameters.choice_map.ChoiceMap.__init_subclass__.params": [[37, 6, 1, "", "choice_validation_exc"], [37, 6, 1, "", "kwargs"], [37, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.ChoiceMap.params": [[37, 6, 1, "", "action"], [37, 6, 1, "", "description"], [37, 6, 1, "", "kwargs"], [37, 6, 1, "", "title"]], "cli_command_parser.parameters.choice_map.SubCommand": [[37, 4, 1, "", "has_local_choices"], [37, 5, 1, "", "register"], [37, 5, 1, "", "register_command"]], "cli_command_parser.parameters.choice_map.SubCommand.register.params": [[37, 6, 1, "", "choice"], [37, 6, 1, "", "command_or_choice"], [37, 6, 1, "", "help"]], "cli_command_parser.parameters.groups": [[38, 2, 1, "", "ParamGroup"]], "cli_command_parser.parameters.groups.ParamGroup": [[38, 5, 1, "", "add"], [38, 4, 1, "", "contains_positional"], [38, 4, 1, "", "contains_required"], [38, 3, 1, "", "description"], [38, 5, 1, "", "extend"], [38, 4, 1, "", "in_mutually_exclusive_group"], [38, 3, 1, "", "members"], [38, 3, 1, "", "mutually_dependent"], [38, 3, 1, "", "mutually_exclusive"], [38, 5, 1, "", "register"], [38, 5, 1, "", "register_all"], [38, 4, 1, "", "show_in_help"], [38, 5, 1, "", "validate"]], "cli_command_parser.parameters.groups.ParamGroup.params": [[38, 6, 1, "", "description"], [38, 6, 1, "", "hide"], [38, 6, 1, "", "mutually_dependent"], [38, 6, 1, "", "mutually_exclusive"], [38, 6, 1, "", "name"], [38, 6, 1, "", "required"]], "cli_command_parser.parameters.option_strings": [[39, 2, 1, "", "OptionStrings"], [39, 2, 1, "", "TriFlagOptionStrings"]], "cli_command_parser.parameters.option_strings.OptionStrings": [[39, 5, 1, "", "all_option_strs"], [39, 3, 1, "", "combinable"], [39, 4, 1, "", "display_long"], [39, 5, 1, "", "get_sets"], [39, 5, 1, "", "get_usage_opt"], [39, 5, 1, "", "has_long"], [39, 5, 1, "", "has_min_opts"], [39, 4, 1, "", "long"], [39, 3, 1, "", "name_mode"], [39, 5, 1, "", "option_strs"], [39, 4, 1, "", "short"], [39, 5, 1, "", "update"]], "cli_command_parser.parameters.option_strings.TriFlagOptionStrings": [[39, 5, 1, "", "add_alts"], [39, 5, 1, "", "all_option_strs"], [39, 4, 1, "", "alt_allowed"], [39, 5, 1, "", "alt_option_strs"], [39, 4, 1, "", "display_long_alt"], [39, 4, 1, "", "display_long_primary"], [39, 5, 1, "", "get_usage_opt"], [39, 5, 1, "", "has_long"], [39, 5, 1, "", "has_min_opts"], [39, 5, 1, "", "option_strs"], [39, 5, 1, "", "primary_option_strs"], [39, 4, 1, "", "short_alt"], [39, 4, 1, "", "short_primary"], [39, 5, 1, "", "update_alts"]], "cli_command_parser.parameters.options": [[40, 2, 1, "", "ActionFlag"], [40, 2, 1, "", "Counter"], [40, 2, 1, "", "Flag"], [40, 2, 1, "", "Option"], [40, 2, 1, "", "TriFlag"], [40, 3, 1, "", "action_flag"], [40, 1, 1, "", "after_main"], [40, 1, 1, "", "before_main"], [40, 1, 1, "", "help_action"]], "cli_command_parser.parameters.options.ActionFlag": [[40, 5, 1, "", "__call__"], [40, 4, 1, "", "func"]], "cli_command_parser.parameters.options.ActionFlag.params": [[40, 6, 1, "", "always_available"], [40, 6, 1, "", "before_main"], [40, 6, 1, "", "func"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "order"]], "cli_command_parser.parameters.options.Counter": [[40, 3, 1, "", "init"], [40, 3, 1, "", "nargs"], [40, 5, 1, "", "prepare_value"], [40, 5, 1, "", "register_default_cb"], [40, 3, 1, "", "type"], [40, 5, 1, "", "validate"]], "cli_command_parser.parameters.options.Counter.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "const"], [40, 6, 1, "", "default"], [40, 6, 1, "", "init"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"]], "cli_command_parser.parameters.options.Flag": [[40, 5, 1, "", "get_env_const"], [40, 3, 1, "", "nargs"], [40, 5, 1, "", "register_default_cb"], [40, 5, 1, "", "type"], [40, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.Flag.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "const"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "strict_env"], [40, 6, 1, "", "type"], [40, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.Option": [[40, 3, 1, "", "allow_leading_dash"]], "cli_command_parser.parameters.options.Option.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "allow_leading_dash"], [40, 6, 1, "", "choices"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "nargs"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "required"], [40, 6, 1, "", "type"]], "cli_command_parser.parameters.options.TriFlag": [[40, 3, 1, "", "alt_help"], [40, 3, 1, "", "consts"], [40, 5, 1, "", "get_const"], [40, 5, 1, "", "get_env_const"], [40, 3, 1, "", "nargs"], [40, 3, 1, "", "option_strs"], [40, 5, 1, "", "register_default_cb"], [40, 5, 1, "", "type"], [40, 3, 1, "", "use_env_value"]], "cli_command_parser.parameters.options.TriFlag.params": [[40, 6, 1, "", "action"], [40, 6, 1, "", "alt_help"], [40, 6, 1, "", "alt_long"], [40, 6, 1, "", "alt_prefix"], [40, 6, 1, "", "alt_short"], [40, 6, 1, "", "consts"], [40, 6, 1, "", "default"], [40, 6, 1, "", "kwargs"], [40, 6, 1, "", "name_mode"], [40, 6, 1, "", "option_strs"], [40, 6, 1, "", "strict_env"], [40, 6, 1, "", "type"], [40, 6, 1, "", "use_env_value"]], "cli_command_parser.parameters.pass_thru": [[41, 2, 1, "", "PassThru"]], "cli_command_parser.parameters.pass_thru.PassThru": [[41, 3, 1, "", "missing_hint"], [41, 3, 1, "", "nargs"]], "cli_command_parser.parameters.pass_thru.PassThru.params": [[41, 6, 1, "", "action"], [41, 6, 1, "", "kwargs"]], "cli_command_parser.parameters.positionals": [[42, 2, 1, "", "Positional"]], "cli_command_parser.parameters.positionals.Positional": [[42, 3, 1, "", "allow_leading_dash"]], "cli_command_parser.parameters.positionals.Positional.params": [[42, 6, 1, "", "action"], [42, 6, 1, "", "allow_leading_dash"], [42, 6, 1, "", "choices"], [42, 6, 1, "", "default"], [42, 6, 1, "", "kwargs"], [42, 6, 1, "", "nargs"], [42, 6, 1, "", "type"]], "cli_command_parser.parse_tree": [[43, 2, 1, "", "AnyWord"], [43, 2, 1, "", "PosNode"], [43, 1, 1, "", "process_param"], [43, 1, 1, "", "process_params"]], "cli_command_parser.parse_tree.AnyWord": [[43, 3, 1, "", "n"], [43, 3, 1, "", "nargs"], [43, 3, 1, "", "remaining"]], "cli_command_parser.parse_tree.PosNode": [[43, 4, 1, "", "any_node"], [43, 4, 1, "", "any_word"], [43, 5, 1, "", "build_tree"], [43, 5, 1, "", "has_any"], [43, 5, 1, "", "link_params"], [43, 3, 1, "", "links"], [43, 5, 1, "", "nargs_min_and_max"], [43, 3, 1, "", "param"], [43, 3, 1, "", "parent"], [43, 5, 1, "", "path_repr"], [43, 5, 1, "", "print_tree"], [43, 4, 1, "", "raw_path"], [43, 3, 1, "", "target"], [43, 5, 1, "", "update_node"], [43, 3, 1, "", "word"]], "cli_command_parser.parser": [[44, 2, 1, "", "CommandParser"], [44, 1, 1, "", "get_opt_prefix"], [44, 1, 1, "", "parse_args_and_get_next_cmd"]], "cli_command_parser.parser.CommandParser": [[44, 3, 1, "", "arg_deque"], [44, 3, 1, "", "config"], [44, 5, 1, "", "consume_values"], [44, 3, 1, "", "ctx"], [44, 3, 1, "", "deferred"], [44, 5, 1, "", "get_next_cmd"], [44, 5, 1, "", "handle_long"], [44, 5, 1, "", "handle_pass_thru"], [44, 5, 1, "", "handle_positional"], [44, 5, 1, "", "handle_remainder"], [44, 5, 1, "", "handle_short"], [44, 3, 1, "", "params"], [44, 5, 1, "", "parse_args_and_get_next_cmd"], [44, 3, 1, "", "positionals"]], "cli_command_parser.parser.CommandParser.consume_values.params": [[44, 6, 1, "", "found"], [44, 6, 1, "", "param"]], "cli_command_parser.testing": [[45, 2, 1, "", "AssertRaisesWithStringContext"], [45, 2, 1, "", "ParserTest"], [45, 2, 1, "", "RedirectStreams"], [45, 2, 1, "", "TemporaryDir"], [45, 1, 1, "", "format_dict_diff"], [45, 1, 1, "", "format_diff"], [45, 1, 1, "", "get_help_text"], [45, 1, 1, "", "get_rst_text"], [45, 1, 1, "", "get_usage_text"], [45, 1, 1, "", "load_command"], [45, 1, 1, "", "sealed_mock"]], "cli_command_parser.testing.AssertRaisesWithStringContext": [[45, 3, 1, "", "expected_exc"], [45, 3, 1, "", "expected_text"], [45, 3, 1, "", "msg"], [45, 3, 1, "", "test_case"]], "cli_command_parser.testing.ParserTest": [[45, 5, 1, "", "assert_argv_parse_fails_cases"], [45, 5, 1, "", "assert_call_fails"], [45, 5, 1, "", "assert_call_fails_cases"], [45, 5, 1, "", "assert_dict_equal"], [45, 5, 1, "", "assert_env_parse_results"], [45, 5, 1, "", "assert_env_parse_results_cases"], [45, 5, 1, "", "assert_parse_fails"], [45, 5, 1, "", "assert_parse_fails_cases"], [45, 5, 1, "", "assert_parse_results"], [45, 5, 1, "", "assert_parse_results_cases"], [45, 5, 1, "", "assert_raises_contains_str"], [45, 5, 1, "", "assert_str_contains"], [45, 5, 1, "", "assert_str_starts_with_line"], [45, 5, 1, "", "assert_strings_equal"], [45, 5, 1, "", "env_vars"]], "cli_command_parser.testing.RedirectStreams": [[45, 4, 1, "", "stderr"], [45, 4, 1, "", "stdout"]], "cli_command_parser.utils": [[47, 2, 1, "", "FixedFlag"], [47, 2, 1, "", "FixedFlagMeta"], [47, 2, 1, "", "MissingMixin"], [47, 2, 1, "", "Terminal"], [47, 1, 1, "", "camel_to_snake_case"], [47, 1, 1, "", "maybe_await"], [47, 1, 1, "", "positive_int"], [47, 1, 1, "", "short_repr"], [47, 1, 1, "", "str_to_bool"]], "cli_command_parser.utils.Terminal": [[47, 4, 1, "", "width"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method", "6": "py:parameter", "7": "py:exception", "8": "py:data"}, "terms": {"": [0, 3, 4, 5, 6, 13, 14, 16, 17, 20, 26, 33, 35, 36, 37, 40, 45, 48, 49, 50, 51, 57, 64, 65, 66, 68, 69, 70, 71], "0": [0, 6, 8, 11, 14, 17, 22, 30, 35, 40, 42, 43, 44, 47, 49, 51, 58, 65, 67, 69, 70, 71], "04": 66, "06": 66, "0x26dfa94fbb0": 0, "0x26dfcad6e00": 0, "1": [0, 5, 6, 15, 19, 21, 28, 29, 30, 31, 35, 40, 42, 43, 47, 48, 50, 51, 58, 61, 65, 66, 67, 68, 69, 70, 71], "10": [47, 62, 70], "100": [47, 48], "11": 47, "123": [67, 70], "127": 31, "15": 5, "16": [5, 31], "19": 58, "199": 45, "2": [0, 5, 6, 16, 22, 31, 40, 48, 49, 58, 65, 67, 69, 70, 71], "20": 21, "2023": 66, "23": 5, "27": 66, "29": 58, "3": [2, 5, 16, 17, 20, 22, 45, 47, 48, 49, 65, 66, 71], "30": [22, 49, 66], "32": [5, 31], "4": [5, 11, 15, 19, 21, 31, 37, 48, 65, 69], "42": 65, "456": 67, "484": 69, "49": 58, "5": [5, 71], "6": [67, 69], "64": 31, "7": [2, 47, 66, 67], "8": [2, 5, 15, 31, 50, 66], "8601": 67, "9": [2, 66], "97": 70, "A": [0, 3, 4, 5, 6, 8, 10, 14, 15, 20, 22, 24, 25, 28, 36, 38, 40, 42, 48, 49, 57, 65, 67, 69, 70, 71], "And": 65, "As": [0, 4], "At": [5, 67], "By": [5, 21, 27, 28, 40, 42, 48, 49, 50, 65, 67, 68, 69, 70], "For": [0, 4, 13, 15, 27, 33, 36, 48, 49, 51, 67, 69, 70], "If": [0, 4, 5, 6, 13, 14, 15, 20, 21, 22, 25, 27, 28, 29, 30, 36, 37, 38, 40, 42, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70], "In": [0, 4, 50, 51, 65, 67, 70], "It": [0, 3, 6, 14, 36, 37, 40, 49, 50, 65, 66, 67, 69, 70, 71], "NOT": [4, 5, 14, 40, 51, 69], "No": 5, "Not": [6, 24, 28, 30, 48, 67, 69, 70], "One": [29, 48, 51, 65, 67, 69], "That": [6, 22, 48, 69], "The": [0, 3, 4, 5, 6, 8, 14, 15, 16, 20, 21, 22, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 44, 48, 49, 50, 51, 53, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71], "There": [0, 48, 51, 66], "To": [4, 15, 20, 27, 29, 40, 42, 48, 50, 51, 66, 67, 68, 69, 70, 71], "With": 52, "_": [5, 47, 66, 68, 71], "__call__": [1, 4, 5, 14, 16, 23, 24, 25, 27, 28, 29, 30, 34, 36, 37, 40, 48, 49], "__class__": 67, "__dunder__": 48, "__exit__": 51, "__init__": [0, 4, 51, 57, 70], "__init_subclass__": [7, 8, 11, 18, 20, 23, 30, 34, 35, 36, 37], "__main__": [0, 48, 66, 67, 68, 70], "__name__": [48, 66, 67, 68, 70], "__set_name__": 39, "__sub_cmd": 0, "__subclasses__": 14, "_after_main_": [1, 4, 5, 14, 48, 49, 69], "_assertraisescontext": 45, "_bar_default_cb": 0, "_before_main_": [1, 4], "_choicesbas": 25, "_init_command_": [0, 1, 4, 7, 10], "_missing_": 67, "_pre_init_actions_": [1, 4, 48], "_subparsersact": 9, "_sunder_": 4, "ab": 65, "abbrevi": [23, 30, 67, 69], "abc": [0, 4, 11, 14, 15, 24, 27, 28, 29, 30, 35, 36, 40, 65, 70], "abcmeta": 14, "abl": [4, 48, 69, 70], "about": [0, 16, 29, 48, 49, 67, 68, 69], "abov": [0, 4, 15, 21, 33, 40, 48, 50, 66, 67, 68, 70, 71], "absolut": [27, 67], "abstract": [11, 24, 30, 35, 36], "abstractcontextmanag": [6, 45], "ac": [8, 11], "accept": [0, 5, 6, 24, 25, 27, 28, 33, 35, 36, 37, 40, 42, 49, 65, 67, 69], "accepts_const": [34, 35], "accepts_valu": [34, 35], "access": [5, 6, 36, 67, 71], "accomplish": 70, "accur": 30, "across": 57, "act": 69, "action": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 20, 34, 36, 37, 40, 41, 42, 48, 49, 51, 52, 57, 62, 63, 65, 66, 71], "action_a": 65, "action_after_action_flag": [1, 5, 14, 49], "action_b": 65, "action_c": 65, "action_d": 65, "action_flag": [0, 1, 3, 4, 5, 14, 34, 40, 48, 49], "action_flag_count": [1, 6], "action_i": 65, "action_w": 65, "action_with_arg": [53, 69], "action_x": 65, "action_z": 65, "actionflag": [1, 3, 4, 6, 34, 40, 48, 50, 65], "actionphas": [1, 6], "activ": [6, 17, 44], "actual": [24, 45, 71], "ad": [0, 5, 13, 14, 36, 40, 49, 50, 51, 65, 66, 67, 68, 69], "add": [18, 20, 21, 34, 38, 39, 40, 50, 57, 69], "add_alt": [34, 39], "add_argu": [7, 8, 68, 69], "add_argument_group": [7, 8, 9], "add_child": 8, "add_const": [34, 35], "add_dict_row": [18, 21], "add_env_valu": [34, 35], "add_head": 21, "add_help": [1, 5, 7, 9, 11, 14, 49, 50], "add_kv_row": [18, 21], "add_method": [7, 10, 11], "add_mutually_exclusive_group": [7, 8, 9, 65], "add_pars": [7, 8, 9], "add_row": [18, 21], "add_subpars": [7, 8, 9], "add_valu": [34, 35], "addit": [15, 27, 36, 37, 40, 41, 42, 48, 51, 57, 66, 67, 69, 70, 71], "addition": [0, 33, 49, 70], "addvisitedchild": [1, 7, 8], "adjust": [28, 48, 50, 67], "admin": [57, 62, 65], "advanc": [17, 33, 52, 68], "advanced_subcommand": [54, 70], "advantag": [0, 48, 70], "affect": [6, 21, 48, 49, 50], "after": [0, 3, 4, 5, 6, 16, 38, 40, 48, 49, 67, 68, 69], "after_main": [0, 1, 4, 6, 34, 40, 48, 65, 69], "again": [68, 70], "against": [45, 67], "alia": [1, 5, 8, 11, 20, 28, 40, 62], "alias": [5, 8, 9, 13, 20, 46, 49, 70], "all": [3, 4, 5, 6, 14, 15, 17, 19, 20, 25, 29, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 57, 59, 62, 65, 66, 67, 69, 70], "all_action_flag": [1, 6], "all_option_str": [34, 39], "all_posit": [1, 3], "allow": [0, 1, 4, 5, 6, 14, 15, 21, 25, 27, 28, 30, 33, 37, 38, 40, 42, 48, 49, 65, 66, 67, 69], "allow_abbrev": 9, "allow_annotation_typ": [1, 5, 49], "allow_argv_prog": [1, 6], "allow_backtrack": [1, 5, 49], "allow_dash": [23, 27, 67], "allow_inherit": 32, "allow_leading_dash": [34, 36, 40, 42, 69], "allow_miss": [1, 5, 14, 49], "allow_sys_argv": [19, 32], "allowleadingdash": [1, 5, 36, 40, 42, 69], "allowleadingdashproperti": [1, 34, 36], "allows_writ": [1, 23, 31], "almost": 48, "alon": 5, "along": [40, 69, 70], "alreadi": [4, 5, 6, 15, 27, 44, 48, 67], "also": [0, 3, 33, 36, 37, 38, 40, 48, 49, 50, 65, 67, 68, 69, 70, 71], "alt": [20, 39], "alt_allow": [34, 39], "alt_help": [34, 40, 69], "alt_long": [40, 69], "alt_option_str": [34, 39], "alt_prefix": [40, 69], "alt_short": [40, 69], "altern": [0, 4, 5, 20, 30, 39, 40, 49, 51, 67, 69], "alwai": [0, 1, 5, 14, 36, 40, 42, 49, 65, 69], "always_avail": [4, 40, 48, 50, 69], "always_run_after_main": [1, 5, 14, 48, 49, 69], "ambigu": [5, 17, 49], "ambiguous_short_combo": [1, 5, 17, 49], "ambiguouscombo": [1, 17], "ambiguouscombomod": [1, 5, 17, 49], "ambiguousparsetre": [1, 5, 17, 49], "ambiguousshortform": [1, 17], "amount": [40, 66, 69], "an": [0, 3, 4, 5, 6, 8, 10, 13, 14, 15, 16, 17, 20, 21, 22, 25, 28, 30, 36, 37, 38, 40, 42, 48, 49, 50, 51, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71], "analog": 48, "anchor": [29, 67], "ani": [0, 1, 3, 4, 5, 6, 13, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 49, 50, 51, 57, 61, 65, 67, 68, 69, 70, 71], "annot": [1, 5, 40, 42, 48, 49, 69], "anoth": [0, 5, 49, 50, 67, 70], "any_nod": [1, 43], "any_word": [1, 43], "anyconfig": [6, 14], "anyth": [48, 71], "anywher": 48, "anyword": [1, 43], "api": [0, 48, 52, 66, 70], "apiwrapp": [65, 70], "appear": [0, 36, 38, 40, 42, 50, 65, 69, 70], "append": [1, 20, 21, 34, 35, 36, 37, 40, 42, 65, 69], "append_const": [34, 35, 40, 69], "append_valu": [34, 35], "appendconst": [1, 34, 35], "appli": [15, 22, 50, 65], "applic": [0, 4, 30, 67], "approach": [48, 51, 67], "appropri": [29, 67], "ar": [0, 4, 5, 6, 13, 14, 15, 20, 25, 27, 28, 29, 30, 33, 36, 37, 38, 40, 42, 48, 49, 50, 51, 57, 65, 66, 67, 68, 69, 70, 71], "arbitrari": [38, 65, 69], "arg": [4, 6, 7, 8, 9, 11, 21, 25, 36, 41, 44, 45, 47, 48, 52], "arg_dequ": [1, 44], "argcollect": [1, 7, 8, 11], "arggroup": [1, 7, 8, 11], "argpars": [9, 10, 33, 49, 65, 66, 68, 69], "argparse_ast": [1, 7], "argparse_util": [1, 7], "argument": [4, 5, 6, 14, 15, 16, 17, 20, 21, 24, 25, 27, 28, 36, 37, 38, 40, 41, 42, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "argument_default": [8, 9], "argumentpars": [1, 7, 8, 9, 10, 69], "argv": [0, 4, 6, 14, 45, 48, 49, 68], "aris": 70, "around": [2, 16, 47, 50, 51, 70], "as_dict": [1, 5], "as_posix": 69, "asctim": [48, 70], "assert_argv_parse_fails_cas": [1, 45], "assert_call_fail": [1, 45], "assert_call_fails_cas": [1, 45], "assert_dict_equ": [1, 45], "assert_env_parse_result": [1, 45], "assert_env_parse_results_cas": [1, 45], "assert_parse_fail": [1, 45], "assert_parse_fails_cas": [1, 45], "assert_parse_result": [1, 45], "assert_parse_results_cas": [1, 45], "assert_raises_contains_str": [1, 45], "assert_str_contain": [1, 45], "assert_str_starts_with_lin": [1, 45], "assert_strings_equ": [1, 45], "assertdictequ": 71, "assertequ": 71, "assertrais": 71, "assertraiseswithstringcontext": [1, 45], "assign": [6, 13, 36, 39, 40, 69], "associ": [3, 4, 6, 19, 20, 37, 69], "ast": [8, 12, 13, 66], "ast_cl": 8, "ast_obj": [7, 11], "astargumentpars": [1, 7, 8, 11], "astcal": [1, 7, 8], "astunpars": 66, "async": [4, 47, 48], "asynccommand": [1, 4, 48], "asynchron": [4, 48], "asyncio": 4, "attempt": [6, 10, 13, 15, 17, 24, 28, 31, 67], "attr": [2, 8, 63], "attr_nam": [7, 11], "attribut": [0, 3, 5, 13, 36, 49, 68, 69, 71], "author": [2, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57], "auto": [0, 14, 27, 31, 49, 67], "auto_head": 21, "automat": [0, 5, 9, 28, 29, 36, 37, 40, 48, 49, 50, 51, 66, 67, 68, 69], "automodul": 15, "avail": [37, 40, 48, 49, 50, 67, 69, 70, 71], "avoid": [0, 16, 45, 48, 65, 68, 70], "await": [4, 47], "awar": [48, 57, 70], "b": [0, 45, 48, 60, 62, 64, 65, 67, 69, 70, 71], "babel": [30, 67], "back": [38, 49], "backport": 66, "backtrack": [1, 5, 6, 17, 49], "backup": [0, 69], "backup_dir": 69, "backup_rst": 0, "bad": 67, "badargu": [1, 17, 67], "bar": [0, 5, 18, 21, 40, 48, 52, 64, 65, 67, 69, 70], "base": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 57, 66, 67, 68, 69, 70], "basearg": [1, 7, 11], "basecommand": 48, "baseexcept": [16, 45], "baseopt": [1, 3, 17, 19, 20, 34, 36, 39, 40], "baseposit": [1, 3, 19, 20, 34, 36, 37, 42, 43, 44], "bash": [27, 31, 67], "basi": 49, "basic": [5, 49, 50, 52, 65, 66, 68, 70], "basic_const_act": 35, "basic_subcommand": [55, 70], "basicconfig": [48, 70], "basicconstact": [1, 34, 35], "baz": [0, 48, 52, 65, 69, 70], "becaus": [0, 14, 30, 65, 66, 70], "been": [0, 4, 33, 38, 39, 49, 71], "befor": [0, 3, 4, 5, 15, 16, 21, 24, 25, 28, 36, 38, 40, 48, 67, 69], "before_main": [0, 1, 4, 6, 34, 40, 48, 50, 65, 69], "begin": [5, 21, 29, 31, 40, 42, 49, 50, 67, 69], "behav": [2, 28, 35, 49, 67], "behavior": [5, 6, 15, 28, 36, 47, 48, 51, 67, 69], "being": [0, 5, 13, 14, 22, 48, 49, 51, 69, 71], "below": [21, 33, 49, 50, 65], "benefit": 48, "best": [5, 49], "better": [37, 48, 69], "between": [3, 5, 31, 47, 48, 49, 51, 67, 69], "binari": 67, "binaryio": 27, "block": [5, 23, 31, 38, 49, 65], "bob": [66, 71], "bodi": 21, "boilerpl": [10, 66], "bool": [2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 47, 69], "boolean": [5, 40, 69], "boolformattermap": 20, "both": [0, 1, 4, 5, 14, 20, 27, 36, 40, 42, 48, 49, 50, 65, 67, 69, 70, 71], "both_dash": [1, 5], "both_underscor": [1, 5], "bound": [28, 67, 69], "boundari": [5, 6, 29, 30, 31, 47], "box": [5, 50], "bracket": 20, "break": 47, "brief": [36, 38, 69], "broken": [5, 51], "brokenpipeerror": [16, 51], "browser": 0, "bug": 51, "build": [0, 40, 50, 69], "build_dir": 69, "build_doc": [0, 50], "build_tre": [1, 43], "builddoc": 0, "built": [20, 47], "builtin": [28, 48, 67], "byte": [27, 45], "c": [0, 11, 58, 60, 61, 65, 66, 68, 69, 70, 71], "cache_tim": 47, "calcul": [28, 37, 69, 70], "calendar": 30, "calendarunitinput": [1, 23, 30], "call": [0, 4, 5, 6, 8, 13, 14, 15, 16, 24, 25, 27, 28, 29, 36, 37, 38, 39, 40, 42, 45, 48, 49, 51, 67, 68, 69, 70, 71], "callabl": [0, 5, 6, 8, 13, 16, 27, 28, 32, 35, 36, 37, 40, 42, 45, 47, 49, 67, 69], "callback": [0, 36, 69], "camel": 49, "camel_to_snake_cas": [1, 47], "camelcas": [15, 37], "can": [0, 4, 5, 6, 8, 10, 15, 35, 36, 37, 40, 48, 49, 50, 51, 54, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71], "can_reset": [34, 35], "cannot": [0, 6, 15, 25, 36, 38, 49, 65, 67, 69], "canon": [13, 20], "caption": 15, "captur": [29, 67], "case": [0, 4, 14, 15, 17, 25, 29, 31, 33, 35, 37, 38, 40, 45, 48, 49, 51, 57, 65, 67, 69, 70, 71], "case_sensit": [25, 67], "cast": 69, "cat": 67, "catch": [16, 51], "categor": 6, "categori": [50, 69], "categorized_action_flag": [1, 6], "caught": [51, 66], "caus": [16, 17, 27, 30, 67, 70], "cb": 13, "cb_with_cmd": [36, 69], "cd": 65, "certain": 17, "chain": 69, "chang": [47, 48, 69], "char": [5, 21, 35], "charact": [3, 5, 6, 15, 17, 21, 23, 31, 49, 50, 66, 69], "check": [0, 3, 21, 27, 29, 36, 45, 46, 49, 67, 69, 71], "check_cal": 69, "child_cl": [7, 8], "children": 8, "choic": [1, 5, 7, 11, 14, 17, 18, 20, 23, 26, 30, 34, 37, 38, 40, 42, 49, 58, 62, 65, 69, 70], "choice_delim": [1, 5, 24, 28, 29, 30, 49], "choice_group": [18, 20], "choice_map": [1, 34], "choice_str": [18, 20, 23, 30], "choice_validation_exc": 37, "choicegroup": [1, 18, 20], "choicemap": [1, 20, 23, 25, 34, 37], "choicemaphelpformatt": [1, 18, 20], "choicestyp": [40, 42], "choos": [58, 70], "chosen": 37, "chr": 70, "cl": 14, "clarifi": 50, "class": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "classmethod": [4, 6, 8, 11, 14, 16, 20, 21, 29, 30, 32, 35, 36, 37, 43, 44, 48], "claus": 48, "clean": [0, 20, 66], "cleanup": 69, "clear": 69, "clearer": 69, "cli": [1, 4, 5, 6, 7, 14, 35, 36, 40, 48, 49, 51, 61, 67, 68, 69, 70], "cli_command_pars": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 66, 67, 68, 70, 71], "close": [23, 31, 67], "closer": 28, "cls_handler": [1, 16], "clutter": 5, "cmd": [0, 45, 71], "cmd_alias_mod": [1, 5, 20, 49], "cmd_cl": 45, "cmd_modul": [1, 32], "cmd_name": [32, 45], "cmd_option_str": [7, 11], "cmd_path": 32, "cmdaliasmod": 20, "code": [1, 4, 17, 48, 66], "collect": [0, 3, 5, 6, 8, 13, 15, 17, 25, 26, 29, 30, 33, 36, 37, 39, 41, 67, 69, 70], "collection_cont": [1, 7, 12], "collectionconvert": [1, 7, 11], "column": [5, 21, 22, 49, 50], "com": 66, "combin": [1, 5, 14, 17, 20, 22, 34, 35, 37, 38, 39, 40, 49, 50, 66, 68, 69, 71], "combine_and_wrap": [18, 22], "combo": [17, 35, 49, 65, 69], "combo_option_map": [1, 3], "command": [0, 1, 3, 5, 6, 10, 14, 15, 16, 17, 18, 32, 34, 35, 36, 37, 40, 42, 43, 45, 50, 51, 52, 57, 61, 65, 67, 68, 69, 70], "command_build": [1, 7], "command_cl": [2, 6], "command_formatt": [1, 5, 49], "command_or_choic": 37, "command_par": [1, 3], "command_paramet": 1, "command_wrapp": [56, 69], "commandani": [14, 19], "commandarg": [1, 7, 11], "commandcl": [3, 14, 15, 19, 36, 43, 45], "commandconfig": [1, 3, 5, 6, 14, 20, 36, 44, 49, 51, 69], "commanddefinitionerror": [1, 17], "commandhelpformatt": [1, 3, 5, 18, 19, 49], "commandmeta": [1, 14], "commandmethod": 40, "commandobj": [4, 6, 35, 36, 37], "commandparamet": [0, 1, 3, 5, 6, 14, 19, 44, 49], "commandpars": [1, 44], "commandparserexcept": [1, 16, 17, 26, 51], "commandtyp": [5, 6, 19, 32, 37, 44], "common": [0, 4, 6, 10, 48, 51, 57, 62, 65, 66, 67, 69], "compar": 50, "compat": [2, 5], "compil": [29, 67], "complet": [27, 31, 48, 67], "complex": [52, 66, 68], "complex_exampl": 57, "complic": 22, "concaten": [1, 34, 35, 37], "condit": 69, "config": [1, 3, 6, 14, 17, 39, 44, 49, 50], "config_item": [1, 5], "configitem": [1, 5], "configur": [0, 4, 5, 6, 20, 36, 40, 48, 50, 67, 69], "conflict": [0, 3, 48, 65, 68, 70], "conflict_handl": [8, 9], "conform": 27, "connect": [62, 65, 70], "consid": [20, 51], "const": [0, 7, 11, 34, 35, 36, 40, 69], "constant": [35, 36, 40, 69], "constmixin": [1, 34, 35], "consum": 44, "consume_valu": [1, 44], "cont_ind": [18, 19, 22], "contact": [48, 61, 71], "contain": [0, 5, 6, 10, 14, 15, 17, 20, 21, 29, 36, 37, 39, 40, 42, 45, 49, 50, 51, 58, 65, 67, 68, 69, 70], "contains_posit": [34, 38], "contains_requir": [34, 38], "content": [15, 19, 21, 50, 67], "content_fmt": 21, "content_subdir": 15, "context": [1, 3, 4, 5, 16, 17, 28, 30, 38, 44, 65, 67, 71], "contextlib": 71, "contextmanag": 45, "contextproxi": [1, 6], "continu": [0, 4, 22], "control": [4, 16, 36, 48, 49, 50, 70], "conveni": [0, 4, 36, 45, 48, 49, 67, 70], "convers": [1, 8, 9, 10, 11, 12, 13, 24, 26, 28, 66], "conversionerror": [1, 7, 11], "convert": [1, 7, 10, 11, 23, 24, 27, 28, 31, 37, 67], "convert_script": [1, 7, 11], "convertergroup": [1, 7, 11], "copi": [1, 16, 69], "core": [1, 4], "coroutin": [4, 48], "correct": [28, 50, 67], "correctli": [17, 66], "correspond": 65, "could": [4, 5, 20, 57, 67], "count": [1, 4, 6, 11, 33, 34, 35, 40, 61, 66, 68, 69, 71], "counter": [0, 1, 5, 6, 11, 34, 36, 40, 48, 49, 65, 70], "creat": [6, 15, 27, 67, 69], "creation": 5, "criteria": 70, "ctx": [0, 1, 3, 4, 6, 44, 48], "current": [6, 13, 31, 66, 70], "currentmodul": 15, "custom": [14, 24, 25, 26, 27, 28, 29, 30, 36, 40, 42, 49, 51, 52, 66, 67], "custom_input": [58, 67, 71], "customiz": 69, "cv": 5, "d": [0, 5, 8, 48, 57, 60, 62, 65, 70], "d1": 45, "d2": 45, "dai": [1, 23, 30], "dash": [1, 3, 5, 27, 40, 42, 49, 67, 69], "data": [21, 27, 31, 67], "date": [1, 23, 30, 48], "datetim": [1, 23, 30], "datetimeinput": [1, 23, 30], "de": [27, 67], "dead": 14, "deal": 0, "debug": [48, 70], "decim": 67, "decor": [0, 4, 36, 37, 40, 48, 51, 69], "dedup": 10, "deep": 65, "def": [0, 48, 50, 51, 65, 66, 67, 68, 69, 70, 71], "default": [1, 4, 5, 6, 7, 8, 11, 14, 15, 16, 20, 21, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 48, 49, 50, 51, 57, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71], "default_cb": [0, 34, 36, 40, 42, 69], "default_help": 37, "default_mod": 20, "default_narg": [34, 35], "default_ok": 36, "defaultcallback": [1, 34, 36], "defaultfunc": [36, 42], "defer": [1, 44], "defin": [0, 3, 4, 5, 14, 15, 16, 17, 26, 35, 36, 37, 38, 39, 40, 42, 49, 50, 57, 65, 66, 67, 68, 69, 70, 71], "definit": [3, 8], "deleg": 37, "delim": [18, 19, 20, 22, 47], "delimit": [5, 22, 49], "demonstr": [50, 65], "depend": [0, 5, 14, 28, 37, 38, 48, 49, 60, 64, 66, 67, 68, 69], "depth": [5, 15, 21, 49], "dequ": 44, "descendant_arg": [7, 11], "describ": 48, "descript": [0, 1, 5, 7, 8, 9, 11, 14, 20, 22, 32, 34, 36, 37, 38, 48, 49, 50, 57, 65, 66, 68, 69, 70, 71], "descriptor": [36, 66], "deseri": 67, "desir": [24, 27, 48, 50, 51, 67, 69, 70], "dest": [8, 9], "detail": 49, "detect": [4, 5, 40, 42, 49, 50, 69], "determin": [6, 13, 24, 28, 36, 37, 40, 69, 70], "dev": [62, 65, 70], "develop": 48, "dict": [0, 5, 6, 8, 14, 15, 16, 21, 23, 25, 29, 32, 37, 43, 45, 49, 67, 71], "dictionari": [6, 29, 49], "did": [6, 36, 38, 40, 48, 65], "diff_lin": 45, "differ": [0, 20, 33, 37, 40, 49, 50, 51, 67, 69, 70], "different_local": [1, 23, 30], "differenti": 69, "dir": [0, 23, 27, 31, 45, 67], "direct": [0, 4, 14, 15, 21, 28, 48, 65], "directli": [0, 36, 37, 48, 51, 67, 69, 71], "directori": [0, 15, 27, 45, 67, 69, 70], "disabl": [10, 14, 49, 50, 51, 69, 71], "discov": [15, 20, 35, 44, 48], "displai": [5, 14, 21, 37, 40, 49, 65, 69, 70], "display_long": [34, 39], "display_long_alt": [34, 39], "display_long_primari": [34, 39], "dist": 32, "dist_for_obj": [1, 32], "dist_for_pkg": [1, 32], "distinct": [37, 68, 69, 70], "distribut": [1, 31, 32], "distributionfind": [1, 32], "do": [0, 4, 10, 14, 15, 37, 48, 65, 67, 69, 70, 71], "doc": 0, "doc_nam": [1, 14, 15, 32, 49], "doc_str": [1, 32], "docs_url": [1, 7, 11, 32], "docstr": [5, 49, 50, 69], "document": [0, 5, 14, 20, 21, 22, 32, 48, 68], "document_modul": [1, 15], "document_packag": [1, 15], "document_script": [1, 15], "doe": [2, 4, 14, 16, 17, 21, 26, 29, 30, 31, 36, 37, 40, 48, 49, 51, 67, 69, 70, 71], "doesn": 67, "don": [48, 66, 70], "done": 67, "doubl": [0, 5, 53, 69], "doug": [2, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57], "draw": 5, "drive": [31, 67], "drop": 48, "dry": [0, 57, 62, 65, 68], "dry_run": [0, 7, 10, 15, 65], "dskrypa": 66, "dt": 30, "dt_repr": [1, 23, 30], "dt_type": [23, 30], "dtformatmod": [1, 23, 30, 67], "dtinput": [1, 23, 30], "due": [0, 15, 50, 51], "dump": [27, 67], "dure": [4, 6, 24, 28, 29, 36, 37, 38, 48, 49, 67, 70], "dv": 5, "dynamic_metadata": [1, 32], "dynamicconfigitem": [1, 5], "dynamicmetadata": [1, 32], "e": [0, 6, 16, 29, 36, 37, 38, 40, 48, 50, 62, 65, 67, 69, 70], "each": [0, 5, 14, 15, 20, 21, 22, 48, 49, 50, 53, 65, 66, 67, 68, 69, 70], "eagerli": 67, "earlier": 67, "earliest": [23, 30, 67], "easi": [66, 67], "easier": [0, 4, 6, 9, 67], "easili": [50, 51, 66, 67], "echo": [48, 52, 53, 67, 69], "effect": [4, 42, 69], "effort": [5, 49], "either": [0, 4, 35, 36, 40, 48, 49, 65, 67, 69, 70], "elif": 67, "els": [48, 65, 67, 70], "email": [1, 5, 7, 11, 32, 49], "emit": 21, "empti": [5, 15, 30, 42, 67, 69], "enabl": [0, 5, 36, 48, 49, 64, 67, 69], "encod": [15, 23, 27, 30, 31, 67], "encount": [5, 14, 15, 49], "end": [16, 29, 66, 67, 69], "endregion": 70, "enforc": [5, 49, 50, 65, 66], "enough": [14, 49], "ensur": [65, 71], "entir": [5, 49, 65, 67], "entireti": 49, "entri": [0, 4, 20, 21, 22, 48, 51, 57, 70], "entry_point": 49, "enum": [5, 6, 25, 29, 30, 47, 48, 49, 67], "enumchoic": [1, 23, 25], "enumer": 67, "enumt": 25, "enumtyp": 47, "env": [5, 36, 45, 62, 65, 69, 70], "env_var": [1, 34, 35, 36, 40, 45, 69], "envcas": 45, "environ": [0, 6, 35, 36, 40, 49, 62, 65, 69, 70], "epilog": [1, 5, 7, 9, 11, 14, 32, 48, 49, 50, 71], "equal": 67, "equival": [5, 49, 68, 69], "error": [4, 5, 9, 14, 15, 16, 17, 23, 26, 27, 31, 48, 66, 67, 70, 71], "error_handl": [1, 4, 5, 14, 49, 51], "errorhandl": [1, 4, 5, 6, 14, 16, 49, 51], "escap": [37, 70], "etc": [0, 5, 6, 15, 20, 27, 36, 40, 42, 49, 68, 69], "evalu": [25, 38, 67, 69], "even": [0, 4, 5, 14, 40, 49, 62, 66, 68, 69, 70], "event": [4, 48], "everi": [20, 22, 40, 42], "everyth": 51, "exact": 5, "exactli": 69, "exampl": [0, 27, 48, 50, 51, 61, 67, 68, 69, 70, 71], "example_out": 67, "exc": [16, 45, 51], "exc_cl": [1, 16], "exc_handler_map": [1, 16], "exc_typ": 16, "exccas": 45, "exce": [5, 33, 49, 50], "exceed": [33, 67], "except": [1, 4, 5, 11, 14, 16, 23, 28, 36, 37, 38, 40, 45, 48, 49, 51, 65, 66, 67, 69, 71], "exclud": [0, 3, 6], "exclus": [5, 17, 28, 38, 49, 57, 58, 60, 62, 67, 68], "exctyp": 45, "execut": [0, 6, 35, 37, 40, 69, 70, 71], "exist": [0, 4, 6, 15, 23, 27, 31, 48, 49, 67, 69, 70], "exit": [0, 1, 16, 17, 40, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "exit_on_error": 9, "expand": [23, 27, 67], "expect": [16, 25, 27, 38, 40, 42, 45, 47, 48, 57, 67, 69, 70, 71], "expected_exc": [1, 45], "expected_exc_msg": 45, "expected_pattern": 45, "expected_text": [1, 45], "experi": 48, "experiment": 49, "explan": 66, "explicit": [5, 22, 37, 40, 49, 68, 69], "explicitli": [4, 5, 20, 29, 36, 37, 40, 51, 67, 68, 69], "expr": [11, 12, 13], "express": [29, 67], "ext": 15, "extend": [4, 14, 15, 16, 32, 34, 36, 37, 38, 40, 42, 47, 48, 67, 70], "extended_epilog": [1, 5, 49], "extended_error_handl": [1, 16, 49, 51], "extens": [15, 69], "extra": [48, 66], "extract": 2, "f": [0, 22, 48, 50, 51, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71], "face": 51, "facilit": [16, 67], "fact": [5, 49, 51], "factor": 64, "fail": [0, 26, 36, 40, 69], "fake": [48, 61, 70, 71], "fall": 67, "fals": [0, 4, 5, 6, 8, 9, 11, 14, 15, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 65, 67, 69, 71], "falsei": [40, 51, 69], "far": [4, 33], "fbar": 69, "featur": 67, "field": [1, 5, 57], "fifo": [23, 31], "file": [0, 1, 10, 13, 14, 15, 23, 31, 49, 50, 51, 58, 68], "fileinput": [1, 23, 27], "filewrapp": [1, 23, 27, 31, 67], "filter": [0, 6, 15, 62, 65], "filtered_command": [1, 15], "final": [4, 5, 7, 11, 36, 37, 48, 49], "finalize_default": [34, 35], "finalize_valu": [34, 35], "find": [14, 48, 52, 65, 70], "find_object": [65, 70], "findbar": 70, "findbaz": [65, 70], "findfoo": 70, "fine": 50, "first": [4, 5, 14, 20, 21, 27, 37, 40, 50, 68, 69], "fit": 6, "fix": [27, 49, 67], "fix_default": [23, 24, 27, 28, 29, 30], "fix_nam": [15, 19], "fix_name_func": [15, 19], "fix_windows_path": [1, 23, 27, 31, 67], "fixedflag": [1, 5, 31, 47], "fixedflagmeta": [1, 47], "flag": [0, 1, 3, 5, 6, 29, 34, 35, 36, 40, 42, 47, 48, 49, 52, 65, 67, 68, 70], "flagarg": [1, 7, 11], "flask": 6, "flexibl": [67, 69], "float": [28, 30, 33, 40, 43, 47, 58, 67, 69], "fnmatch": [29, 67, 70], "follow": [0, 4, 5, 14, 20, 36, 49, 50, 57, 65, 66, 67, 68, 69, 70], "foo": [0, 5, 22, 36, 40, 48, 50, 51, 52, 64, 65, 67, 68, 69, 70], "foo_bar": [5, 67, 70], "foobar": [69, 70], "footer": 50, "for_ast_cal": [7, 11], "for_command": [1, 32], "for_param_cl": [18, 20], "for_prog": [1, 6], "form": [5, 17, 40, 49, 68, 69], "format": [1, 7, 11, 15, 19, 20, 21, 22, 23, 30, 36, 48, 49, 66, 67, 70], "format_al": [7, 11], "format_basic_usag": [18, 20], "format_descript": [18, 20], "format_dict_diff": [1, 45], "format_diff": [1, 45], "format_epilog": [1, 32], "format_help": [18, 19, 20, 34, 36, 37], "format_help_entri": [1, 18, 22], "format_lin": [7, 11], "format_memb": [7, 11], "format_metavar": [18, 20, 23, 24, 28, 29, 30], "format_rst": [18, 19], "format_str": 20, "format_usag": [18, 19, 20, 34, 36, 37], "formatt": [1, 3, 19, 20, 22, 34, 36], "formatter_class": 9, "found": [4, 14, 35, 44, 51, 65, 68], "freedom": 48, "from": [0, 2, 5, 6, 13, 14, 15, 20, 29, 30, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "from_cal": 9, "from_collect": 2, "from_dict": [18, 21], "from_kwarg": [7, 11], "from_union": 2, "fromfile_prefix_char": 9, "frozenset": 33, "fulfil": 49, "full": [5, 20, 23, 29, 30, 51, 70], "fulli": [13, 27, 67], "func": [0, 1, 7, 8, 13, 32, 34, 36, 40, 45, 47, 69], "function": [0, 4, 6, 8, 14, 15, 27, 31, 36, 37, 40, 42, 47, 48, 51, 66, 67, 68, 69, 70], "further": [37, 48, 51, 67, 70], "fuzzili": 13, "g": [0, 36, 50, 62, 65], "garbl": 50, "gather": [6, 71], "gener": [0, 4, 5, 8, 11, 14, 15, 19, 20, 24, 29, 36, 37, 40, 48, 66, 67, 68, 69, 70], "get": [6, 19, 66], "get_annotation_value_typ": [1, 2], "get_arg": [1, 2], "get_cls_and_kwarg": [7, 11], "get_config": [1, 14], "get_const": [34, 36, 40], "get_context": [1, 6], "get_current_context": [1, 6], "get_default": [34, 35], "get_descript": [1, 32], "get_descriptor_value_typ": [1, 2], "get_doc_str": [1, 32], "get_env_const": [34, 36, 40], "get_error_handl": [1, 6], "get_formatt": [1, 18, 19], "get_help_text": [1, 45], "get_maybe_poppable_count": [34, 35], "get_metadata": [1, 14], "get_miss": [1, 6], "get_name_repr": [1, 7, 12], "get_next_cmd": [1, 44], "get_opt_prefix": [1, 44], "get_or_create_context": [1, 6], "get_par": [1, 14, 32], "get_param": [1, 14], "get_pars": [0, 1, 6, 71], "get_parsed_valu": [1, 6], "get_pos_arg": [7, 11], "get_positionals_to_pars": [1, 3], "get_prog": [1, 32], "get_raw_arg": [0, 1, 6], "get_rst_text": [1, 45], "get_set": [34, 39], "get_top_level_command": [1, 14], "get_tracked_ref": [7, 8, 13], "get_url": [1, 32], "get_usage_opt": [34, 39], "get_usage_sub_cmd": [1, 18, 19], "get_usage_text": [1, 45], "get_valu": [1, 32], "git": [27, 31, 67], "github": 66, "given": [0, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 25, 27, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 44, 45, 49, 50, 51, 56, 65, 67, 69, 70], "glob": [1, 23, 29], "goal": 66, "govern": 29, "gracefulli": 16, "grain": 50, "greater": 69, "greet": [48, 61, 66, 68, 71], "grid": 21, "group": [1, 3, 5, 7, 8, 19, 20, 23, 29, 34, 36, 41, 49, 52, 62, 66, 67, 68, 70], "group_choic": [18, 20], "group_tree_spac": [1, 5, 49, 50], "groupconvert": [1, 7, 11], "grouped_action_flag": [50, 60, 65], "grouped_children": [7, 8, 11], "groupedflag": 65, "grouphelpformatt": [1, 18, 20], "guid": 50, "h": [0, 5, 14, 40, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70], "ha": [0, 3, 6, 16, 33, 48, 50, 65, 67, 68, 70, 71], "had": [0, 15, 49], "had_memb": 11, "handl": [0, 4, 5, 6, 10, 13, 14, 16, 22, 27, 28, 30, 31, 33, 36, 37, 40, 44, 48, 66, 67, 68, 69, 70, 71], "handle_invalid": [23, 28], "handle_kb_interrupt": [1, 16], "handle_long": [1, 44], "handle_my_except": 51, "handle_pass_thru": [1, 44], "handle_posit": [1, 44], "handle_remaind": [1, 44], "handle_short": [1, 44], "handle_win_os_pipe_error": 51, "handler": [1, 4, 16, 24, 25, 27, 28, 29, 30, 66, 67], "happen": [24, 48], "has_ani": [1, 43], "has_choic": [34, 36, 37], "has_local_choic": [34, 37], "has_long": [34, 39], "has_min_opt": [34, 39], "has_nested_pass_thru": [1, 3], "has_parsed_valu": [1, 6], "has_upper_bound": [1, 33], "have": [0, 4, 5, 6, 15, 20, 28, 33, 36, 38, 39, 40, 42, 48, 51, 65, 67, 69, 70], "header": [15, 21, 65], "hello": [48, 52, 63, 66, 68, 69, 71], "hello_world": [61, 66, 68, 71], "helloworld": [48, 71], "helloworldtest": 71, "help": [0, 3, 4, 5, 7, 8, 9, 11, 14, 15, 19, 20, 22, 32, 34, 36, 37, 38, 40, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71], "help_act": [0, 1, 34, 40], "helper": [0, 6, 9, 15, 33, 36, 45, 50, 67, 69], "helpformatt": 9, "here": [4, 37, 40, 42, 49, 67, 68, 69, 70], "hidden": 36, "hide": [7, 11, 34, 36, 38, 65, 69], "hierarchi": 6, "higher": [0, 40, 69], "highest": 5, "hint": [36, 41, 69], "hold": [6, 40, 42, 69], "hoop": 37, "host": [56, 69], "hour": [30, 67], "how": [4, 5, 35, 48, 49, 51, 66, 67, 68, 69, 71], "howev": [48, 70], "html": [0, 50], "http": 66, "hunt": 48, "hypothet": 70, "i": [0, 3, 4, 5, 6, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 57, 62, 65, 66, 67, 68, 69, 70, 71], "i18n": [30, 67], "id": [48, 57, 62, 65], "identifi": [29, 67], "ignor": [1, 5, 14, 27, 36, 40, 49, 65, 67, 69], "ignore_cleanup_error": 45, "ignore_unknown": [1, 5, 14, 49], "ignorecas": [29, 67], "immedi": [27, 67, 69], "imp": 13, "imp_nam": [1, 7, 13], "implement": [4, 14, 40, 48, 49, 61, 67, 68, 69], "impli": [27, 67, 69], "import": [13, 15, 48, 50, 51, 57, 66, 67, 68, 70, 71], "import_modul": [1, 15], "importerror": 15, "importfrom": 13, "improv": 48, "in_fil": [58, 67], "in_mutually_exclusive_group": [34, 38], "includ": [0, 5, 6, 10, 14, 15, 21, 22, 29, 33, 36, 38, 40, 42, 48, 49, 51, 65, 66, 67, 68, 69, 70], "include_abc": [14, 15], "include_default": 6, "include_max": [23, 28, 30, 31, 67], "include_meta": 20, "include_min": [23, 28, 30, 31, 67], "inclus": [20, 28, 67], "incomplet": 16, "inconsist": 31, "incorrect": [13, 30, 49, 67], "increas": [0, 10, 40, 48, 54, 57, 62, 63, 65, 69, 70], "increment": [6, 40, 69], "incur": 48, "indefinit": 65, "indent": [8, 11, 21, 22, 43], "independ": 67, "index": [15, 21, 35, 66], "index_head": 15, "index_nam": 15, "index_subdir": 15, "indic": [5, 6, 27, 37, 49, 50, 51, 65, 67, 69], "individu": [22, 36, 37, 40, 41, 42, 69], "inf": [0, 40, 69], "infer": [5, 14, 49, 68, 69], "infin": 0, "info": [21, 27, 29, 40, 42, 48, 49, 50, 65, 67, 69, 70], "inform": [0, 49, 67, 68, 69], "inherit": [1, 5, 15, 32, 49, 66, 70], "init": [34, 40, 52], "init_call_repr": [7, 8], "init_count": [7, 11], "init_flag": [7, 11], "init_for_ast_cal": [7, 11], "init_func_arg": [7, 8], "init_func_kwarg": [7, 8], "init_func_nam": [7, 8], "init_func_raw_kwarg": [7, 8], "init_group": [7, 11], "init_level": 19, "init_opt": [7, 11], "init_posit": [7, 11], "initi": [0, 4, 6, 8, 21, 37, 38, 40, 49, 50, 65, 66, 67, 69, 70], "initnod": 8, "inner": [38, 65], "input": [0, 1, 5, 6, 7, 10, 24, 25, 26, 27, 28, 29, 30, 31, 44, 52, 66, 69, 71], "inputparam": [1, 23, 31], "inputsexampl": [67, 71], "inputtyp": [1, 23, 24, 26, 27, 28, 29, 30], "inputtypefunc": [40, 42], "inputvalidationerror": [1, 23, 26], "insert": 21, "insid": [0, 38, 51, 65, 66, 68, 69], "inspect": [0, 49], "instal": 69, "install_dir": 69, "instanc": [0, 4, 6, 32, 49, 51], "instanti": [6, 37], "instead": [0, 4, 5, 10, 15, 20, 25, 29, 31, 36, 37, 40, 48, 49, 51, 57, 62, 65, 67, 68, 69, 70], "int": [4, 5, 6, 8, 11, 15, 16, 17, 19, 21, 22, 28, 29, 30, 31, 33, 35, 37, 40, 43, 44, 45, 47, 48, 65, 66, 67, 68, 70, 71], "int_onli": [23, 30], "integ": [28, 33, 40, 47, 67, 69], "intend": [0, 4, 6, 20, 36, 38, 40, 48, 57, 69], "intens": 4, "intent": 71, "intention": 48, "interact": 0, "interfac": 48, "intermedi": 48, "intern": [4, 6, 17, 37], "interpret": [5, 37, 51], "introduc": 66, "introduct": 66, "introspect": 32, "intuit": 48, "invalid": [16, 17, 26, 36, 40, 48, 67, 69], "invalidchoic": [1, 17], "invalidchoiceerror": [1, 23, 26, 30], "invoc": [5, 14, 49, 50], "involv": 3, "io": [45, 66], "is_opt": [7, 11], "is_pass_thru": [7, 11], "is_posit": [7, 11], "is_sub_pars": [7, 11], "is_valid_arg": [34, 36], "is_valid_typ": [23, 24, 28], "isinst": 67, "isn": [45, 67], "iso": [23, 30, 67], "issu": [27, 31, 48, 49, 61, 66, 67, 71], "istr": 22, "item": [5, 13, 49, 57, 67, 70], "iter": [3, 6, 8, 11, 12, 13, 15, 16, 19, 20, 21, 22, 33, 36, 38, 39, 43, 45], "iter_action_flag": [1, 6], "iter_build": [18, 21], "iter_data": 67, "iter_handl": [1, 16], "iter_module_par": [1, 7, 12], "iter_param": [1, 3], "iter_usage_part": [18, 20], "its": [0, 3, 4, 19, 21, 27, 48, 51, 65, 67, 68, 69, 70], "itself": [65, 67], "j": [58, 67, 71], "john": 68, "join": [18, 22, 35, 36, 37, 40, 48, 69], "json": [1, 23, 27, 58, 67], "jump": 37, "just": [22, 51, 65, 67, 69], "k": 58, "keep": 48, "kei": [0, 6, 15, 21, 25, 36, 67, 69], "keyboardinterrupt": [16, 51], "keyword": [0, 4, 5, 6, 9, 15, 21, 27, 36, 37, 40, 41, 42, 48, 49, 51, 69, 70], "know": 0, "known": 48, "kwarg": [0, 4, 5, 6, 8, 11, 14, 15, 20, 21, 25, 27, 30, 32, 35, 36, 37, 40, 41, 42, 45, 47, 49, 50], "l": [57, 62, 70], "lack": 50, "larg": 66, "last": [16, 42, 66, 69], "later": [0, 24, 28, 66, 67], "latest": [23, 30, 67], "lazi": [23, 27, 67], "lead": [5, 15, 30, 67], "leadingdash": [40, 42], "least": [5, 30, 38, 65, 67], "leav": [30, 67], "length": [22, 33], "less": [51, 67, 69], "let": 48, "letter": 65, "level": [0, 5, 14, 15, 21, 38, 48, 49, 65, 66, 69, 70], "levelnam": [48, 70], "lib": 0, "librari": [0, 30, 48, 67], "light": 5, "like": [0, 2, 4, 5, 16, 20, 28, 29, 30, 36, 40, 49, 50, 57, 65, 67, 69], "limit": [62, 70], "line": [5, 6, 16, 20, 22, 49, 50, 53, 67, 69, 70], "line_it": [1, 18, 22], "lineno": [48, 70], "link": [1, 23, 31, 43], "link_param": [1, 43], "list": [0, 3, 4, 6, 8, 11, 12, 14, 15, 20, 21, 22, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 67, 68, 69], "list_attr": [7, 8], "liter": [30, 40, 41, 42], "literal_eval_or_non": [1, 7, 11], "load": [15, 27, 50, 67], "load_command": [1, 15, 45], "local": [23, 30, 34, 37, 67], "local_choic": [37, 70], "locat": 57, "log": [0, 4, 10, 15, 36, 40, 48, 51, 52, 54, 62, 65, 69, 70], "log_fmt": [48, 70], "log_test": 63, "logger": 48, "long": [4, 5, 34, 36, 39, 40, 42, 49, 50, 57, 68, 69, 70], "longer": [48, 70], "look": 48, "loop": [4, 10, 48], "low": 48, "lower": [28, 37, 40, 49, 50, 66, 67, 69, 70], "lpad": [22, 37], "made": [13, 57], "mai": [0, 4, 5, 13, 14, 15, 20, 24, 28, 29, 30, 35, 36, 37, 40, 42, 48, 49, 51, 65, 67, 68, 69, 70, 71], "main": [0, 1, 3, 4, 5, 7, 10, 14, 40, 49, 57, 65, 66, 67, 68, 69, 70, 71], "maintain": [37, 47, 48, 66, 69, 70], "major": [45, 48, 50, 69], "make": [2, 9, 37, 42, 48, 50, 65, 66, 67, 69], "manag": [30, 38, 65, 71], "mangl": 0, "mani": [17, 50, 51, 69], "manner": [30, 66, 67], "map": [3, 14, 15, 17, 21, 25, 37, 49, 67, 70], "mark": [0, 37, 65, 69], "markup": 21, "match": [0, 5, 6, 13, 17, 23, 25, 26, 27, 29, 31, 33, 40, 45, 49, 51, 62, 67, 69, 70], "match_cas": [29, 67], "max": [1, 23, 28, 30, 31, 33, 67], "max_depth": [15, 21], "max_len": 47, "max_reach": [1, 33], "max_val": 31, "max_width": [18, 22], "maximum": [5, 15, 21, 28, 33, 49, 67], "maybe_add_group": [18, 19], "maybe_add_opt": [18, 19], "maybe_add_posit": [18, 19], "maybe_await": [1, 47], "maybe_wrap_usag": [18, 20], "mean": [33, 50], "meant": [4, 36, 37], "meet": 33, "member": [3, 5, 7, 11, 13, 15, 25, 29, 34, 36, 38, 47, 49, 57, 62, 65, 67, 70], "member_typ": [7, 11], "mention": 4, "messag": [0, 1, 14, 17, 30, 36, 38, 40, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "meta": [1, 14], "metaclass": [14, 47], "metadata": [1, 48, 50], "metadatabas": [1, 32], "metavar": [5, 7, 8, 9, 11, 34, 36, 49, 50, 65, 69], "method": [0, 4, 5, 6, 8, 10, 14, 20, 30, 36, 37, 38, 40, 42, 45, 49, 51, 66, 67, 68, 69, 70, 71], "method_or_choic": 37, "methodnam": 45, "methodtyp": 37, "microsecond": [30, 67], "millisecond": [30, 67], "min": [1, 23, 28, 30, 31, 33, 67], "min_index": 30, "min_val": [31, 47], "mind": 48, "minim": 48, "minimum": [22, 28, 33, 39, 67, 69], "minut": [30, 67], "miss": [1, 5, 6, 14, 17, 36, 41, 47, 48, 49, 65], "missing_default": [35, 36, 37], "missing_hint": [34, 36, 41], "missing_options_with_env_var": [1, 6], "missingargu": [1, 6, 17], "missingmixin": [1, 5, 29, 30, 47], "mixin": 70, "mod_cls_to_ast_cls_map": [7, 8], "mod_obj_prog_map": [1, 32], "mode": [5, 20, 23, 27, 29, 31, 67], "modif": [20, 67], "modifi": [48, 67], "modul": [1, 7, 18, 23, 34, 48, 50, 51, 57, 66], "module_templ": 15, "mondai": 67, "month": [1, 23, 30], "more": [2, 4, 15, 17, 21, 22, 27, 29, 33, 37, 40, 42, 48, 49, 50, 51, 66, 67, 68, 69, 70], "most": [0, 5, 16, 37, 38, 48, 69], "mostli": 48, "mro": 14, "msg": [1, 45], "multi": [5, 30, 37, 67], "multiparamusageerror": [1, 17], "multipl": [0, 4, 5, 10, 14, 17, 22, 30, 36, 48, 49, 50, 54, 57, 62, 63, 65, 67, 68, 69, 70], "multiple_action_flag": [1, 5, 14, 49], "multipli": [40, 69], "must": [0, 4, 5, 6, 25, 27, 29, 33, 36, 37, 38, 40, 41, 42, 48, 49, 65, 67, 69, 70], "mutablemap": 43, "mutual": [5, 17, 38, 49, 57, 58, 60, 62, 68], "mutually_depend": [34, 38, 65], "mutually_exclus": [34, 38, 65], "mutuallyexclusivegroup": [1, 7, 8], "myasynccommand": 48, "mycommand": [0, 4, 51, 67, 69], "myenum": 67, "myexcept": 51, "n": [1, 15, 31, 43, 45, 48, 57, 58, 61, 66, 67, 68, 69, 71], "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 15, 21, 23, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 49, 50, 57, 61, 62, 65, 66, 67, 69, 70, 71], "name_a": 45, "name_b": 45, "name_mod": [5, 7, 11, 34, 36, 39, 40, 49, 69], "namefunc": [15, 19], "namespac": [13, 14, 69], "narg": [0, 1, 5, 6, 7, 11, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 65, 69, 70], "nargs_min_and_max": [1, 43], "nargs_min_and_max_sum": [1, 33], "nargs_object": 33, "nargsvalu": [40, 42], "nativ": 0, "natur": 37, "nearest": [28, 67], "necessari": [0, 4, 5, 6, 14, 22, 24, 29, 36, 37, 45, 48, 49, 66, 67], "necessarili": [28, 67, 71], "need": [0, 4, 22, 27, 29, 30, 37, 48, 50, 51, 65, 66, 67, 68, 69, 70, 71], "neg": [0, 40, 42, 67, 69], "neither": [0, 40, 65, 69], "nest": [20, 38, 48, 65], "never": [1, 5, 36, 40, 42, 69, 70], "new": [6, 21, 22, 35, 53, 57, 69], "newlin": 15, "newline_between_memb": [7, 11], "next": [16, 17, 50, 70], "nextcommand": [1, 17], "no_exit_handl": [1, 16, 51], "no_smart_for": [7, 10], "no_wait": 65, "noactivecontext": [1, 6, 17], "node": [8, 12, 13, 17, 43], "nodevisitor": 13, "noisycommand": 69, "non": [39, 67], "non_empti": [1, 5], "none": [1, 2, 3, 4, 5, 6, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 51, 65, 67, 69], "nor": 69, "noreturn": 35, "normal": [1, 5, 21, 23, 25, 27, 28, 29, 32, 36, 40, 42, 48, 65, 67, 69, 71], "normalize_dt": [1, 23, 30], "normcas": [23, 29, 67], "nosuchopt": [1, 17], "notat": 15, "note": [0, 5, 67, 70], "noth": [0, 4, 48], "notimplementederror": 70, "now": 30, "nt": [28, 30], "nullerrorhandl": [1, 6, 16], "num": 11, "num_provid": [1, 6], "number": [0, 4, 5, 6, 22, 28, 30, 31, 33, 35, 37, 39, 40, 42, 44, 48, 49, 50, 51, 57, 58, 61, 62, 66, 67, 68, 69, 70, 71], "numer": [1, 5, 23, 30, 36, 40, 42, 69], "numeric_iso": [23, 30], "numericinput": [1, 23, 28], "numrang": [1, 23, 28], "numtyp": 28, "n\u2080": 69, "n\u2081": 69, "n\u2093": 69, "o": [0, 29, 58, 67], "obj": [32, 47, 70], "obj_map": 15, "object": [0, 3, 5, 6, 8, 11, 13, 14, 15, 16, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 47, 48, 49, 51, 62, 65, 67, 69, 70], "obtain": 6, "obvious": [28, 67], "occur": [0, 4], "offici": 66, "often": [16, 69], "old": 0, "omit": 20, "onc": [48, 66, 70, 71], "one": [0, 4, 5, 13, 15, 17, 20, 25, 26, 28, 29, 33, 36, 38, 40, 48, 50, 65, 67, 68, 69, 70], "ones": [6, 15, 48], "onli": [0, 4, 5, 6, 15, 17, 20, 21, 27, 28, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 49, 50, 51, 62, 65, 67, 68, 69, 70], "open": [0, 27, 50, 67], "oper": 4, "opt": [3, 35], "opt_str": [36, 40], "optcal": 8, "option": [0, 1, 3, 5, 6, 14, 15, 16, 17, 21, 22, 28, 34, 35, 36, 39, 42, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "option_map": [1, 3], "option_name_mod": [1, 5, 7, 11, 36, 40, 49, 69], "option_str": [1, 8, 9, 34, 36, 40, 69], "optionarg": [1, 7, 11], "optionhelpformatt": [1, 18, 20], "optionmap": 3, "optionnamemod": [1, 5, 36, 39, 49, 69], "optionstr": [1, 34, 36, 39], "optstr": [6, 11, 20, 21, 32, 36, 37, 40, 44, 45], "order": [0, 4, 21, 36, 38, 40, 48, 50, 65, 69], "org": [48, 61, 66, 71], "organ": [0, 48, 65, 66, 70], "orient": 48, "origin": [20, 23, 29, 30, 37, 48, 67], "oserror": [15, 51], "other": [0, 4, 5, 15, 17, 20, 28, 30, 36, 37, 38, 40, 41, 48, 49, 50, 51, 64, 65, 68, 70, 71], "otherwis": [0, 15, 27, 28, 33, 35, 36, 38, 40, 42, 48, 65, 67, 69], "out": [50, 58], "out_fil": [58, 67], "out_format": [23, 30, 67], "out_local": [23, 30, 67], "output": [0, 5, 15, 16, 30, 49, 50, 51, 65, 67, 70, 71], "output_dir": 15, "outsid": [28, 65, 67], "outward": 38, "over": [0, 4, 36, 48, 50, 69, 70], "overhead": [45, 48], "overlap": 5, "overli": 70, "overlin": 21, "overrid": [0, 4, 5, 6, 14, 36, 40, 51, 69, 71], "overridden": [4, 15, 24, 28, 48, 49, 67], "overwrit": 4, "own": [68, 70], "p": [58, 62, 67, 70], "packag": [1, 15, 32, 51, 57, 66], "pad": 22, "page": [15, 66], "pair": [15, 21, 25, 40, 67, 69], "param": [0, 1, 5, 6, 10, 14, 15, 17, 18, 19, 34, 35, 36, 38, 39, 41, 43, 44, 49, 69, 70], "param_cl": 20, "param_conflicts_map": 17, "param_formatt": [1, 5, 49], "paramact": [1, 34, 35, 36], "paramarg": [1, 7, 11], "parambas": [1, 34, 36, 38], "parambasearg": [1, 7, 11], "paramconflict": [1, 17], "paramconvert": [1, 7, 11], "paramconvertergroup": [1, 7, 11], "paramet": [1, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 66, 67], "parameter": 47, "parameter_act": [36, 37, 40, 42], "parameterdefinitionerror": [1, 17], "paramgroup": [1, 3, 5, 19, 20, 34, 36, 38, 49, 65, 70], "paramhelpformatt": [1, 5, 18, 20, 36, 49], "paramorgroup": [5, 6, 17, 20, 38], "paramsmiss": [1, 17], "paramusageerror": [1, 17], "parent": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 23, 27, 31, 32, 37, 43, 48, 67, 70], "parent_param": 3, "parenthes": 20, "pars": [1, 3, 4, 5, 6, 17, 23, 24, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 44, 66, 68, 69, 70], "parse_and_await": [1, 4, 48], "parse_and_run": [0, 1, 4, 48, 70, 71], "parse_arg": 69, "parse_args_and_get_next_cmd": [1, 44], "parse_dt": [23, 30], "parse_numer": [23, 30], "parse_tre": 1, "parsed_valu": 33, "parser": [0, 1, 4, 6, 7, 8, 11, 17, 36, 48, 49, 61, 65, 68, 69], "parser_class": 9, "parserarg": [1, 7, 8, 11], "parsercl": 8, "parserconvert": [1, 7, 10, 11], "parserexit": [1, 17], "parserobj": 8, "parsertest": [1, 45], "part": [5, 6, 22, 30, 49, 50, 67], "partial": [17, 37], "particular": [6, 69, 71], "partwrapp": [1, 18, 22], "pass": [0, 4, 6, 15, 21, 27, 28, 36, 37, 40, 41, 42, 44, 49, 51, 67, 68, 69], "pass_fil": [23, 27, 31, 67], "pass_thru": [1, 3, 34], "passthru": [1, 3, 34, 41], "passthruarg": [1, 7, 11], "passthruhelpformatt": [1, 18, 20], "path": [1, 7, 8, 10, 15, 17, 23, 27, 29, 31, 32, 45, 58, 69], "path_repr": [1, 43], "pathlib": 67, "pathlik": [6, 8, 15], "pattern": [1, 23, 45, 48, 62, 66, 70], "patterninput": [1, 23, 29], "pep": 69, "per": 49, "perceptibli": 48, "perform": [4, 5, 15, 17, 40, 42, 49, 67, 69], "permiss": [1, 5, 15, 67], "person": [48, 57, 61, 66, 68, 71], "phase": 6, "pick": [29, 40, 42, 48, 67, 69], "pickl": [1, 23, 27, 67], "pip": 66, "pipe": [16, 51], "pkg_doc_str": [1, 32], "pkg_name": [15, 32], "pkg_path": 15, "place": [4, 17], "placehold": [4, 36, 69], "plain": 67, "pleas": 49, "point": [4, 20, 48, 51, 57, 70], "pop_parsed_valu": [1, 6], "popul": [21, 70], "posit": [0, 1, 3, 4, 5, 9, 14, 20, 34, 36, 37, 40, 44, 47, 48, 49, 53, 54, 55, 56, 57, 59, 62, 63, 65, 67, 68, 70], "position": [36, 42, 69], "positional_onli": 6, "positionalhelpformatt": [1, 18, 20], "positive_int": [1, 47], "posnod": [1, 17, 43], "possibl": [0, 8, 14, 36, 37, 49, 50, 65, 68, 69, 70, 71], "possibli": [4, 16], "potenti": [0, 5, 17, 48, 49], "pprint": [1, 7, 8, 10], "pre": [17, 26, 29, 67], "pre_act": [36, 40], "pre_init": [1, 6], "preced": [0, 35, 36, 40, 41, 42, 49, 50, 69], "prefer": 48, "prefix": [11, 20, 21, 22, 36, 37, 39, 40, 45, 50, 65, 69, 70], "prefix_char": [8, 9], "prepar": [18, 20], "prepare_alias": [18, 20], "prepare_combin": [18, 20], "prepare_rep": [18, 20], "prepare_valu": [34, 36, 40], "presenc": [48, 57], "present": [4, 5, 15, 40, 42, 48, 49, 50, 67, 69, 70], "preserv": 15, "prevent": [0, 5, 14, 49, 51, 66, 69], "primari": [4, 14, 38, 39, 40, 48, 66, 69, 70], "primarili": 20, "primary_option_str": [34, 39], "principl": 68, "print": [0, 10, 16, 40, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 65, 66, 67, 68, 69, 70, 71], "print_tre": [1, 43], "print_twic": 69, "prioriti": [40, 69], "problem": [30, 49, 67], "problemat": [0, 49], "proce": 51, "process": [0, 3, 4, 13, 16, 20, 24, 28, 35, 36, 41, 48, 67, 69, 70], "process_param": [1, 43], "prod": [62, 65, 70], "produc": 70, "prog": [1, 6, 7, 8, 9, 11, 14, 32, 49, 69], "progfind": [1, 32], "program": [4, 5, 14, 16, 27, 30, 32, 37, 48, 49, 57, 67, 68, 69, 70, 71], "programmetadata": [1, 14, 32], "project": [0, 45, 50, 66], "prompt": 16, "propag": [15, 51, 71], "proper": [30, 67], "properti": [3, 5, 6, 8, 10, 11, 20, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 69], "provid": [0, 4, 5, 6, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 48, 49, 50, 53, 59, 65, 66, 67, 68, 69, 70, 71], "proxi": 6, "pseudo": 47, "purpos": [5, 48], "put": 70, "putti": 50, "py": [0, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "pypi": 66, "python": [15, 30, 31, 48, 67], "qa": [62, 65, 70], "qualifi": 13, "qualnam": [5, 6, 29, 30, 31, 47], "queri": [62, 70], "question": 67, "quickli": [14, 66], "quot": [37, 70], "r": [27, 31, 57, 58, 62, 65, 67, 69, 70], "rais": [4, 5, 6, 14, 15, 16, 17, 26, 28, 36, 37, 38, 40, 45, 49, 51, 65, 67, 69, 70], "ran": 4, "rang": [1, 23, 28, 33, 58, 66, 68, 69, 70, 71], "range_str": [1, 23, 31], "rangemixin": [1, 23, 28, 30, 31], "rather": [45, 68], "raw": 6, "raw_path": [1, 43], "rb": [27, 67], "re": [0, 6, 15, 29, 51, 66, 67, 70], "read": [5, 23, 27, 31, 49, 58, 67, 69], "read_onli": 5, "readabl": [23, 27, 66, 67], "readi": 4, "real": 35, "reason": 48, "receiv": [44, 67], "recommend": [4, 48, 67], "record_act": [1, 6], "recurs": [6, 43], "redefin": 4, "redirect_stderr": 71, "redirect_stdout": 71, "redirectstream": [1, 45, 71], "reduc": [22, 66], "redund": 67, "ref": 13, "refactor": 65, "refer": [0, 4, 14, 15, 38, 48], "referenc": 15, "regardless": [5, 14, 48, 70], "regex": [1, 23, 29, 45], "regexmod": [1, 23, 29, 67], "regexresult": 29, "region": 70, "regist": [0, 1, 4, 5, 13, 14, 16, 34, 36, 37, 38, 39, 40, 42, 49, 51, 69, 70], "register_act": [34, 37], "register_al": [34, 38], "register_choic": [34, 37], "register_command": [34, 37], "register_default_cb": [0, 34, 36, 37, 40], "register_pars": [7, 8], "registr": [49, 69], "regular": [27, 29, 67], "reject": [5, 24, 28, 40, 42, 49, 69], "reject_ambiguous_pos_combo": [1, 5, 49], "rel": [13, 15, 40, 69, 70], "relat": [5, 29, 31, 49, 51, 62, 65, 67, 70], "releas": [14, 66], "relev": [66, 70], "remain": [1, 35, 41, 43, 66, 69], "remaind": [33, 35, 41, 69], "remot": 50, "remov": [0, 57], "renam": 48, "render_command_rst": [1, 15, 50], "render_script_rst": [1, 15, 50], "repeat": [1, 5, 20, 61, 65, 66, 68, 70, 71], "replac": [5, 15, 48, 50], "repo": 51, "report": 49, "repr": [36, 47], "repr_attr": 36, "repres": [0, 5, 7, 8, 20, 21, 29, 35, 36, 48, 67, 69], "represent": 30, "representedcal": 8, "request": 6, "requir": [0, 5, 7, 8, 9, 11, 14, 17, 20, 25, 33, 34, 36, 37, 38, 39, 40, 42, 48, 49, 65, 66, 67, 69], "required_check_param": [1, 3], "required_formatter_map": [18, 20], "resolv": [4, 13, 23, 27, 31, 67], "resolve_ref": [7, 13], "resourc": 4, "respect": [0, 5, 28, 49, 67, 69], "respons": 48, "rest": [48, 52, 70], "rest_api_wrapp": [62, 65, 70], "restart": 69, "restrict": [25, 27, 67, 69], "restructured_text": [1, 18], "result": [0, 4, 5, 6, 13, 15, 17, 27, 29, 30, 34, 36, 37, 48, 49, 50, 51, 62, 63, 65, 67, 68, 69, 70, 71], "retriev": [0, 6], "return": [0, 4, 5, 6, 14, 15, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 36, 37, 39, 40, 42, 44, 48, 49, 51, 67, 69, 70], "return_command": 4, "reusabl": 70, "revers": [53, 69], "rightmost": 5, "rmtree": 69, "role": [57, 62, 65], "roll_back_parsed_valu": [1, 6], "roughli": 69, "row": [18, 21], "rowmap": 21, "rst": [0, 15, 19, 20, 21, 49, 63, 68], "rst_bar": [1, 18, 21], "rst_direct": [1, 18, 21], "rst_header": [1, 18, 21], "rst_list_tabl": [1, 18, 21], "rst_path": 50, "rst_row": [18, 20], "rst_str": 15, "rst_tabl": [18, 20], "rst_toc_tre": [1, 18, 21], "rst_usag": [18, 20], "rsttabl": [1, 18, 20, 21], "rstwriter": [1, 15], "rubric": 21, "rule": 65, "run": [4, 5, 6, 14, 27, 49, 51, 52, 56, 57, 62, 65, 67, 68, 69, 70, 71], "runtest": 45, "runtim": 0, "runtimeerror": [4, 17], "safe": [4, 48], "sai": [48, 57, 61, 66, 68, 69, 71], "same": [0, 5, 16, 20, 33, 36, 37, 40, 42, 47, 48, 49, 50, 65, 67, 69, 70, 71], "satisfi": [1, 33], "save": [15, 67, 68], "save_command_rst": 50, "scale": [22, 66], "scope": [1, 7, 13, 50], "scopedvisit": [1, 7, 13], "screenshot": 50, "script": [0, 1, 5, 7, 8, 10, 11, 15, 49, 50, 51, 66, 68, 70, 71], "script_path": 50, "scriptconvert": [1, 7, 11], "scriptvisitor": [1, 7, 13], "sealed_mock": [1, 45], "search": [29, 36, 66, 67, 69], "second": [21, 30, 65, 67], "section": [0, 5, 21, 37, 49, 50, 67, 69, 70], "see": [0, 21, 27, 29, 40, 42, 48, 49, 50, 65, 67, 68, 69, 70, 71], "seen": 67, "select": [16, 48, 70], "self": [0, 36, 40, 48, 65, 66, 67, 68, 69, 70, 71], "sens": [37, 48, 69], "sensit": [25, 29, 67], "sep": 47, "separ": [4, 5, 15, 22, 37, 40, 41, 49, 51, 67, 69, 70], "sequenc": [4, 5, 6, 21, 28, 30, 33, 35, 36, 49, 69], "serial": [1, 23, 27], "servic": 69, "set": [5, 6, 8, 17, 25, 27, 33, 36, 39, 43, 48, 49, 50, 57, 65, 66, 67, 69, 70], "set_const": [34, 35], "set_parsed_valu": [1, 6], "set_valu": [34, 35], "setlocal": [30, 67], "setter": 69, "share": [48, 52, 69], "shared_logging_init": 63, "short": [3, 5, 17, 34, 35, 36, 39, 40, 49, 50, 68, 69], "short_alt": [34, 39], "short_combo": [36, 40], "short_option_to_param_value_pair": [1, 3], "short_primari": [34, 39], "short_repr": [1, 47], "shortcut": 69, "should": [0, 4, 5, 6, 14, 15, 22, 24, 25, 27, 28, 29, 30, 36, 37, 40, 42, 44, 48, 49, 51, 56, 64, 67, 69, 70], "show": [0, 1, 5, 15, 17, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70], "show_al": 70, "show_default": [1, 5, 34, 36, 49, 69], "show_docstr": [1, 5, 49], "show_env_var": [1, 5, 34, 36, 49, 69], "show_group_tre": [1, 5, 22, 49, 50], "show_group_typ": [1, 5, 49, 65], "show_in_help": [34, 36, 37, 38], "show_inherited_descript": [1, 5, 49], "show_titl": [18, 21], "showdefault": [1, 5, 49], "shown": [5, 49, 69, 70], "shutil": 69, "side": [4, 28, 67], "signatur": [0, 6, 7, 8, 9, 48], "silent": 6, "similar": [5, 6, 25, 36, 37, 40, 48, 49, 51, 65, 67, 69, 70], "similarli": [4, 48, 65], "simpl": [0, 15, 48, 52, 58, 61, 66, 68, 69, 71], "simple_flag": [64, 69], "simpler": 4, "simpli": [20, 65], "simplifi": [0, 8, 45, 57, 69, 70], "simplist": 70, "sinc": [0, 28, 48, 49, 65, 67, 69, 70], "singl": [5, 6, 14, 15, 20, 21, 25, 36, 40, 42, 44, 50, 67, 68, 69], "situat": [31, 48, 70], "size": [5, 49], "skip": [4, 15, 58], "skip_modul": 15, "skrypa": [2, 3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57], "slower": 48, "smart": 10, "smart_loop_handl": [8, 13], "snake_cas": [15, 37, 70], "snap": [23, 28, 67], "snap_dir": 28, "snippet": [0, 65, 67], "so": [0, 4, 20, 29, 33, 35, 36, 37, 38, 48, 49, 50, 53, 57, 65, 66, 67, 69, 70, 71], "socket": [23, 31], "some": [0, 3, 14, 30, 31, 48, 49, 50, 66, 67, 69, 70, 71], "someth": 50, "sometim": [0, 67, 71], "sort": [5, 16, 30, 49], "sort_choic": [1, 5, 24, 28, 29, 30, 49], "sourc": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 66, 69], "sp_parent": [7, 8], "space": [0, 22, 37, 41, 69, 70], "spaced_rst_head": [1, 18, 21], "spacer": [5, 49], "spam": 64, "span": 22, "special": [0, 48, 66, 69, 71], "specif": [0, 16, 27, 29, 33, 40, 42, 48, 51, 67, 69, 70], "specifi": [0, 3, 4, 5, 6, 10, 14, 15, 21, 27, 29, 30, 33, 36, 37, 40, 42, 44, 48, 49, 50, 51, 54, 57, 58, 62, 63, 65, 67, 68, 69, 70], "sphinx": [0, 50], "sphinx_build": 0, "split": [3, 35, 50, 53, 69, 70], "split_action_flag": [1, 3], "src_text": 8, "stack": [0, 40, 51], "standalon": 30, "standard": 48, "start": [5, 6, 28, 29, 30, 31, 38, 47, 66, 67], "state": [44, 69], "statement": [13, 67], "static": [36, 40, 69], "statmod": [1, 23, 27, 31, 67], "statu": 17, "stderr": [1, 45, 51, 71], "stdin": [27, 45, 67, 71], "stdlib": [45, 66], "stdout": [1, 27, 45, 59, 67, 71], "stem": [14, 15], "step": [48, 58, 67], "still": [0, 15, 24, 28, 35, 36, 49, 71], "stop": [28, 67], "store": [0, 1, 4, 6, 24, 25, 27, 28, 34, 35, 36, 37, 38, 40, 42, 49, 67, 69, 70], "store_al": [35, 41], "store_const": [0, 35, 40, 69], "storeal": [1, 34, 35], "storeconst": [1, 34, 35], "str": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 67], "str_to_bool": [1, 47], "stream": 71, "strict": [1, 5, 17, 31, 49], "strict_default": [34, 36], "strict_env": [34, 36, 40, 69], "strict_usage_column_width": [1, 5, 49, 50], "strictli": 50, "string": [0, 5, 15, 20, 21, 22, 23, 25, 27, 29, 30, 35, 36, 37, 39, 40, 42, 45, 47, 48, 49, 50, 67, 68, 69], "strip": 32, "striter": 22, "strptime": 30, "sub": [37, 51, 69], "sub_cmd": [0, 48, 65, 70], "sub_cmd_choic": 19, "sub_cmd_doc_depth": [1, 5, 49], "sub_command": [1, 3], "sub_pars": [7, 8], "sub_parser_convert": [7, 11], "sub_text": 45, "subclass": [4, 5, 14, 15, 24, 25, 28, 37, 39, 48, 49, 67, 70], "subcommand": [0, 1, 3, 4, 5, 14, 15, 16, 19, 20, 34, 36, 37, 38, 48, 49, 50, 52, 65, 66], "subcommandaliashelpmod": [1, 5, 20, 49], "subdir": 15, "subdirectori": 15, "subpars": [1, 7, 8, 10], "subparsersact": [1, 7, 8, 9], "subprocess": [0, 69], "subsequ": [5, 20], "subtitl": [18, 21], "success": 71, "successfulli": [5, 49], "suffici": 0, "suffix": [15, 20, 45], "suit": [37, 69], "sundai": 67, "super": [4, 48], "support": [0, 4, 5, 20, 28, 36, 37, 40, 41, 42, 49, 50, 65, 66, 67, 68, 69, 70], "suppress": [9, 69], "sure": [48, 50], "sy": [4, 14, 16, 48, 49, 51, 67, 68, 71], "symlink": [27, 67], "sync": [52, 65, 70], "synchron": [4, 48], "system": [30, 67], "systemexit": 71, "t": [14, 21, 24, 25, 27, 29, 30, 37, 45, 47, 48, 66, 67, 69, 70], "t_co": [36, 40], "ta": 40, "tabl": [15, 21], "tail": 16, "take": [0, 10, 15, 17, 36, 37, 40, 41, 42, 48, 49, 50, 51, 57, 62, 65, 69, 70], "take_act": 24, "taken": [0, 4, 6, 10, 15, 36, 40, 57, 62, 65, 69], "target": [1, 4, 5, 17, 20, 34, 37, 43, 69, 70], "task": [4, 48, 65, 66], "taskrunn": 65, "tc": 40, "td": [35, 36, 37, 40], "technic": [0, 37, 69], "temporari": 30, "temporarili": 71, "temporarydir": [1, 45], "temporarydirectori": 45, "term_width": 22, "termin": [0, 1, 5, 6, 16, 47, 49, 50], "terminal_width": [1, 6, 45], "ternari": [40, 69], "test": [0, 1, 14, 48, 65, 66, 67], "test_cas": [1, 45], "test_custom_input_json_stdin": 71, "test_hello_default": 71, "test_hello_test": 71, "test_parse_count": 71, "test_parse_name_and_count": 71, "testcas": [45, 71], "text": [0, 3, 5, 14, 15, 19, 20, 21, 22, 27, 32, 36, 37, 38, 40, 44, 45, 47, 48, 53, 59, 65, 66, 67, 69, 70], "textio": 27, "than": [22, 45, 48, 49, 50, 51, 67, 68, 69], "thei": [0, 4, 5, 6, 14, 20, 28, 33, 36, 37, 38, 48, 49, 50, 57, 65, 67, 68, 69, 70, 71], "them": [0, 10, 15, 20, 28, 37, 41, 48, 51, 57, 62, 65, 67, 69, 70, 71], "therefor": 69, "thereof": [15, 39, 48], "thi": [0, 3, 4, 5, 6, 8, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "those": [0, 4, 6, 15, 40, 48, 67, 69, 70], "thread": [30, 67], "three": 51, "through": [4, 37, 51, 67], "thru": 41, "tild": [27, 67], "time": [0, 1, 10, 23, 40, 45, 48, 54, 57, 61, 62, 63, 65, 66, 68, 69, 70, 71], "timedelta": [1, 23, 30], "titl": [8, 9, 15, 18, 21, 34, 37, 49, 69, 70], "to_cal": 6, "to_str": [7, 11], "toctre": [15, 21], "togeth": [20, 69], "too": [5, 17], "took": 17, "tool": [16, 48, 50, 66], "toomanyargu": [1, 17], "top": [5, 14, 15, 48, 49, 69, 70], "top_level_command": [1, 15], "top_onli": 15, "total": [4, 44], "trace": 51, "traceback": 51, "track": [6, 13], "track_cal": [7, 13], "track_ref": 13, "track_refs_to": [7, 13], "tracked_ref": 8, "trackedref": [1, 7, 13], "trackedrefmap": [8, 13], "tracker": [49, 66], "transfer": 16, "transform": [40, 42, 67, 69], "translat": 50, "treat": [5, 21, 36, 51, 67], "tree": [15, 21, 66], "tri": 51, "triflag": [1, 34, 39, 40], "triflaghelpformatt": [1, 18, 20], "triflagoptionstr": [1, 34, 39, 40], "trigger": [4, 40, 71], "trim": 45, "trinari": [40, 69], "true": [0, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 48, 49, 50, 51, 64, 65, 67, 69], "truncat": 67, "truthi": [1, 5, 39, 40, 51, 69], "tupl": [2, 3, 5, 8, 11, 13, 20, 29, 30, 32, 33, 36, 39, 40, 43, 45, 49, 67, 69], "twice": [0, 53, 69], "two": [0, 20, 40, 69, 70], "txt": 67, "type": [1, 2, 5, 6, 7, 8, 9, 11, 14, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 45, 47, 48, 49, 62, 66, 69, 70], "type_str": 26, "typefunc": 25, "typic": [40, 69], "u": [0, 66], "uat": [62, 65, 70], "uco": 0, "unabl": 51, "unbound": [42, 69], "unchang": [36, 37], "under": 69, "underscor": [0, 1, 5, 49], "understand": 67, "undoc": 15, "unexpect": [16, 30, 67], "unhandl": 71, "unifi": 33, "union": 36, "uniqu": 69, "unit": [23, 30, 45, 66, 67, 71], "unittest": 71, "unknown": [5, 14, 49], "unless": [40, 49, 65, 69], "unlik": 65, "unlimit": [15, 21], "unrecogn": 70, "unregist": [1, 16], "unsur": 66, "up": [0, 48, 66], "updat": [0, 34, 39, 48, 50, 52, 66], "update_alt": [34, 39], "update_nod": [1, 43], "upon": [27, 36, 67], "upper": [28, 67], "upper_bound": [1, 33], "url": [1, 5, 32, 49], "us": [0, 3, 4, 5, 6, 8, 9, 14, 15, 17, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 42, 44, 47, 49, 50, 51, 57, 61, 65, 66, 67, 68, 69, 70, 71], "usag": [1, 5, 6, 7, 9, 11, 14, 19, 20, 22, 32, 36, 38, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "usage_column_width": [1, 5, 49, 50], "usage_cont_ind": 22, "usage_delim": 22, "usage_part": 22, "usage_width": 22, "usageerror": [1, 17, 45, 67], "use_auto_long_opt_str": [7, 11], "use_cmd": [34, 36], "use_env_valu": [34, 36, 40, 69], "use_repr": 30, "use_table_direct": [18, 21], "use_type_metavar": [1, 5, 49], "use_windows_fix": [23, 27, 67], "user": [5, 6, 17, 36, 37, 38, 40, 42, 48, 51, 52, 62, 65, 67, 69, 70], "usual": [49, 51, 68, 69], "utf": [15, 50], "util": [1, 2, 7, 14, 15, 18, 21, 23, 27], "v": [0, 29, 48, 50, 54, 57, 62, 63, 65, 67, 69, 70], "v2": 69, "val_count": 6, "valid": [4, 5, 16, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 40, 42, 48, 65, 69], "validated_path": [23, 27], "valu": [5, 6, 8, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 50, 51, 65, 66, 67, 69, 70], "value_gt_max": [23, 31], "value_lt_min": [23, 31], "value_pad": 21, "valueerror": [26, 28, 30], "valuemixin": [1, 34, 35], "var": [5, 31, 36, 69], "var_keyword": [0, 6], "var_posit": 6, "variabl": [0, 1, 5, 6, 13, 20, 33, 35, 36, 40, 42, 48, 49, 69], "variat": 68, "vast": 48, "verbatim": [5, 40, 69], "verbos": [0, 7, 10, 48, 51, 54, 57, 62, 63, 65, 69, 70], "veri": [0, 48, 50, 66, 67], "versa": [38, 65], "version": [1, 4, 5, 31, 32, 35, 37, 45, 48, 49, 65, 69], "vertic": 5, "very_long_nam": 50, "via": [0, 4, 15, 24, 27, 35, 36, 37, 40, 42, 47, 48, 49, 50, 66, 67, 69, 70, 71], "vice": [38, 65], "view": 70, "violat": 28, "visit_assign": [7, 13], "visit_asyncfor": [7, 13], "visit_asyncfunctiondef": [7, 13], "visit_cal": [7, 13], "visit_classdef": [7, 13], "visit_for": [7, 13], "visit_func": [1, 7, 8], "visit_functiondef": [7, 13], "visit_import": [7, 13], "visit_importfrom": [7, 13], "visit_lambda": [7, 13], "visit_whil": [7, 13], "visit_withitem": [7, 13], "visitor": [1, 7, 8], "visual": [5, 49, 50], "vv": 69, "w": [50, 60, 65, 67], "wa": [0, 4, 5, 6, 8, 13, 14, 15, 16, 17, 20, 21, 26, 28, 31, 35, 36, 37, 38, 40, 42, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69], "wai": [0, 4, 5, 6, 16, 31, 33, 37, 48, 65, 67, 68, 69, 70], "wait": 65, "want": [0, 37, 50, 69], "warn": [36, 40, 69], "wasn": 69, "wcwidth": 66, "we": [0, 48, 50, 65, 67, 68, 70, 71], "web": 0, "week": [30, 67], "weekdai": [30, 67], "well": [4, 48, 49, 66, 68, 69, 70], "were": [0, 4, 5, 6, 13, 17, 20, 35, 36, 39, 44, 48, 49, 51, 65, 66, 67, 68, 69], "what": [13, 14, 22, 25, 37, 48, 49, 50, 67, 70], "whatev": 48, "when": [0, 3, 4, 5, 6, 14, 15, 17, 22, 24, 26, 27, 28, 29, 31, 35, 36, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71], "whenev": [40, 69], "where": [0, 5, 8, 21, 24, 25, 28, 29, 35, 37, 38, 49, 51, 67, 69, 70], "whether": [0, 4, 5, 6, 14, 15, 20, 25, 27, 28, 29, 36, 38, 39, 40, 42, 45, 49, 64, 65, 66, 67, 69], "which": [0, 4, 5, 6, 13, 14, 15, 27, 28, 30, 35, 37, 40, 42, 45, 48, 49, 50, 51, 56, 65, 67, 69, 70], "while": [0, 6, 15, 17, 37, 40, 48, 66, 69, 70], "why": 48, "wide": 66, "width": [1, 5, 6, 18, 21, 47, 49, 50], "window": [27, 30, 50, 51, 67], "within": [0, 48, 50, 51, 67, 71], "without": [0, 4, 5, 36, 37, 38, 41, 48, 51, 67, 68, 69, 70, 71], "won": 70, "word": [1, 15, 17, 37, 43, 53, 69], "work": [0, 4, 38, 47, 48, 51, 71], "world": [48, 52, 57, 66, 68, 69, 71], "would": [0, 5, 6, 10, 13, 15, 17, 22, 24, 28, 36, 40, 48, 49, 50, 51, 57, 62, 65, 67, 68, 69, 70, 71], "would_accept": [24, 28, 34, 35], "wrap": [5, 14, 20, 22, 28, 37, 49, 67], "wrap_error": 27, "wrap_usage_str": [1, 5, 49], "wrapper": [2, 16, 52, 69, 70], "writabl": [23, 27, 67], "write": [15, 23, 27, 29, 31, 48, 50, 58, 59, 67, 71], "write_index": [1, 15], "write_rst": [1, 15], "written": [15, 21, 27], "wx": 65, "wxy": 65, "wxyz": 65, "x": [60, 65, 70], "y": [60, 65], "ye": [40, 69], "yield": [6, 20], "you": [0, 4, 30, 37, 48, 50, 66, 67, 68, 69, 71], "your": [0, 30, 48, 66, 67], "z": [60, 65]}, "titles": ["Advanced Usage", "API Documentation", "Annotations Module", "Command_Parameters Module", "Commands Module", "Config Module", "Context Module", "Conversion Package", "Argparse_Ast Module", "Argparse_Utils Module", "Cli Module", "Command_Builder Module", "Utils Module", "Visitor Module", "Core Module", "Documentation Module", "Error_Handling Module", "Exceptions Module", "Formatting Package", "Commands Module", "Params Module", "Restructured_Text Module", "Utils Module", "Inputs Package", "Base Module", "Choices Module", "Exceptions Module", "Files Module", "Numeric Module", "Patterns Module", "Time Module", "Utils Module", "Metadata Module", "Nargs Module", "Parameters Package", "Actions Module", "Base Module", "Choice_Map Module", "Groups Module", "Option_Strings Module", "Options Module", "Pass_Thru Module", "Positionals Module", "Parse_Tree Module", "Parser Module", "Testing Module", "Typing Module", "Utils Module", "Commands", "Configuration", "Documentation", "Error Handling", "Example Scripts", "Action With Args", "Advanced Subcommand", "Basic Subcommand", "Command Wrapper", "Complex Example", "Custom Inputs", "Echo", "Grouped Action Flags", "Hello World", "Rest Api Wrapper", "Shared Logging Init", "Simple Flags", "Parameter Groups", "CLI Command Parser", "Input Types", "Getting Started", "Parameters", "Subcommands", "Testing Commands"], "titleterms": {"With": 53, "__init__": 48, "_before_main_": 48, "_init_command_": 48, "_sunder_": 48, "access": 0, "action": [0, 35, 53, 60, 69], "actionflag": [0, 49, 69], "advanc": [0, 48, 51, 54, 66], "annot": 2, "api": [1, 62], "applic": 48, "arg": [0, 53], "argparse_ast": 8, "argparse_util": 9, "argument": 0, "asyncio": 48, "attribut": 48, "automat": 70, "bar": [54, 55, 57, 62], "base": [24, 36], "basic": 55, "baz": [54, 62], "breakdown": 50, "build": 66, "choic": [25, 67], "choice_map": 37, "choicemap": 67, "cli": [10, 66], "combin": 65, "command": [4, 19, 48, 49, 56, 66, 71], "command_build": 11, "command_paramet": 3, "common": 70, "compat": 66, "complex": 57, "config": 5, "configur": [49, 51, 66], "context": [0, 6], "convers": 7, "core": 14, "counter": 69, "custom": 58, "dai": 67, "date": 67, "datetim": 67, "default": 0, "defin": [48, 51], "depend": 65, "dictionari": 0, "document": [1, 15, 49, 50, 66], "dynam": 0, "echo": 59, "entri": 68, "enumchoic": 67, "error": [49, 51], "error_handl": 16, "exampl": [52, 57, 65, 66], "except": [17, 26], "exclus": 65, "explicit": 70, "file": [27, 67], "find": 62, "flag": [60, 64, 69], "foo": [54, 55, 57, 62], "format": [18, 50], "full": 67, "gener": [49, 50], "get": 68, "glob": 67, "group": [38, 50, 57, 60, 65], "guid": 66, "handl": [49, 51], "handler": 51, "hello": [57, 61], "help": [49, 50, 68], "helper": 71, "how": 65, "indic": 66, "inherit": 48, "init": 63, "initi": 48, "input": [23, 58, 67], "instal": 66, "link": 66, "list": 50, "log": [57, 63], "main": 48, "manual": 67, "metadata": [32, 49], "method": 48, "mix": 0, "modul": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "month": 67, "mutual": 65, "name": [0, 68], "narg": 33, "nest": 70, "numer": [28, 67], "numrang": 67, "option": [40, 49, 69], "option_str": 39, "other": [67, 69], "outer": 65, "overrid": 48, "overridden": 0, "packag": [7, 18, 23, 34], "param": 20, "paramet": [0, 34, 49, 50, 65, 68, 69, 70], "pars": [0, 48, 49, 67, 71], "parse_tre": 43, "parser": [44, 66], "pass_thru": 41, "passthru": 69, "path": 67, "pattern": [29, 67], "point": 68, "posit": [42, 69], "post": 0, "program": 66, "python": 66, "rang": 67, "raw": 0, "regex": 67, "registr": 70, "rest": 62, "restructured_text": 21, "restructuredtext": 50, "rst": 50, "run": [0, 48, 54], "script": 52, "serial": 67, "share": [63, 70], "show": [62, 63], "simpl": 64, "start": 68, "subcommand": [54, 55, 57, 62, 63, 69, 70], "support": 48, "sync": 62, "tabl": 66, "test": [45, 71], "text": [49, 50, 68], "time": [30, 67], "timedelta": 67, "triflag": 69, "type": [46, 65, 67, 68], "updat": 57, "us": 48, "usag": [0, 49], "user": [57, 66], "util": [12, 22, 31, 47], "valid": 67, "valu": 0, "version": 66, "visitor": 13, "work": 65, "world": 61, "wrapper": [56, 62]}})